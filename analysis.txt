Flat profile:

Each sample counts as 0.01 seconds.
  %   cumulative   self              self     total           
 time   seconds   seconds    calls  ms/call  ms/call  name    
 61.54      0.08     0.08        2    40.00    40.00  cimg_library::CImg<unsigned char>::deriche(float, int, char, bool)
 15.39      0.10     0.02   480000     0.00     0.00  rgb::getHsv()
  7.69      0.11     0.01  2404128     0.00     0.00  cimg_library::CImg<unsigned char>::operator()(unsigned int, unsigned int, unsigned int)
  7.69      0.12     0.01   480000     0.00     0.00  getRgb(cimg_library::CImg<unsigned char>&, int, int)
  7.69      0.13     0.01        1    10.00    12.00  booleanEdgeDetect(cimg_library::CImg<unsigned char>&)
  0.00      0.13     0.00  1441563     0.00     0.00  cimg_library::CImg<unsigned char>::height() const
  0.00      0.13     0.00   521897     0.00     0.00  std::abs(float)
  0.00      0.13     0.00   480000     0.00     0.00  MAX3(int, int, int)
  0.00      0.13     0.00   480000     0.00     0.00  MIN3(int, int, int)
  0.00      0.13     0.00   480000     0.00     0.00  hsv::compare(hsv, float, float)
  0.00      0.13     0.00     4203     0.00     0.00  cimg_library::CImg<unsigned char>::data(unsigned int, unsigned int, unsigned int, unsigned int)
  0.00      0.13     0.00     2802     0.00     0.00  cimg_library::CImg<unsigned char>::width() const
  0.00      0.13     0.00     1783     0.00     0.00  point&& std::forward<point>(std::remove_reference<point>::type&)
  0.00      0.13     0.00     1324     0.00     0.00  __gnu_cxx::__normal_iterator<point const*, std::vector<point, std::allocator<point> > >::__normal_iterator(point const* const&)
  0.00      0.13     0.00     1324     0.00     0.00  __gnu_cxx::__normal_iterator<point const*, std::vector<point, std::allocator<point> > >::base() const
  0.00      0.13     0.00     1312     0.00     0.00  setRgb(cimg_library::CImg<unsigned char>&, int, int, rgb)
  0.00      0.13     0.00     1224     0.00     0.00  operator new(unsigned long, void*)
  0.00      0.13     0.00     1204     0.00     0.00  std::vector<point, std::allocator<point> >::size() const
  0.00      0.13     0.00     1101     0.00     0.00  std::remove_reference<point&>::type&& std::move<point&>(point&)
  0.00      0.13     0.00     1052     0.00     0.00  std::move_iterator<point*>::base() const
  0.00      0.13     0.00      914     0.00     0.00  std::vector<point, std::allocator<point> >::operator[](unsigned long)
  0.00      0.13     0.00      662     0.00     0.00  bool __gnu_cxx::operator==<point const*, std::vector<point, std::allocator<point> > >(__gnu_cxx::__normal_iterator<point const*, std::vector<point, std::allocator<point> > > const&, __gnu_cxx::__normal_iterator<point const*, std::vector<point, std::allocator<point> > > const&)
  0.00      0.13     0.00      662     0.00     0.00  std::vector<point, std::allocator<point> >::end() const
  0.00      0.13     0.00      662     0.00     0.00  std::vector<point, std::allocator<point> >::begin() const
  0.00      0.13     0.00      662     0.00     0.00  std::vector<point, std::allocator<point> >::empty() const
  0.00      0.13     0.00      659     0.00     0.00  point::point(int, int)
  0.00      0.13     0.00      659     0.00     0.00  point::~point()
  0.00      0.13     0.00      659     0.00     0.00  __gnu_cxx::new_allocator<point>::destroy(point*)
  0.00      0.13     0.00      659     0.00     0.00  void __gnu_cxx::new_allocator<point>::construct<point>(point*, point&&)
  0.00      0.13     0.00      659     0.00     0.00  void std::vector<point, std::allocator<point> >::emplace_back<point>(point&&)
  0.00      0.13     0.00      659     0.00     0.00  std::vector<point, std::allocator<point> >::pop_back()
  0.00      0.13     0.00      659     0.00     0.00  std::vector<point, std::allocator<point> >::push_back(point&&)
  0.00      0.13     0.00      526     0.00     0.00  bool std::operator==<point*>(std::move_iterator<point*> const&, std::move_iterator<point*> const&)
  0.00      0.13     0.00      526     0.00     0.00  bool std::operator!=<point*>(std::move_iterator<point*> const&, std::move_iterator<point*> const&)
  0.00      0.13     0.00      508     0.00     0.00  std::vector<possibleCenter, std::allocator<possibleCenter> >::size() const
  0.00      0.13     0.00      456     0.00     0.00  square(float)
  0.00      0.13     0.00      442     0.00     0.00  std::move_iterator<point*>::operator*() const
  0.00      0.13     0.00      442     0.00     0.00  std::move_iterator<point*>::operator++()
  0.00      0.13     0.00      442     0.00     0.00  _ZSt10_ConstructI5pointIS0_EEvPT_DpOT0_
  0.00      0.13     0.00      442     0.00     0.00  point* std::__addressof<point>(point&)
  0.00      0.13     0.00      430     0.00     0.00  std::vector<possibleCenter, std::allocator<possibleCenter> >::operator[](unsigned long)
  0.00      0.13     0.00      393     0.00     0.00  possibleCenter::compare(precisePoint, float)
  0.00      0.13     0.00      228     0.00     0.00  precisePoint::distanceTo(point)
  0.00      0.13     0.00      228     0.00     0.00  std::sqrt(float)
  0.00      0.13     0.00      170     0.00     0.00  findPerpendicularLine(point, point)
  0.00      0.13     0.00      168     0.00     0.00  __gnu_cxx::__normal_iterator<point*, std::vector<point, std::allocator<point> > >::base() const
  0.00      0.13     0.00      168     0.00     0.00  std::move_iterator<point*>::move_iterator(point*)
  0.00      0.13     0.00      168     0.00     0.00  std::move_iterator<point*> std::make_move_iterator<point*>(point* const&)
  0.00      0.13     0.00      155     0.00     0.00  std::isnan(float)
  0.00      0.13     0.00      146     0.00     0.00  std::isfinite(float)
  0.00      0.13     0.00      144     0.00     0.00  std::_Vector_base<point, std::allocator<point> >::_M_get_Tp_allocator()
  0.00      0.13     0.00      126     0.00     0.00  __gnu_cxx::new_allocator<point>::max_size() const
  0.00      0.13     0.00       85     0.00     0.00  findEquidistant(point, point, point)
  0.00      0.13     0.00       85     0.00     0.00  findIntersection(line, line)
  0.00      0.13     0.00       84     0.00     0.00  __gnu_cxx::__normal_iterator<point*, std::vector<point, std::allocator<point> > >::__normal_iterator(point* const&)
  0.00      0.13     0.00       84     0.00     0.00  std::_Vector_base<point, std::allocator<point> >::_M_get_Tp_allocator() const
  0.00      0.13     0.00       84     0.00     0.00  std::vector<point, std::allocator<point> >::max_size() const
  0.00      0.13     0.00       84     0.00     0.00  point* std::__uninitialized_copy<false>::__uninit_copy<std::move_iterator<point*>, point*>(std::move_iterator<point*>, std::move_iterator<point*>, point*)
  0.00      0.13     0.00       84     0.00     0.00  point* std::uninitialized_copy<std::move_iterator<point*>, point*>(std::move_iterator<point*>, std::move_iterator<point*>, point*)
  0.00      0.13     0.00       84     0.00     0.00  point* std::__uninitialized_copy_a<std::move_iterator<point*>, point*, point>(std::move_iterator<point*>, std::move_iterator<point*>, point*, std::allocator<point>&)
  0.00      0.13     0.00       84     0.00     0.00  point* std::__uninitialized_move_a<point*, point*, std::allocator<point> >(point*, point*, point*, std::allocator<point>&)
  0.00      0.13     0.00       82     0.00     0.00  outline::addPoint(point)
  0.00      0.13     0.00       82     0.00     0.00  __gnu_cxx::new_allocator<point>::construct(point*, point const&)
  0.00      0.13     0.00       82     0.00     0.00  std::vector<point, std::allocator<point> >::push_back(point const&)
  0.00      0.13     0.00       72     0.00     0.00  std::_Iter_base<possibleCenter*, false>::_S_base(possibleCenter*)
  0.00      0.13     0.00       72     0.00     0.00  std::_Niter_base<possibleCenter*>::iterator_type std::__niter_base<possibleCenter*>(possibleCenter*)
  0.00      0.13     0.00       58     0.00     0.00  unsigned long const& std::max<unsigned long>(unsigned long const&, unsigned long const&)
  0.00      0.13     0.00       54     0.00     0.00  void std::_Destroy_aux<true>::__destroy<point*>(point*, point*)
  0.00      0.13     0.00       54     0.00     0.00  std::_Vector_base<point, std::allocator<point> >::_M_deallocate(point*, unsigned long)
  0.00      0.13     0.00       54     0.00     0.00  void std::_Destroy<point*>(point*, point*)
  0.00      0.13     0.00       54     0.00     0.00  void std::_Destroy<point*, point>(point*, point*, std::allocator<point>&)
  0.00      0.13     0.00       48     0.00     0.00  __gnu_cxx::__normal_iterator<possibleCenter*, std::vector<possibleCenter, std::allocator<possibleCenter> > >::base() const
  0.00      0.13     0.00       48     0.00     0.00  std::move_iterator<possibleCenter*>::base() const
  0.00      0.13     0.00       48     0.00     0.00  std::_Iter_base<std::move_iterator<possibleCenter*>, true>::_S_base(std::move_iterator<possibleCenter*>)
  0.00      0.13     0.00       48     0.00     0.00  std::move_iterator<possibleCenter*>::move_iterator(possibleCenter*)
  0.00      0.13     0.00       48     0.00     0.00  std::_Miter_base<std::move_iterator<possibleCenter*> >::iterator_type std::__miter_base<std::move_iterator<possibleCenter*> >(std::move_iterator<possibleCenter*>)
  0.00      0.13     0.00       48     0.00     0.00  std::move_iterator<possibleCenter*> std::make_move_iterator<possibleCenter*>(possibleCenter* const&)
  0.00      0.13     0.00       42     0.00     0.00  __gnu_cxx::new_allocator<point>::deallocate(point*, unsigned long)
  0.00      0.13     0.00       42     0.00     0.00  __gnu_cxx::new_allocator<point>::allocate(unsigned long, void const*)
  0.00      0.13     0.00       42     0.00     0.00  __gnu_cxx::__normal_iterator<point*, std::vector<point, std::allocator<point> > >::difference_type __gnu_cxx::operator-<point*, std::vector<point, std::allocator<point> > >(__gnu_cxx::__normal_iterator<point*, std::vector<point, std::allocator<point> > > const&, __gnu_cxx::__normal_iterator<point*, std::vector<point, std::allocator<point> > > const&)
  0.00      0.13     0.00       42     0.00     0.00  std::vector<point, std::allocator<point> >::_M_check_len(unsigned long, char const*) const
  0.00      0.13     0.00       42     0.00     0.00  std::_Vector_base<point, std::allocator<point> >::_M_allocate(unsigned long)
  0.00      0.13     0.00       42     0.00     0.00  std::vector<point, std::allocator<point> >::end()
  0.00      0.13     0.00       42     0.00     0.00  std::vector<point, std::allocator<point> >::begin()
  0.00      0.13     0.00       39     0.00     0.00  std::_Vector_base<possibleCenter, std::allocator<possibleCenter> >::_M_get_Tp_allocator()
  0.00      0.13     0.00       36     0.00     0.00  __gnu_cxx::new_allocator<possibleCenter>::max_size() const
  0.00      0.13     0.00       34     0.00     0.00  __gnu_cxx::new_allocator<possibleCenter>::construct(possibleCenter*, possibleCenter const&)
  0.00      0.13     0.00       34     0.00     0.00  std::vector<possibleCenter, std::allocator<possibleCenter> >::push_back(possibleCenter const&)
  0.00      0.13     0.00       24     0.00     0.00  cimg_library::cimg::uncase(char)
  0.00      0.13     0.00       24     0.00     0.00  __gnu_cxx::__normal_iterator<possibleCenter*, std::vector<possibleCenter, std::allocator<possibleCenter> > >::__normal_iterator(possibleCenter* const&)
  0.00      0.13     0.00       24     0.00     0.00  std::_Vector_base<possibleCenter, std::allocator<possibleCenter> >::_M_get_Tp_allocator() const
  0.00      0.13     0.00       24     0.00     0.00  std::vector<possibleCenter, std::allocator<possibleCenter> >::max_size() const
  0.00      0.13     0.00       24     0.00     0.00  possibleCenter* std::__copy_move<true, true, std::random_access_iterator_tag>::__copy_m<possibleCenter>(possibleCenter const*, possibleCenter const*, possibleCenter*)
  0.00      0.13     0.00       24     0.00     0.00  possibleCenter* std::__uninitialized_copy<true>::__uninit_copy<std::move_iterator<possibleCenter*>, possibleCenter*>(std::move_iterator<possibleCenter*>, std::move_iterator<possibleCenter*>, possibleCenter*)
  0.00      0.13     0.00       24     0.00     0.00  possibleCenter* std::__copy_move_a<true, possibleCenter*, possibleCenter*>(possibleCenter*, possibleCenter*, possibleCenter*)
  0.00      0.13     0.00       24     0.00     0.00  possibleCenter* std::__copy_move_a2<true, possibleCenter*, possibleCenter*>(possibleCenter*, possibleCenter*, possibleCenter*)
  0.00      0.13     0.00       24     0.00     0.00  possibleCenter* std::uninitialized_copy<std::move_iterator<possibleCenter*>, possibleCenter*>(std::move_iterator<possibleCenter*>, std::move_iterator<possibleCenter*>, possibleCenter*)
  0.00      0.13     0.00       24     0.00     0.00  possibleCenter* std::__uninitialized_copy_a<std::move_iterator<possibleCenter*>, possibleCenter*, possibleCenter>(std::move_iterator<possibleCenter*>, std::move_iterator<possibleCenter*>, possibleCenter*, std::allocator<possibleCenter>&)
  0.00      0.13     0.00       24     0.00     0.00  possibleCenter* std::__uninitialized_move_a<possibleCenter*, possibleCenter*, std::allocator<possibleCenter> >(possibleCenter*, possibleCenter*, possibleCenter*, std::allocator<possibleCenter>&)
  0.00      0.13     0.00       24     0.00     0.00  possibleCenter* std::copy<std::move_iterator<possibleCenter*>, possibleCenter*>(std::move_iterator<possibleCenter*>, std::move_iterator<possibleCenter*>, possibleCenter*)
  0.00      0.13     0.00       23     0.00     0.00  void std::vector<point, std::allocator<point> >::_M_insert_aux<point>(__gnu_cxx::__normal_iterator<point*, std::vector<point, std::allocator<point> > >, point&&)
  0.00      0.13     0.00       22     0.00     0.00  cimg_library::CImg<char>::~CImg()
  0.00      0.13     0.00       20     0.00     0.00  cimg_library::cimg::Mutex_attr()
  0.00      0.13     0.00       20     0.00     0.00  cimg_library::cimg::mutex(unsigned int, int)
  0.00      0.13     0.00       19     0.00     0.00  void std::vector<point, std::allocator<point> >::_M_insert_aux<point const&>(__gnu_cxx::__normal_iterator<point*, std::vector<point, std::allocator<point> > >, point const&)
  0.00      0.13     0.00       19     0.00     0.00  point const& std::forward<point const&>(std::remove_reference<point const&>::type&)
  0.00      0.13     0.00       18     0.00     0.00  std::move_iterator<outline*>::base() const
  0.00      0.13     0.00       17     0.00     0.00  cimg_library::CImg<char>::CImg()
  0.00      0.13     0.00       16     0.00     0.00  std::vector<outline, std::allocator<outline> >::size() const
  0.00      0.13     0.00       15     0.00     0.00  void std::_Destroy_aux<true>::__destroy<possibleCenter*>(possibleCenter*, possibleCenter*)
  0.00      0.13     0.00       15     0.00     0.00  std::_Vector_base<possibleCenter, std::allocator<possibleCenter> >::_M_deallocate(possibleCenter*, unsigned long)
  0.00      0.13     0.00       15     0.00     0.00  void std::_Destroy<possibleCenter*>(possibleCenter*, possibleCenter*)
  0.00      0.13     0.00       15     0.00     0.00  void std::_Destroy<possibleCenter*, possibleCenter>(possibleCenter*, possibleCenter*, std::allocator<possibleCenter>&)
  0.00      0.13     0.00       12     0.00     0.00  point::point()
  0.00      0.13     0.00       12     0.00     0.00  __gnu_cxx::new_allocator<possibleCenter>::deallocate(possibleCenter*, unsigned long)
  0.00      0.13     0.00       12     0.00     0.00  __gnu_cxx::new_allocator<possibleCenter>::allocate(unsigned long, void const*)
  0.00      0.13     0.00       12     0.00     0.00  __gnu_cxx::new_allocator<point>::~new_allocator()
  0.00      0.13     0.00       12     0.00     0.00  __gnu_cxx::__normal_iterator<possibleCenter*, std::vector<possibleCenter, std::allocator<possibleCenter> > >::difference_type __gnu_cxx::operator-<possibleCenter*, std::vector<possibleCenter, std::allocator<possibleCenter> > >(__gnu_cxx::__normal_iterator<possibleCenter*, std::vector<possibleCenter, std::allocator<possibleCenter> > > const&, __gnu_cxx::__normal_iterator<possibleCenter*, std::vector<possibleCenter, std::allocator<possibleCenter> > > const&)
  0.00      0.13     0.00       12     0.00     0.00  __gnu_cxx::__normal_iterator<outline*, std::vector<outline, std::allocator<outline> > >::base() const
  0.00      0.13     0.00       12     0.00     0.00  std::vector<possibleCenter, std::allocator<possibleCenter> >::_M_check_len(unsigned long, char const*) const
  0.00      0.13     0.00       12     0.00     0.00  std::allocator<point>::~allocator()
  0.00      0.13     0.00       12     0.00     0.00  std::_Vector_base<possibleCenter, std::allocator<possibleCenter> >::_M_allocate(unsigned long)
  0.00      0.13     0.00       12     0.00     0.00  std::_Vector_base<point, std::allocator<point> >::_Vector_impl::~_Vector_impl()
  0.00      0.13     0.00       12     0.00     0.00  std::_Vector_base<point, std::allocator<point> >::~_Vector_base()
  0.00      0.13     0.00       12     0.00     0.00  std::move_iterator<outline*>::move_iterator(outline*)
  0.00      0.13     0.00       12     0.00     0.00  void std::vector<possibleCenter, std::allocator<possibleCenter> >::_M_insert_aux<possibleCenter const&>(__gnu_cxx::__normal_iterator<possibleCenter*, std::vector<possibleCenter, std::allocator<possibleCenter> > >, possibleCenter const&)
  0.00      0.13     0.00       12     0.00     0.00  std::vector<possibleCenter, std::allocator<possibleCenter> >::end()
  0.00      0.13     0.00       12     0.00     0.00  std::vector<possibleCenter, std::allocator<possibleCenter> >::begin()
  0.00      0.13     0.00       12     0.00     0.00  std::vector<point, std::allocator<point> >::~vector()
  0.00      0.13     0.00       12     0.00     0.00  std::move_iterator<outline*> std::make_move_iterator<outline*>(outline* const&)
  0.00      0.13     0.00       12     0.00     0.00  outline&& std::forward<outline>(std::remove_reference<outline>::type&)
  0.00      0.13     0.00       12     0.00     0.00  possibleCenter const& std::forward<possibleCenter const&>(std::remove_reference<possibleCenter const&>::type&)
  0.00      0.13     0.00       10     0.00     0.00  cimg_library::cimg::Mutex_info::lock(unsigned int)
  0.00      0.13     0.00       10     0.00     0.00  cimg_library::cimg::Mutex_info::unlock(unsigned int)
  0.00      0.13     0.00       10     0.00     0.00  cimg_library::CImg<unsigned char>::size() const
  0.00      0.13     0.00       10     0.00     0.00  std::_Vector_base<outline, std::allocator<outline> >::_M_get_Tp_allocator()
  0.00      0.13     0.00        9     0.00     0.00  cimg_library::cimg::exception_mode()
  0.00      0.13     0.00        9     0.00     0.00  cimg_library::cimg::_exception_mode(unsigned int, bool)
  0.00      0.13     0.00        9     0.00     0.00  outline::~outline()
  0.00      0.13     0.00        9     0.00     0.00  __gnu_cxx::new_allocator<outline>::max_size() const
  0.00      0.13     0.00        9     0.00     0.00  outline* std::__addressof<outline>(outline&)
  0.00      0.13     0.00        9     0.00     0.00  bool std::operator==<outline*>(std::move_iterator<outline*> const&, std::move_iterator<outline*> const&)
  0.00      0.13     0.00        9     0.00     0.00  bool std::operator!=<outline*>(std::move_iterator<outline*> const&, std::move_iterator<outline*> const&)
  0.00      0.13     0.00        8     0.00     0.00  cimg_library::cimg::strncasecmp(char const*, char const*, int)
  0.00      0.13     0.00        8     0.00     0.00  void cimg_library::cimg::swap<unsigned int>(unsigned int&, unsigned int&)
  0.00      0.13     0.00        6     0.00     0.00  cimg_library::CImg<char>::operator char*()
  0.00      0.13     0.00        6     0.00     0.00  cimg_library::cimg::strcasecmp(char const*, char const*)
  0.00      0.13     0.00        6     0.00     0.00  outline::outline(outline&&)
  0.00      0.13     0.00        6     0.00     0.00  __gnu_cxx::new_allocator<point>::new_allocator(__gnu_cxx::new_allocator<point> const&)
  0.00      0.13     0.00        6     0.00     0.00  __gnu_cxx::new_allocator<point>::new_allocator()
  0.00      0.13     0.00        6     0.00     0.00  __gnu_cxx::__normal_iterator<outline*, std::vector<outline, std::allocator<outline> > >::__normal_iterator(outline* const&)
  0.00      0.13     0.00        6     0.00     0.00  cimg_library::CImg<char>::size() const
  0.00      0.13     0.00        6     0.00     0.00  std::_Vector_base<outline, std::allocator<outline> >::_M_get_Tp_allocator() const
  0.00      0.13     0.00        6     0.00     0.00  std::vector<circle, std::allocator<circle> >::size() const
  0.00      0.13     0.00        6     0.00     0.00  std::vector<outline, std::allocator<outline> >::max_size() const
  0.00      0.13     0.00        6     0.00     0.00  std::allocator<point>::allocator(std::allocator<point> const&)
  0.00      0.13     0.00        6     0.00     0.00  std::allocator<point>::allocator()
  0.00      0.13     0.00        6     0.00     0.00  std::_Iter_base<circle*, false>::_S_base(circle*)
  0.00      0.13     0.00        6     0.00     0.00  std::_Vector_base<point, std::allocator<point> >::_Vector_impl::_Vector_impl(std::allocator<point> const&)
  0.00      0.13     0.00        6     0.00     0.00  std::_Vector_base<point, std::allocator<point> >::_Vector_impl::_Vector_impl()
  0.00      0.13     0.00        6     0.00     0.00  std::_Vector_base<point, std::allocator<point> >::_Vector_base(std::_Vector_base<point, std::allocator<point> >&&)
  0.00      0.13     0.00        6     0.00     0.00  std::_Vector_base<point, std::allocator<point> >::_Vector_base()
  0.00      0.13     0.00        6     0.00     0.00  outline* std::__uninitialized_copy<false>::__uninit_copy<std::move_iterator<outline*>, outline*>(std::move_iterator<outline*>, std::move_iterator<outline*>, outline*)
  0.00      0.13     0.00        6     0.00     0.00  std::vector<point, std::allocator<point> >::vector(std::vector<point, std::allocator<point> >&&)
  0.00      0.13     0.00        6     0.00     0.00  std::vector<point, std::allocator<point> >::vector()
  0.00      0.13     0.00        6     0.00     0.00  std::_Niter_base<circle*>::iterator_type std::__niter_base<circle*>(circle*)
  0.00      0.13     0.00        6     0.00     0.00  outline* std::uninitialized_copy<std::move_iterator<outline*>, outline*>(std::move_iterator<outline*>, std::move_iterator<outline*>, outline*)
  0.00      0.13     0.00        6     0.00     0.00  outline* std::__uninitialized_copy_a<std::move_iterator<outline*>, outline*, outline>(std::move_iterator<outline*>, std::move_iterator<outline*>, outline*, std::allocator<outline>&)
  0.00      0.13     0.00        6     0.00     0.00  outline* std::__uninitialized_move_a<outline*, outline*, std::allocator<outline> >(outline*, outline*, outline*, std::allocator<outline>&)
  0.00      0.13     0.00        6     0.00     0.00  std::remove_reference<outline&>::type&& std::move<outline&>(outline&)
  0.00      0.13     0.00        6     0.00     0.00  std::remove_reference<std::vector<point, std::allocator<point> >&>::type&& std::move<std::vector<point, std::allocator<point> >&>(std::vector<point, std::allocator<point> >&)
  0.00      0.13     0.00        6     0.00     0.00  void std::_Destroy<outline>(outline*)
  0.00      0.13     0.00        5     0.00     0.00  cimg_library::CImg<unsigned char>::~CImg()
  0.00      0.13     0.00        5     0.00     0.00  cimg_library::CImg<unsigned char>::is_empty() const
  0.00      0.13     0.00        4     0.00     0.00  cimg_library::CImg<unsigned char>::assign(unsigned int, unsigned int, unsigned int, unsigned int)
  0.00      0.13     0.00        4     0.00     0.00  __gnu_cxx::__normal_iterator<circle*, std::vector<circle, std::allocator<circle> > >::base() const
  0.00      0.13     0.00        4     0.00     0.00  std::move_iterator<circle*>::base() const
  0.00      0.13     0.00        4     0.00     0.00  std::_Iter_base<std::move_iterator<circle*>, true>::_S_base(std::move_iterator<circle*>)
  0.00      0.13     0.00        4     0.00     0.00  void std::_Destroy_aux<false>::__destroy<outline*>(outline*, outline*)
  0.00      0.13     0.00        4     0.00     0.00  std::_Vector_base<circle, std::allocator<circle> >::_M_get_Tp_allocator()
  0.00      0.13     0.00        4     0.00     0.00  std::_Vector_base<outline, std::allocator<outline> >::_M_deallocate(outline*, unsigned long)
  0.00      0.13     0.00        4     0.00     0.00  std::move_iterator<circle*>::move_iterator(circle*)
  0.00      0.13     0.00        4     0.00     0.00  std::_Miter_base<std::move_iterator<circle*> >::iterator_type std::__miter_base<std::move_iterator<circle*> >(std::move_iterator<circle*>)
  0.00      0.13     0.00        4     0.00     0.00  std::move_iterator<circle*> std::make_move_iterator<circle*>(circle* const&)
  0.00      0.13     0.00        4     0.00     0.00  std::exp(float)
  0.00      0.13     0.00        4     0.00     0.00  void std::_Destroy<outline*>(outline*, outline*)
  0.00      0.13     0.00        4     0.00     0.00  void std::_Destroy<outline*, outline>(outline*, outline*, std::allocator<outline>&)
  0.00      0.13     0.00        3     0.00     0.00  floodfill(cimg_library::CImg<unsigned char>&, int, int)
  0.00      0.13     0.00        3     0.00     0.00  cimg_library::CImg<char>::data()
  0.00      0.13     0.00        3     0.00     0.00  cimg_library::CImg<char>::assign()
  0.00      0.13     0.00        3     0.00     0.00  outline::isCircle()
  0.00      0.13     0.00        3     0.00     0.00  outline::outline()
  0.00      0.13     0.00        3     0.00     0.00  __gnu_cxx::new_allocator<possibleCenter>::new_allocator()
  0.00      0.13     0.00        3     0.00     0.00  __gnu_cxx::new_allocator<possibleCenter>::~new_allocator()
  0.00      0.13     0.00        3     0.00     0.00  __gnu_cxx::new_allocator<outline>::deallocate(outline*, unsigned long)
  0.00      0.13     0.00        3     0.00     0.00  __gnu_cxx::new_allocator<outline>::allocate(unsigned long, void const*)
  0.00      0.13     0.00        3     0.00     0.00  void __gnu_cxx::new_allocator<outline>::construct<outline>(outline*, outline&&)
  0.00      0.13     0.00        3     0.00     0.00  __gnu_cxx::__normal_iterator<outline*, std::vector<outline, std::allocator<outline> > >::difference_type __gnu_cxx::operator-<outline*, std::vector<outline, std::allocator<outline> > >(__gnu_cxx::__normal_iterator<outline*, std::vector<outline, std::allocator<outline> > > const&, __gnu_cxx::__normal_iterator<outline*, std::vector<outline, std::allocator<outline> > > const&)
  0.00      0.13     0.00        3     0.00     0.00  __gnu_cxx::new_allocator<circle>::max_size() const
  0.00      0.13     0.00        3     0.00     0.00  std::move_iterator<outline*>::operator*() const
  0.00      0.13     0.00        3     0.00     0.00  std::vector<outline, std::allocator<outline> >::_M_check_len(unsigned long, char const*) const
  0.00      0.13     0.00        3     0.00     0.00  std::allocator<possibleCenter>::allocator()
  0.00      0.13     0.00        3     0.00     0.00  std::allocator<possibleCenter>::~allocator()
  0.00      0.13     0.00        3     0.00     0.00  std::_Vector_base<possibleCenter, std::allocator<possibleCenter> >::_Vector_impl::_Vector_impl()
  0.00      0.13     0.00        3     0.00     0.00  std::_Vector_base<possibleCenter, std::allocator<possibleCenter> >::_Vector_impl::~_Vector_impl()
  0.00      0.13     0.00        3     0.00     0.00  std::_Vector_base<possibleCenter, std::allocator<possibleCenter> >::_Vector_base()
  0.00      0.13     0.00        3     0.00     0.00  std::_Vector_base<possibleCenter, std::allocator<possibleCenter> >::~_Vector_base()
  0.00      0.13     0.00        3     0.00     0.00  std::_Vector_base<outline, std::allocator<outline> >::_M_allocate(unsigned long)
  0.00      0.13     0.00        3     0.00     0.00  std::move_iterator<outline*>::operator++()
  0.00      0.13     0.00        3     0.00     0.00  std::vector<possibleCenter, std::allocator<possibleCenter> >::vector()
  0.00      0.13     0.00        3     0.00     0.00  std::vector<possibleCenter, std::allocator<possibleCenter> >::~vector()
  0.00      0.13     0.00        3     0.00     0.00  void std::vector<outline, std::allocator<outline> >::emplace_back<outline>(outline&&)
  0.00      0.13     0.00        3     0.00     0.00  void std::vector<outline, std::allocator<outline> >::_M_insert_aux<outline>(__gnu_cxx::__normal_iterator<outline*, std::vector<outline, std::allocator<outline> > >, outline&&)
  0.00      0.13     0.00        3     0.00     0.00  std::vector<outline, std::allocator<outline> >::end()
  0.00      0.13     0.00        3     0.00     0.00  std::vector<outline, std::allocator<outline> >::begin()
  0.00      0.13     0.00        3     0.00     0.00  std::vector<outline, std::allocator<outline> >::push_back(outline&&)
  0.00      0.13     0.00        3     0.00     0.00  std::vector<outline, std::allocator<outline> >::operator[](unsigned long)
  0.00      0.13     0.00        3     0.00     0.00  _ZSt10_ConstructI7outlineIS0_EEvPT_DpOT0_
  0.00      0.13     0.00        2     0.00     0.00  cimg_library::CImg<char>::end()
  0.00      0.13     0.00        2     0.00     0.00  cimg_library::CImg<char>::swap(cimg_library::CImg<char>&)
  0.00      0.13     0.00        2     0.00     0.00  cimg_library::CImg<char>::move_to(cimg_library::CImg<char>&)
  0.00      0.13     0.00        2     0.00     0.00  cimg_library::CImg<char>::CImg(char const*, unsigned int, unsigned int, unsigned int, unsigned int, bool)
  0.00      0.13     0.00        2     0.00     0.00  cimg_library::CImg<float>::CImg(unsigned int, unsigned int, unsigned int, unsigned int)
  0.00      0.13     0.00        2     0.00     0.00  cimg_library::CImg<float>::~CImg()
  0.00      0.13     0.00        2     0.00     0.00  cimg_library::CImg<unsigned char>::fill(unsigned char)
  0.00      0.13     0.00        2     0.00     0.00  cimg_library::CImg<unsigned char>::assign(unsigned char const*, unsigned int, unsigned int, unsigned int, unsigned int)
  0.00      0.13     0.00        2     0.00     0.00  cimg_library::CImg<unsigned char>& cimg_library::CImg<unsigned char>::assign<unsigned char>(cimg_library::CImg<unsigned char> const&)
  0.00      0.13     0.00        2     0.00     0.00  cimg_library::CImg<unsigned char>::CImg(unsigned int, unsigned int, unsigned int, unsigned int, unsigned char)
  0.00      0.13     0.00        2     0.00     0.00  cimg_library::CImg<unsigned char>::operator=(cimg_library::CImg<unsigned char> const&)
  0.00      0.13     0.00        2     0.00     0.00  cimg_library::cimg::split_filename(char const*, char*)
  0.00      0.13     0.00        2     0.00     0.00  void cimg_library::cimg::swap<char*>(char*&, char*&)
  0.00      0.13     0.00        2     0.00     0.00  void cimg_library::cimg::swap<bool>(bool&, bool&)
  0.00      0.13     0.00        2     0.00     0.00  __gnu_cxx::__normal_iterator<circle*, std::vector<circle, std::allocator<circle> > >::__normal_iterator(circle* const&)
  0.00      0.13     0.00        2     0.00     0.00  __gnu_cxx::__normal_iterator<circle const*, std::vector<circle, std::allocator<circle> > >::__normal_iterator(circle const* const&)
  0.00      0.13     0.00        2     0.00     0.00  __gnu_cxx::__normal_iterator<circle const*, std::vector<circle, std::allocator<circle> > >::base() const
  0.00      0.13     0.00        2     0.00     0.00  std::_Vector_base<circle, std::allocator<circle> >::_M_get_Tp_allocator() const
  0.00      0.13     0.00        2     0.00     0.00  std::vector<circle, std::allocator<circle> >::max_size() const
  0.00      0.13     0.00        2     0.00     0.00  circle* std::__copy_move<true, true, std::random_access_iterator_tag>::__copy_m<circle>(circle const*, circle const*, circle*)
  0.00      0.13     0.00        2     0.00     0.00  void std::_Destroy_aux<true>::__destroy<circle*>(circle*, circle*)
  0.00      0.13     0.00        2     0.00     0.00  std::_Vector_base<circle, std::allocator<circle> >::_M_deallocate(circle*, unsigned long)
  0.00      0.13     0.00        2     0.00     0.00  circle* std::__uninitialized_copy<true>::__uninit_copy<std::move_iterator<circle*>, circle*>(std::move_iterator<circle*>, std::move_iterator<circle*>, circle*)
  0.00      0.13     0.00        2     0.00     0.00  circle* std::__copy_move_a<true, circle*, circle*>(circle*, circle*, circle*)
  0.00      0.13     0.00        2     0.00     0.00  circle* std::__copy_move_a2<true, circle*, circle*>(circle*, circle*, circle*)
  0.00      0.13     0.00        2     0.00     0.00  circle* std::uninitialized_copy<std::move_iterator<circle*>, circle*>(std::move_iterator<circle*>, std::move_iterator<circle*>, circle*)
  0.00      0.13     0.00        2     0.00     0.00  circle* std::__uninitialized_copy_a<std::move_iterator<circle*>, circle*, circle>(std::move_iterator<circle*>, std::move_iterator<circle*>, circle*, std::allocator<circle>&)
  0.00      0.13     0.00        2     0.00     0.00  circle* std::__uninitialized_move_a<circle*, circle*, std::allocator<circle> >(circle*, circle*, circle*, std::allocator<circle>&)
  0.00      0.13     0.00        2     0.00     0.00  circle* std::copy<std::move_iterator<circle*>, circle*>(std::move_iterator<circle*>, std::move_iterator<circle*>, circle*)
  0.00      0.13     0.00        2     0.00     0.00  void std::_Destroy<circle*>(circle*, circle*)
  0.00      0.13     0.00        2     0.00     0.00  void std::_Destroy<circle*, circle>(circle*, circle*, std::allocator<circle>&)
  0.00      0.13     0.00        1     0.00     0.00  _GLOBAL__sub_I_WHITE
  0.00      0.13     0.00        1     0.00     0.00  _GLOBAL__sub_I_main
  0.00      0.13     0.00        1     0.00    36.00  threshhold(cimg_library::CImg<unsigned char>&, hsv)
  0.00      0.13     0.00        1     0.00     2.00  findOutlines(cimg_library::CImg<unsigned char>)
  0.00      0.13     0.00        1     0.00     0.00  __static_initialization_and_destruction_0(int, int)
  0.00      0.13     0.00        1     0.00     0.00  __static_initialization_and_destruction_0(int, int)
  0.00      0.13     0.00        1     0.00   130.00  whereBall(cimg_library::CImg<unsigned char>&)
  0.00      0.13     0.00        1     0.00     0.00  cimg_library::CImgException::CImgException()
  0.00      0.13     0.00        1     0.00     0.00  cimg_library::CImgException::~CImgException()
  0.00      0.13     0.00        1     0.00     0.00  cimg_library::CImgIOException::CImgIOException(char const*, ...)
  0.00      0.13     0.00        1     0.00     0.00  cimg_library::CImg<char>::_system_strescape()
  0.00      0.13     0.00        1     0.00     0.00  cimg_library::CImg<char>::fill(char)
  0.00      0.13     0.00        1     0.00     0.00  cimg_library::CImg<char>::assign(char const*, unsigned int, unsigned int, unsigned int, unsigned int)
  0.00      0.13     0.00        1     0.00     0.00  cimg_library::CImg<char>& cimg_library::CImg<char>::assign<char>(cimg_library::CImg<char> const&)
  0.00      0.13     0.00        1     0.00     0.00  cimg_library::CImg<char>::string(char const*, bool)
  0.00      0.13     0.00        1     0.00     0.00  cimg_library::CImgList<char>& cimg_library::CImg<char>::move_to<char>(cimg_library::CImgList<char>&, unsigned int)
  0.00      0.13     0.00        1     0.00     0.00  cimg_library::CImg<char>::CImg(cimg_library::CImg<char> const&)
  0.00      0.13     0.00        1     0.00     0.00  cimg_library::CImg<char>::CImg(cimg_library::CImg<char> const&, bool)
  0.00      0.13     0.00        1     0.00     0.00  cimg_library::CImg<char>::CImg(unsigned int, unsigned int, unsigned int, unsigned int, char)
  0.00      0.13     0.00        1     0.00     0.00  cimg_library::CImg<char>::operator=(cimg_library::CImg<char> const&)
  0.00      0.13     0.00        1     0.00     0.00  cimg_library::CImg<unsigned char>::_load_jpeg(_IO_FILE*, char const*)
  0.00      0.13     0.00        1     0.00     0.00  cimg_library::CImg<unsigned char>::load_other(char const*)
  0.00      0.13     0.00        1     0.00     0.00  cimg_library::CImg<unsigned char>::pixel_type()
  0.00      0.13     0.00        1     0.00     0.00  cimg_library::CImg<unsigned char>::load_magick(char const*)
  0.00      0.13     0.00        1     0.00     0.00  cimg_library::CImg<unsigned char>::load_imagemagick_external(char const*)
  0.00      0.13     0.00        1     0.00    80.00  cimg_library::CImg<unsigned char>::blur(float, bool, bool)
  0.00      0.13     0.00        1     0.00    80.00  cimg_library::CImg<unsigned char>::blur(float, float, float, bool, bool)
  0.00      0.13     0.00        1     0.00     0.00  cimg_library::CImg<unsigned char>::load(char const*)
  0.00      0.13     0.00        1     0.00     0.00  cimg_library::CImg<unsigned char>::assign(char const*)
  0.00      0.13     0.00        1     0.00     0.00  cimg_library::CImg<unsigned char>::load_pnm(_IO_FILE*)
  0.00      0.13     0.00        1     0.00     0.00  cimg_library::CImg<unsigned char>::_load_pnm(_IO_FILE*, char const*)
  0.00      0.13     0.00        1     0.00     0.00  cimg_library::CImg<unsigned char>::load_jpeg(char const*)
  0.00      0.13     0.00        1     0.00     0.00  cimg_library::CImg<unsigned char>::CImg(char const*)
  0.00      0.13     0.00        1     0.00     0.00  cimg_library::CImg<unsigned char>::CImg(cimg_library::CImg<unsigned char> const&)
  0.00      0.13     0.00        1     0.00     0.00  cimg_library::CImg<unsigned char>::CImg()
  0.00      0.13     0.00        1     0.00     0.00  cimg_library::cimg::Mutex_info::Mutex_info()
  0.00      0.13     0.00        1     0.00     0.00  cimg_library::cimg::imagemagick_path(char const*, bool)
  0.00      0.13     0.00        1     0.00     0.00  cimg_library::cimg::winformat_string(char*)
  0.00      0.13     0.00        1     0.00     0.00  cimg_library::cimg::superset<long, long>::type cimg_library::cimg::min<long, long>(long const&, long const&)
  0.00      0.13     0.00        1     0.00     0.00  cimg_library::cimg::type<unsigned char>::string()
  0.00      0.13     0.00        1     0.00     0.00  cimg_library::cimg::fopen(char const*, char const*)
  0.00      0.13     0.00        1     0.00     0.00  int cimg_library::cimg::fread<unsigned char>(unsigned char*, unsigned long, _IO_FILE*)
  0.00      0.13     0.00        1     0.00     0.00  cimg_library::CImgList<char>::insert(cimg_library::CImg<char> const&, unsigned int, bool)
  0.00      0.13     0.00        1     0.00     0.00  cimg_library::CImgList<char>::insert(unsigned int, unsigned int)
  0.00      0.13     0.00        1     0.00     0.00  cimg_library::CImgList<char>::CImgList()
  0.00      0.13     0.00        1     0.00     0.00  cimg_library::CImgList<char>::~CImgList()
  0.00      0.13     0.00        1     0.00     0.00  cimg_library::CImgList<char>::operator cimg_library::CImg<char>*()
  0.00      0.13     0.00        1     0.00     0.00  __gnu_cxx::new_allocator<circle>::deallocate(circle*, unsigned long)
  0.00      0.13     0.00        1     0.00     0.00  __gnu_cxx::new_allocator<circle>::allocate(unsigned long, void const*)
  0.00      0.13     0.00        1     0.00     0.00  __gnu_cxx::new_allocator<circle>::construct(circle*, circle const&)
  0.00      0.13     0.00        1     0.00     0.00  __gnu_cxx::new_allocator<circle>::new_allocator()
  0.00      0.13     0.00        1     0.00     0.00  __gnu_cxx::new_allocator<circle>::~new_allocator()
  0.00      0.13     0.00        1     0.00     0.00  __gnu_cxx::new_allocator<outline>::new_allocator()
  0.00      0.13     0.00        1     0.00     0.00  __gnu_cxx::new_allocator<outline>::~new_allocator()
  0.00      0.13     0.00        1     0.00     0.00  bool __gnu_cxx::operator==<circle const*, std::vector<circle, std::allocator<circle> > >(__gnu_cxx::__normal_iterator<circle const*, std::vector<circle, std::allocator<circle> > > const&, __gnu_cxx::__normal_iterator<circle const*, std::vector<circle, std::allocator<circle> > > const&)
  0.00      0.13     0.00        1     0.00     0.00  __gnu_cxx::__normal_iterator<circle*, std::vector<circle, std::allocator<circle> > >::difference_type __gnu_cxx::operator-<circle*, std::vector<circle, std::allocator<circle> > >(__gnu_cxx::__normal_iterator<circle*, std::vector<circle, std::allocator<circle> > > const&, __gnu_cxx::__normal_iterator<circle*, std::vector<circle, std::allocator<circle> > > const&)
  0.00      0.13     0.00        1     0.00     0.00  cimg_library::CImg<char>::data() const
  0.00      0.13     0.00        1     0.00     0.00  cimg_library::CImg<char>::is_empty() const
  0.00      0.13     0.00        1     0.00     0.00  cimg_library::CImg<char>::operator+() const
  0.00      0.13     0.00        1     0.00     0.00  cimg_library::CImgList<char>::get_append(char, float) const
  0.00      0.13     0.00        1     0.00     0.00  cimg_library::CImgList<char>::is_empty() const
  0.00      0.13     0.00        1     0.00     0.00  cimg_library::CImgList<char>::operator cimg_library::CImg<char> const*() const
  0.00      0.13     0.00        1     0.00     0.00  cimg_library::CImgList<char>::operator>(char) const
  0.00      0.13     0.00        1     0.00     0.00  std::vector<circle, std::allocator<circle> >::_M_check_len(unsigned long, char const*) const
  0.00      0.13     0.00        1     0.00     0.00  std::vector<circle, std::allocator<circle> >::end() const
  0.00      0.13     0.00        1     0.00     0.00  std::vector<circle, std::allocator<circle> >::begin() const
  0.00      0.13     0.00        1     0.00     0.00  std::vector<circle, std::allocator<circle> >::empty() const
  0.00      0.13     0.00        1     0.00     0.00  std::allocator<circle>::allocator()
  0.00      0.13     0.00        1     0.00     0.00  std::allocator<circle>::~allocator()
  0.00      0.13     0.00        1     0.00     0.00  std::allocator<outline>::allocator()
  0.00      0.13     0.00        1     0.00     0.00  std::allocator<outline>::~allocator()
  0.00      0.13     0.00        1     0.00     0.00  std::_Vector_base<circle, std::allocator<circle> >::_M_allocate(unsigned long)
  0.00      0.13     0.00        1     0.00     0.00  std::_Vector_base<circle, std::allocator<circle> >::_Vector_impl::_Vector_impl()
  0.00      0.13     0.00        1     0.00     0.00  std::_Vector_base<circle, std::allocator<circle> >::_Vector_impl::~_Vector_impl()
  0.00      0.13     0.00        1     0.00     0.00  std::_Vector_base<circle, std::allocator<circle> >::_Vector_base()
  0.00      0.13     0.00        1     0.00     0.00  std::_Vector_base<circle, std::allocator<circle> >::~_Vector_base()
  0.00      0.13     0.00        1     0.00     0.00  std::_Vector_base<outline, std::allocator<outline> >::_Vector_impl::_Vector_impl()
  0.00      0.13     0.00        1     0.00     0.00  std::_Vector_base<outline, std::allocator<outline> >::_Vector_impl::~_Vector_impl()
  0.00      0.13     0.00        1     0.00     0.00  std::_Vector_base<outline, std::allocator<outline> >::_Vector_base()
  0.00      0.13     0.00        1     0.00     0.00  std::_Vector_base<outline, std::allocator<outline> >::~_Vector_base()
  0.00      0.13     0.00        1     0.00     0.00  void std::vector<circle, std::allocator<circle> >::_M_insert_aux<circle const&>(__gnu_cxx::__normal_iterator<circle*, std::vector<circle, std::allocator<circle> > >, circle const&)
  0.00      0.13     0.00        1     0.00     0.00  std::vector<circle, std::allocator<circle> >::end()
  0.00      0.13     0.00        1     0.00     0.00  std::vector<circle, std::allocator<circle> >::begin()
  0.00      0.13     0.00        1     0.00     0.00  std::vector<circle, std::allocator<circle> >::push_back(circle const&)
  0.00      0.13     0.00        1     0.00     0.00  std::vector<circle, std::allocator<circle> >::vector()
  0.00      0.13     0.00        1     0.00     0.00  std::vector<circle, std::allocator<circle> >::~vector()
  0.00      0.13     0.00        1     0.00     0.00  std::vector<circle, std::allocator<circle> >::operator[](unsigned long)
  0.00      0.13     0.00        1     0.00     0.00  std::vector<outline, std::allocator<outline> >::vector()
  0.00      0.13     0.00        1     0.00     0.00  std::vector<outline, std::allocator<outline> >::~vector()
  0.00      0.13     0.00        1     0.00     0.00  std::exception::exception()
  0.00      0.13     0.00        1     0.00     0.00  circle const& std::forward<circle const&>(std::remove_reference<circle const&>::type&)

 %         the percentage of the total running time of the
time       program used by this function.

cumulative a running sum of the number of seconds accounted
 seconds   for by this function and those listed above it.

 self      the number of seconds accounted for by this
seconds    function alone.  This is the major sort for this
           listing.

calls      the number of times this function was invoked, if
           this function is profiled, else blank.
 
 self      the average number of milliseconds spent in this
ms/call    function per call, if this function is profiled,
	   else blank.

 total     the average number of milliseconds spent in this
ms/call    function and its descendents per call, if this 
	   function is profiled, else blank.

name       the name of the function.  This is the minor sort
           for this listing. The index shows the location of
	   the function in the gprof listing. If the index is
	   in parenthesis it shows where it would appear in
	   the gprof listing if it were to be printed.

		     Call graph (explanation follows)


granularity: each sample hit covers 2 byte(s) for 7.69% of 0.13 seconds

index % time    self  children    called     name
                                                 <spontaneous>
[1]    100.0    0.00    0.13                 main [1]
                0.00    0.13       1/1           whereBall(cimg_library::CImg<unsigned char>&) [2]
                0.00    0.00       1/1           cimg_library::CImg<unsigned char>::CImg(char const*) [287]
                0.00    0.00       1/5           cimg_library::CImg<unsigned char>::~CImg() [184]
-----------------------------------------------
                0.00    0.13       1/1           main [1]
[2]    100.0    0.00    0.13       1         whereBall(cimg_library::CImg<unsigned char>&) [2]
                0.00    0.08       1/1           cimg_library::CImg<unsigned char>::blur(float, bool, bool) [4]
                0.00    0.04       1/1           threshhold(cimg_library::CImg<unsigned char>&, hsv) [6]
                0.01    0.00       1/1           booleanEdgeDetect(cimg_library::CImg<unsigned char>&) [9]
                0.00    0.00       1/1           findOutlines(cimg_library::CImg<unsigned char>) [11]
                0.00    0.00       4/16          std::vector<outline, std::allocator<outline> >::size() const [120]
                0.00    0.00       3/5           cimg_library::CImg<unsigned char>::~CImg() [184]
                0.00    0.00       3/3           std::vector<outline, std::allocator<outline> >::operator[](unsigned long) [227]
                0.00    0.00       3/3           outline::isCircle() [201]
                0.00    0.00       2/2           cimg_library::CImg<unsigned char>::operator=(cimg_library::CImg<unsigned char> const&) [239]
                0.00    0.00       2/6           std::vector<circle, std::allocator<circle> >::size() const [165]
                0.00    0.00       1/2802        cimg_library::CImg<unsigned char>::width() const [24]
                0.00    0.00       1/1           cimg_library::CImg<unsigned char>::CImg(cimg_library::CImg<unsigned char> const&) [288]
                0.00    0.00       1/1           std::vector<circle, std::allocator<circle> >::vector() [339]
                0.00    0.00       1/1           std::vector<circle, std::allocator<circle> >::push_back(circle const&) [338]
                0.00    0.00       1/1           std::vector<circle, std::allocator<circle> >::empty() const [321]
                0.00    0.00       1/1           std::vector<circle, std::allocator<circle> >::operator[](unsigned long) [341]
                0.00    0.00       1/1           std::vector<circle, std::allocator<circle> >::~vector() [340]
                0.00    0.00       1/1           std::vector<outline, std::allocator<outline> >::~vector() [343]
-----------------------------------------------
                0.08    0.00       2/2           cimg_library::CImg<unsigned char>::blur(float, float, float, bool, bool) [5]
[3]     61.5    0.08    0.00       2         cimg_library::CImg<unsigned char>::deriche(float, int, char, bool) [3]
                0.00    0.00    4200/4203        cimg_library::CImg<unsigned char>::data(unsigned int, unsigned int, unsigned int, unsigned int) [23]
                0.00    0.00       4/4           std::exp(float) [196]
                0.00    0.00       2/24          cimg_library::cimg::uncase(char) [100]
                0.00    0.00       2/5           cimg_library::CImg<unsigned char>::is_empty() const [185]
                0.00    0.00       2/2           cimg_library::CImg<float>::CImg(unsigned int, unsigned int, unsigned int, unsigned int) [233]
                0.00    0.00       2/2           cimg_library::CImg<float>::~CImg() [234]
-----------------------------------------------
                0.00    0.08       1/1           whereBall(cimg_library::CImg<unsigned char>&) [2]
[4]     61.5    0.00    0.08       1         cimg_library::CImg<unsigned char>::blur(float, bool, bool) [4]
                0.00    0.08       1/1           cimg_library::CImg<unsigned char>::blur(float, float, float, bool, bool) [5]
-----------------------------------------------
                0.00    0.08       1/1           cimg_library::CImg<unsigned char>::blur(float, bool, bool) [4]
[5]     61.5    0.00    0.08       1         cimg_library::CImg<unsigned char>::blur(float, float, float, bool, bool) [5]
                0.08    0.00       2/2           cimg_library::CImg<unsigned char>::deriche(float, int, char, bool) [3]
                0.00    0.00       1/5           cimg_library::CImg<unsigned char>::is_empty() const [185]
-----------------------------------------------
                0.00    0.04       1/1           whereBall(cimg_library::CImg<unsigned char>&) [2]
[6]     27.7    0.00    0.04       1         threshhold(cimg_library::CImg<unsigned char>&, hsv) [6]
                0.02    0.00  480000/480000      rgb::getHsv() [7]
                0.01    0.01  480000/480000      getRgb(cimg_library::CImg<unsigned char>&, int, int) [8]
                0.00    0.00     571/1312        setRgb(cimg_library::CImg<unsigned char>&, int, int, rgb) [12]
                0.00    0.00  480801/1441563     cimg_library::CImg<unsigned char>::height() const [18]
                0.00    0.00  480000/480000      hsv::compare(hsv, float, float) [22]
                0.00    0.00     802/2802        cimg_library::CImg<unsigned char>::width() const [24]
                0.00    0.00       1/2           cimg_library::CImg<unsigned char>::CImg(unsigned int, unsigned int, unsigned int, unsigned int, unsigned char) [238]
-----------------------------------------------
                0.02    0.00  480000/480000      threshhold(cimg_library::CImg<unsigned char>&, hsv) [6]
[7]     15.4    0.02    0.00  480000         rgb::getHsv() [7]
                0.00    0.00  480000/480000      MIN3(int, int, int) [21]
                0.00    0.00  480000/480000      MAX3(int, int, int) [20]
-----------------------------------------------
                0.01    0.01  480000/480000      threshhold(cimg_library::CImg<unsigned char>&, hsv) [6]
[8]     12.3    0.01    0.01  480000         getRgb(cimg_library::CImg<unsigned char>&, int, int) [8]
                0.01    0.00 1440000/2404128     cimg_library::CImg<unsigned char>::operator()(unsigned int, unsigned int, unsigned int) [10]
-----------------------------------------------
                0.01    0.00       1/1           whereBall(cimg_library::CImg<unsigned char>&) [2]
[9]      9.2    0.01    0.00       1         booleanEdgeDetect(cimg_library::CImg<unsigned char>&) [9]
                0.00    0.00  480932/2404128     cimg_library::CImg<unsigned char>::operator()(unsigned int, unsigned int, unsigned int) [10]
                0.00    0.00      82/1312        setRgb(cimg_library::CImg<unsigned char>&, int, int, rgb) [12]
                0.00    0.00  481034/1441563     cimg_library::CImg<unsigned char>::height() const [18]
                0.00    0.00    1035/2802        cimg_library::CImg<unsigned char>::width() const [24]
                0.00    0.00       1/2           cimg_library::CImg<unsigned char>::CImg(unsigned int, unsigned int, unsigned int, unsigned int, unsigned char) [238]
-----------------------------------------------
                0.00    0.00     659/2404128     floodfill(cimg_library::CImg<unsigned char>&, int, int) [13]
                0.00    0.00    3936/2404128     setRgb(cimg_library::CImg<unsigned char>&, int, int, rgb) [12]
                0.00    0.00  478601/2404128     findOutlines(cimg_library::CImg<unsigned char>) [11]
                0.00    0.00  480932/2404128     booleanEdgeDetect(cimg_library::CImg<unsigned char>&) [9]
                0.01    0.00 1440000/2404128     getRgb(cimg_library::CImg<unsigned char>&, int, int) [8]
[10]     7.7    0.01    0.00 2404128         cimg_library::CImg<unsigned char>::operator()(unsigned int, unsigned int, unsigned int) [10]
-----------------------------------------------
                0.00    0.00       1/1           whereBall(cimg_library::CImg<unsigned char>&) [2]
[11]     1.5    0.00    0.00       1         findOutlines(cimg_library::CImg<unsigned char>) [11]
                0.00    0.00  478601/2404128     cimg_library::CImg<unsigned char>::operator()(unsigned int, unsigned int, unsigned int) [10]
                0.00    0.00       3/3           floodfill(cimg_library::CImg<unsigned char>&, int, int) [13]
                0.00    0.00  479400/1441563     cimg_library::CImg<unsigned char>::height() const [18]
                0.00    0.00     800/2802        cimg_library::CImg<unsigned char>::width() const [24]
                0.00    0.00       3/3           std::vector<outline, std::allocator<outline> >::push_back(outline&&) [226]
                0.00    0.00       3/9           outline::~outline() [150]
                0.00    0.00       1/1           std::vector<outline, std::allocator<outline> >::vector() [342]
-----------------------------------------------
                0.00    0.00      82/1312        booleanEdgeDetect(cimg_library::CImg<unsigned char>&) [9]
                0.00    0.00     571/1312        threshhold(cimg_library::CImg<unsigned char>&, hsv) [6]
                0.00    0.00     659/1312        floodfill(cimg_library::CImg<unsigned char>&, int, int) [13]
[12]     0.0    0.00    0.00    1312         setRgb(cimg_library::CImg<unsigned char>&, int, int, rgb) [12]
                0.00    0.00    3936/2404128     cimg_library::CImg<unsigned char>::operator()(unsigned int, unsigned int, unsigned int) [10]
-----------------------------------------------
                0.00    0.00       3/3           findOutlines(cimg_library::CImg<unsigned char>) [11]
[13]     0.0    0.00    0.00       3         floodfill(cimg_library::CImg<unsigned char>&, int, int) [13]
                0.00    0.00     659/1312        setRgb(cimg_library::CImg<unsigned char>&, int, int, rgb) [12]
                0.00    0.00     659/2404128     cimg_library::CImg<unsigned char>::operator()(unsigned int, unsigned int, unsigned int) [10]
                0.00    0.00     662/662         std::vector<point, std::allocator<point> >::empty() const [36]
                0.00    0.00     659/659         point::point(int, int) [37]
                0.00    0.00     659/659         std::vector<point, std::allocator<point> >::push_back(point&&) [43]
                0.00    0.00     659/1204        std::vector<point, std::allocator<point> >::size() const [29]
                0.00    0.00     659/914         std::vector<point, std::allocator<point> >::operator[](unsigned long) [32]
                0.00    0.00     659/659         std::vector<point, std::allocator<point> >::pop_back() [42]
                0.00    0.00     328/1441563     cimg_library::CImg<unsigned char>::height() const [18]
                0.00    0.00     164/2802        cimg_library::CImg<unsigned char>::width() const [24]
                0.00    0.00      82/82          outline::addPoint(point) [73]
                0.00    0.00       3/3           outline::outline() [202]
                0.00    0.00       3/12          point::point() [125]
                0.00    0.00       3/6           std::vector<point, std::allocator<point> >::vector() [176]
                0.00    0.00       3/12          std::vector<point, std::allocator<point> >::~vector() [140]
-----------------------------------------------
                0.00    0.00     328/1441563     floodfill(cimg_library::CImg<unsigned char>&, int, int) [13]
                0.00    0.00  479400/1441563     findOutlines(cimg_library::CImg<unsigned char>) [11]
                0.00    0.00  480801/1441563     threshhold(cimg_library::CImg<unsigned char>&, hsv) [6]
                0.00    0.00  481034/1441563     booleanEdgeDetect(cimg_library::CImg<unsigned char>&) [9]
[18]     0.0    0.00    0.00 1441563         cimg_library::CImg<unsigned char>::height() const [18]
-----------------------------------------------
                0.00    0.00     537/521897      possibleCenter::compare(precisePoint, float) [53]
                0.00    0.00  521360/521897      hsv::compare(hsv, float, float) [22]
[19]     0.0    0.00    0.00  521897         std::abs(float) [19]
-----------------------------------------------
                0.00    0.00  480000/480000      rgb::getHsv() [7]
[20]     0.0    0.00    0.00  480000         MAX3(int, int, int) [20]
-----------------------------------------------
                0.00    0.00  480000/480000      rgb::getHsv() [7]
[21]     0.0    0.00    0.00  480000         MIN3(int, int, int) [21]
-----------------------------------------------
                0.00    0.00  480000/480000      threshhold(cimg_library::CImg<unsigned char>&, hsv) [6]
[22]     0.0    0.00    0.00  480000         hsv::compare(hsv, float, float) [22]
                0.00    0.00  521360/521897      std::abs(float) [19]
-----------------------------------------------
                0.00    0.00       3/4203        cimg_library::CImg<unsigned char>::_load_pnm(_IO_FILE*, char const*) [285]
                0.00    0.00    4200/4203        cimg_library::CImg<unsigned char>::deriche(float, int, char, bool) [3]
[23]     0.0    0.00    0.00    4203         cimg_library::CImg<unsigned char>::data(unsigned int, unsigned int, unsigned int, unsigned int) [23]
-----------------------------------------------
                0.00    0.00       1/2802        whereBall(cimg_library::CImg<unsigned char>&) [2]
                0.00    0.00     164/2802        floodfill(cimg_library::CImg<unsigned char>&, int, int) [13]
                0.00    0.00     800/2802        findOutlines(cimg_library::CImg<unsigned char>) [11]
                0.00    0.00     802/2802        threshhold(cimg_library::CImg<unsigned char>&, hsv) [6]
                0.00    0.00    1035/2802        booleanEdgeDetect(cimg_library::CImg<unsigned char>&) [9]
[24]     0.0    0.00    0.00    2802         cimg_library::CImg<unsigned char>::width() const [24]
-----------------------------------------------
                0.00    0.00      23/1783        void std::vector<point, std::allocator<point> >::_M_insert_aux<point>(__gnu_cxx::__normal_iterator<point*, std::vector<point, std::allocator<point> > >, point&&) [112]
                0.00    0.00     442/1783        _ZSt10_ConstructI5pointIS0_EEvPT_DpOT0_ [50]
                0.00    0.00     659/1783        void std::vector<point, std::allocator<point> >::emplace_back<point>(point&&) [41]
                0.00    0.00     659/1783        void __gnu_cxx::new_allocator<point>::construct<point>(point*, point&&) [40]
[25]     0.0    0.00    0.00    1783         point&& std::forward<point>(std::remove_reference<point>::type&) [25]
-----------------------------------------------
                0.00    0.00     662/1324        std::vector<point, std::allocator<point> >::end() const [34]
                0.00    0.00     662/1324        std::vector<point, std::allocator<point> >::begin() const [35]
[26]     0.0    0.00    0.00    1324         __gnu_cxx::__normal_iterator<point const*, std::vector<point, std::allocator<point> > >::__normal_iterator(point const* const&) [26]
-----------------------------------------------
                0.00    0.00    1324/1324        bool __gnu_cxx::operator==<point const*, std::vector<point, std::allocator<point> > >(__gnu_cxx::__normal_iterator<point const*, std::vector<point, std::allocator<point> > > const&, __gnu_cxx::__normal_iterator<point const*, std::vector<point, std::allocator<point> > > const&) [33]
[27]     0.0    0.00    0.00    1324         __gnu_cxx::__normal_iterator<point const*, std::vector<point, std::allocator<point> > >::base() const [27]
-----------------------------------------------
                0.00    0.00       1/1224        __gnu_cxx::new_allocator<circle>::construct(circle*, circle const&) [304]
                0.00    0.00       3/1224        void __gnu_cxx::new_allocator<outline>::construct<outline>(outline*, outline&&) [207]
                0.00    0.00       3/1224        _ZSt10_ConstructI7outlineIS0_EEvPT_DpOT0_ [228]
                0.00    0.00      34/1224        __gnu_cxx::new_allocator<possibleCenter>::construct(possibleCenter*, possibleCenter const&) [98]
                0.00    0.00      82/1224        __gnu_cxx::new_allocator<point>::construct(point*, point const&) [74]
                0.00    0.00     442/1224        _ZSt10_ConstructI5pointIS0_EEvPT_DpOT0_ [50]
                0.00    0.00     659/1224        void __gnu_cxx::new_allocator<point>::construct<point>(point*, point&&) [40]
[28]     0.0    0.00    0.00    1224         operator new(unsigned long, void*) [28]
-----------------------------------------------
                0.00    0.00     168/1204        std::vector<point, std::allocator<point> >::_M_check_len(unsigned long, char const*) const [92]
                0.00    0.00     377/1204        outline::isCircle() [201]
                0.00    0.00     659/1204        floodfill(cimg_library::CImg<unsigned char>&, int, int) [13]
[29]     0.0    0.00    0.00    1204         std::vector<point, std::allocator<point> >::size() const [29]
-----------------------------------------------
                0.00    0.00     442/1101        std::move_iterator<point*>::operator*() const [48]
                0.00    0.00     659/1101        std::vector<point, std::allocator<point> >::push_back(point&&) [43]
[30]     0.0    0.00    0.00    1101         std::remove_reference<point&>::type&& std::move<point&>(point&) [30]
-----------------------------------------------
                0.00    0.00    1052/1052        bool std::operator==<point*>(std::move_iterator<point*> const&, std::move_iterator<point*> const&) [44]
[31]     0.0    0.00    0.00    1052         std::move_iterator<point*>::base() const [31]
-----------------------------------------------
                0.00    0.00     255/914         outline::isCircle() [201]
                0.00    0.00     659/914         floodfill(cimg_library::CImg<unsigned char>&, int, int) [13]
[32]     0.0    0.00    0.00     914         std::vector<point, std::allocator<point> >::operator[](unsigned long) [32]
-----------------------------------------------
                0.00    0.00     662/662         std::vector<point, std::allocator<point> >::empty() const [36]
[33]     0.0    0.00    0.00     662         bool __gnu_cxx::operator==<point const*, std::vector<point, std::allocator<point> > >(__gnu_cxx::__normal_iterator<point const*, std::vector<point, std::allocator<point> > > const&, __gnu_cxx::__normal_iterator<point const*, std::vector<point, std::allocator<point> > > const&) [33]
                0.00    0.00    1324/1324        __gnu_cxx::__normal_iterator<point const*, std::vector<point, std::allocator<point> > >::base() const [27]
-----------------------------------------------
                0.00    0.00     662/662         std::vector<point, std::allocator<point> >::empty() const [36]
[34]     0.0    0.00    0.00     662         std::vector<point, std::allocator<point> >::end() const [34]
                0.00    0.00     662/1324        __gnu_cxx::__normal_iterator<point const*, std::vector<point, std::allocator<point> > >::__normal_iterator(point const* const&) [26]
-----------------------------------------------
                0.00    0.00     662/662         std::vector<point, std::allocator<point> >::empty() const [36]
[35]     0.0    0.00    0.00     662         std::vector<point, std::allocator<point> >::begin() const [35]
                0.00    0.00     662/1324        __gnu_cxx::__normal_iterator<point const*, std::vector<point, std::allocator<point> > >::__normal_iterator(point const* const&) [26]
-----------------------------------------------
                0.00    0.00     662/662         floodfill(cimg_library::CImg<unsigned char>&, int, int) [13]
[36]     0.0    0.00    0.00     662         std::vector<point, std::allocator<point> >::empty() const [36]
                0.00    0.00     662/662         std::vector<point, std::allocator<point> >::end() const [34]
                0.00    0.00     662/662         std::vector<point, std::allocator<point> >::begin() const [35]
                0.00    0.00     662/662         bool __gnu_cxx::operator==<point const*, std::vector<point, std::allocator<point> > >(__gnu_cxx::__normal_iterator<point const*, std::vector<point, std::allocator<point> > > const&, __gnu_cxx::__normal_iterator<point const*, std::vector<point, std::allocator<point> > > const&) [33]
-----------------------------------------------
                0.00    0.00     659/659         floodfill(cimg_library::CImg<unsigned char>&, int, int) [13]
[37]     0.0    0.00    0.00     659         point::point(int, int) [37]
-----------------------------------------------
                0.00    0.00     659/659         __gnu_cxx::new_allocator<point>::destroy(point*) [39]
[38]     0.0    0.00    0.00     659         point::~point() [38]
-----------------------------------------------
                0.00    0.00     659/659         std::vector<point, std::allocator<point> >::pop_back() [42]
[39]     0.0    0.00    0.00     659         __gnu_cxx::new_allocator<point>::destroy(point*) [39]
                0.00    0.00     659/659         point::~point() [38]
-----------------------------------------------
                0.00    0.00      23/659         void std::vector<point, std::allocator<point> >::_M_insert_aux<point>(__gnu_cxx::__normal_iterator<point*, std::vector<point, std::allocator<point> > >, point&&) [112]
                0.00    0.00     636/659         void std::vector<point, std::allocator<point> >::emplace_back<point>(point&&) [41]
[40]     0.0    0.00    0.00     659         void __gnu_cxx::new_allocator<point>::construct<point>(point*, point&&) [40]
                0.00    0.00     659/1783        point&& std::forward<point>(std::remove_reference<point>::type&) [25]
                0.00    0.00     659/1224        operator new(unsigned long, void*) [28]
-----------------------------------------------
                0.00    0.00     659/659         std::vector<point, std::allocator<point> >::push_back(point&&) [43]
[41]     0.0    0.00    0.00     659         void std::vector<point, std::allocator<point> >::emplace_back<point>(point&&) [41]
                0.00    0.00     659/1783        point&& std::forward<point>(std::remove_reference<point>::type&) [25]
                0.00    0.00     636/659         void __gnu_cxx::new_allocator<point>::construct<point>(point*, point&&) [40]
                0.00    0.00      23/42          std::vector<point, std::allocator<point> >::end() [94]
                0.00    0.00      23/23          void std::vector<point, std::allocator<point> >::_M_insert_aux<point>(__gnu_cxx::__normal_iterator<point*, std::vector<point, std::allocator<point> > >, point&&) [112]
-----------------------------------------------
                0.00    0.00     659/659         floodfill(cimg_library::CImg<unsigned char>&, int, int) [13]
[42]     0.0    0.00    0.00     659         std::vector<point, std::allocator<point> >::pop_back() [42]
                0.00    0.00     659/659         __gnu_cxx::new_allocator<point>::destroy(point*) [39]
-----------------------------------------------
                0.00    0.00     659/659         floodfill(cimg_library::CImg<unsigned char>&, int, int) [13]
[43]     0.0    0.00    0.00     659         std::vector<point, std::allocator<point> >::push_back(point&&) [43]
                0.00    0.00     659/1101        std::remove_reference<point&>::type&& std::move<point&>(point&) [30]
                0.00    0.00     659/659         void std::vector<point, std::allocator<point> >::emplace_back<point>(point&&) [41]
-----------------------------------------------
                0.00    0.00     526/526         bool std::operator!=<point*>(std::move_iterator<point*> const&, std::move_iterator<point*> const&) [45]
[44]     0.0    0.00    0.00     526         bool std::operator==<point*>(std::move_iterator<point*> const&, std::move_iterator<point*> const&) [44]
                0.00    0.00    1052/1052        std::move_iterator<point*>::base() const [31]
-----------------------------------------------
                0.00    0.00     526/526         point* std::__uninitialized_copy<false>::__uninit_copy<std::move_iterator<point*>, point*>(std::move_iterator<point*>, std::move_iterator<point*>, point*) [69]
[45]     0.0    0.00    0.00     526         bool std::operator!=<point*>(std::move_iterator<point*> const&, std::move_iterator<point*> const&) [45]
                0.00    0.00     526/526         bool std::operator==<point*>(std::move_iterator<point*> const&, std::move_iterator<point*> const&) [44]
-----------------------------------------------
                0.00    0.00      48/508         std::vector<possibleCenter, std::allocator<possibleCenter> >::_M_check_len(unsigned long, char const*) const [131]
                0.00    0.00     460/508         outline::isCircle() [201]
[46]     0.0    0.00    0.00     508         std::vector<possibleCenter, std::allocator<possibleCenter> >::size() const [46]
-----------------------------------------------
                0.00    0.00     456/456         precisePoint::distanceTo(point) [54]
[47]     0.0    0.00    0.00     456         square(float) [47]
-----------------------------------------------
                0.00    0.00     442/442         point* std::__uninitialized_copy<false>::__uninit_copy<std::move_iterator<point*>, point*>(std::move_iterator<point*>, std::move_iterator<point*>, point*) [69]
[48]     0.0    0.00    0.00     442         std::move_iterator<point*>::operator*() const [48]
                0.00    0.00     442/1101        std::remove_reference<point&>::type&& std::move<point&>(point&) [30]
-----------------------------------------------
                0.00    0.00     442/442         point* std::__uninitialized_copy<false>::__uninit_copy<std::move_iterator<point*>, point*>(std::move_iterator<point*>, std::move_iterator<point*>, point*) [69]
[49]     0.0    0.00    0.00     442         std::move_iterator<point*>::operator++() [49]
-----------------------------------------------
                0.00    0.00     442/442         point* std::__uninitialized_copy<false>::__uninit_copy<std::move_iterator<point*>, point*>(std::move_iterator<point*>, std::move_iterator<point*>, point*) [69]
[50]     0.0    0.00    0.00     442         _ZSt10_ConstructI5pointIS0_EEvPT_DpOT0_ [50]
                0.00    0.00     442/1783        point&& std::forward<point>(std::remove_reference<point>::type&) [25]
                0.00    0.00     442/1224        operator new(unsigned long, void*) [28]
-----------------------------------------------
                0.00    0.00     442/442         point* std::__uninitialized_copy<false>::__uninit_copy<std::move_iterator<point*>, point*>(std::move_iterator<point*>, std::move_iterator<point*>, point*) [69]
[51]     0.0    0.00    0.00     442         point* std::__addressof<point>(point&) [51]
-----------------------------------------------
                0.00    0.00     430/430         outline::isCircle() [201]
[52]     0.0    0.00    0.00     430         std::vector<possibleCenter, std::allocator<possibleCenter> >::operator[](unsigned long) [52]
-----------------------------------------------
                0.00    0.00     393/393         outline::isCircle() [201]
[53]     0.0    0.00    0.00     393         possibleCenter::compare(precisePoint, float) [53]
                0.00    0.00     537/521897      std::abs(float) [19]
-----------------------------------------------
                0.00    0.00     228/228         outline::isCircle() [201]
[54]     0.0    0.00    0.00     228         precisePoint::distanceTo(point) [54]
                0.00    0.00     456/456         square(float) [47]
                0.00    0.00     228/228         std::sqrt(float) [55]
-----------------------------------------------
                0.00    0.00     228/228         precisePoint::distanceTo(point) [54]
[55]     0.0    0.00    0.00     228         std::sqrt(float) [55]
-----------------------------------------------
                0.00    0.00     170/170         findEquidistant(point, point, point) [64]
[56]     0.0    0.00    0.00     170         findPerpendicularLine(point, point) [56]
-----------------------------------------------
                0.00    0.00      38/168         void std::vector<point, std::allocator<point> >::_M_insert_aux<point const&>(__gnu_cxx::__normal_iterator<point*, std::vector<point, std::allocator<point> > >, point const&) [116]
                0.00    0.00      46/168         void std::vector<point, std::allocator<point> >::_M_insert_aux<point>(__gnu_cxx::__normal_iterator<point*, std::vector<point, std::allocator<point> > >, point&&) [112]
                0.00    0.00      84/168         __gnu_cxx::__normal_iterator<point*, std::vector<point, std::allocator<point> > >::difference_type __gnu_cxx::operator-<point*, std::vector<point, std::allocator<point> > >(__gnu_cxx::__normal_iterator<point*, std::vector<point, std::allocator<point> > > const&, __gnu_cxx::__normal_iterator<point*, std::vector<point, std::allocator<point> > > const&) [91]
[57]     0.0    0.00    0.00     168         __gnu_cxx::__normal_iterator<point*, std::vector<point, std::allocator<point> > >::base() const [57]
-----------------------------------------------
                0.00    0.00     168/168         std::move_iterator<point*> std::make_move_iterator<point*>(point* const&) [59]
[58]     0.0    0.00    0.00     168         std::move_iterator<point*>::move_iterator(point*) [58]
-----------------------------------------------
                0.00    0.00     168/168         point* std::__uninitialized_move_a<point*, point*, std::allocator<point> >(point*, point*, point*, std::allocator<point>&) [72]
[59]     0.0    0.00    0.00     168         std::move_iterator<point*> std::make_move_iterator<point*>(point* const&) [59]
                0.00    0.00     168/168         std::move_iterator<point*>::move_iterator(point*) [58]
-----------------------------------------------
                0.00    0.00     155/155         outline::isCircle() [201]
[60]     0.0    0.00    0.00     155         std::isnan(float) [60]
-----------------------------------------------
                0.00    0.00     146/146         outline::isCircle() [201]
[61]     0.0    0.00    0.00     146         std::isfinite(float) [61]
-----------------------------------------------
                0.00    0.00       6/144         std::_Vector_base<point, std::allocator<point> >::_Vector_base(std::_Vector_base<point, std::allocator<point> >&&) [172]
                0.00    0.00      12/144         std::vector<point, std::allocator<point> >::~vector() [140]
                0.00    0.00      57/144         void std::vector<point, std::allocator<point> >::_M_insert_aux<point const&>(__gnu_cxx::__normal_iterator<point*, std::vector<point, std::allocator<point> > >, point const&) [116]
                0.00    0.00      69/144         void std::vector<point, std::allocator<point> >::_M_insert_aux<point>(__gnu_cxx::__normal_iterator<point*, std::vector<point, std::allocator<point> > >, point&&) [112]
[62]     0.0    0.00    0.00     144         std::_Vector_base<point, std::allocator<point> >::_M_get_Tp_allocator() [62]
-----------------------------------------------
                0.00    0.00      42/126         __gnu_cxx::new_allocator<point>::allocate(unsigned long, void const*) [90]
                0.00    0.00      84/126         std::vector<point, std::allocator<point> >::max_size() const [68]
[63]     0.0    0.00    0.00     126         __gnu_cxx::new_allocator<point>::max_size() const [63]
-----------------------------------------------
                0.00    0.00      85/85          outline::isCircle() [201]
[64]     0.0    0.00    0.00      85         findEquidistant(point, point, point) [64]
                0.00    0.00     170/170         findPerpendicularLine(point, point) [56]
                0.00    0.00      85/85          findIntersection(line, line) [65]
-----------------------------------------------
                0.00    0.00      85/85          findEquidistant(point, point, point) [64]
[65]     0.0    0.00    0.00      85         findIntersection(line, line) [65]
-----------------------------------------------
                0.00    0.00      42/84          std::vector<point, std::allocator<point> >::end() [94]
                0.00    0.00      42/84          std::vector<point, std::allocator<point> >::begin() [95]
[66]     0.0    0.00    0.00      84         __gnu_cxx::__normal_iterator<point*, std::vector<point, std::allocator<point> > >::__normal_iterator(point* const&) [66]
-----------------------------------------------
                0.00    0.00      84/84          std::vector<point, std::allocator<point> >::max_size() const [68]
[67]     0.0    0.00    0.00      84         std::_Vector_base<point, std::allocator<point> >::_M_get_Tp_allocator() const [67]
-----------------------------------------------
                0.00    0.00      84/84          std::vector<point, std::allocator<point> >::_M_check_len(unsigned long, char const*) const [92]
[68]     0.0    0.00    0.00      84         std::vector<point, std::allocator<point> >::max_size() const [68]
                0.00    0.00      84/84          std::_Vector_base<point, std::allocator<point> >::_M_get_Tp_allocator() const [67]
                0.00    0.00      84/126         __gnu_cxx::new_allocator<point>::max_size() const [63]
-----------------------------------------------
                0.00    0.00      84/84          point* std::uninitialized_copy<std::move_iterator<point*>, point*>(std::move_iterator<point*>, std::move_iterator<point*>, point*) [70]
[69]     0.0    0.00    0.00      84         point* std::__uninitialized_copy<false>::__uninit_copy<std::move_iterator<point*>, point*>(std::move_iterator<point*>, std::move_iterator<point*>, point*) [69]
                0.00    0.00     526/526         bool std::operator!=<point*>(std::move_iterator<point*> const&, std::move_iterator<point*> const&) [45]
                0.00    0.00     442/442         std::move_iterator<point*>::operator*() const [48]
                0.00    0.00     442/442         point* std::__addressof<point>(point&) [51]
                0.00    0.00     442/442         std::move_iterator<point*>::operator++() [49]
                0.00    0.00     442/442         _ZSt10_ConstructI5pointIS0_EEvPT_DpOT0_ [50]
-----------------------------------------------
                0.00    0.00      84/84          point* std::__uninitialized_copy_a<std::move_iterator<point*>, point*, point>(std::move_iterator<point*>, std::move_iterator<point*>, point*, std::allocator<point>&) [71]
[70]     0.0    0.00    0.00      84         point* std::uninitialized_copy<std::move_iterator<point*>, point*>(std::move_iterator<point*>, std::move_iterator<point*>, point*) [70]
                0.00    0.00      84/84          point* std::__uninitialized_copy<false>::__uninit_copy<std::move_iterator<point*>, point*>(std::move_iterator<point*>, std::move_iterator<point*>, point*) [69]
-----------------------------------------------
                0.00    0.00      84/84          point* std::__uninitialized_move_a<point*, point*, std::allocator<point> >(point*, point*, point*, std::allocator<point>&) [72]
[71]     0.0    0.00    0.00      84         point* std::__uninitialized_copy_a<std::move_iterator<point*>, point*, point>(std::move_iterator<point*>, std::move_iterator<point*>, point*, std::allocator<point>&) [71]
                0.00    0.00      84/84          point* std::uninitialized_copy<std::move_iterator<point*>, point*>(std::move_iterator<point*>, std::move_iterator<point*>, point*) [70]
-----------------------------------------------
                0.00    0.00      38/84          void std::vector<point, std::allocator<point> >::_M_insert_aux<point const&>(__gnu_cxx::__normal_iterator<point*, std::vector<point, std::allocator<point> > >, point const&) [116]
                0.00    0.00      46/84          void std::vector<point, std::allocator<point> >::_M_insert_aux<point>(__gnu_cxx::__normal_iterator<point*, std::vector<point, std::allocator<point> > >, point&&) [112]
[72]     0.0    0.00    0.00      84         point* std::__uninitialized_move_a<point*, point*, std::allocator<point> >(point*, point*, point*, std::allocator<point>&) [72]
                0.00    0.00     168/168         std::move_iterator<point*> std::make_move_iterator<point*>(point* const&) [59]
                0.00    0.00      84/84          point* std::__uninitialized_copy_a<std::move_iterator<point*>, point*, point>(std::move_iterator<point*>, std::move_iterator<point*>, point*, std::allocator<point>&) [71]
-----------------------------------------------
                0.00    0.00      82/82          floodfill(cimg_library::CImg<unsigned char>&, int, int) [13]
[73]     0.0    0.00    0.00      82         outline::addPoint(point) [73]
                0.00    0.00      82/82          std::vector<point, std::allocator<point> >::push_back(point const&) [75]
-----------------------------------------------
                0.00    0.00      19/82          void std::vector<point, std::allocator<point> >::_M_insert_aux<point const&>(__gnu_cxx::__normal_iterator<point*, std::vector<point, std::allocator<point> > >, point const&) [116]
                0.00    0.00      63/82          std::vector<point, std::allocator<point> >::push_back(point const&) [75]
[74]     0.0    0.00    0.00      82         __gnu_cxx::new_allocator<point>::construct(point*, point const&) [74]
                0.00    0.00      82/1224        operator new(unsigned long, void*) [28]
-----------------------------------------------
                0.00    0.00      82/82          outline::addPoint(point) [73]
[75]     0.0    0.00    0.00      82         std::vector<point, std::allocator<point> >::push_back(point const&) [75]
                0.00    0.00      63/82          __gnu_cxx::new_allocator<point>::construct(point*, point const&) [74]
                0.00    0.00      19/42          std::vector<point, std::allocator<point> >::end() [94]
                0.00    0.00      19/19          void std::vector<point, std::allocator<point> >::_M_insert_aux<point const&>(__gnu_cxx::__normal_iterator<point*, std::vector<point, std::allocator<point> > >, point const&) [116]
-----------------------------------------------
                0.00    0.00      72/72          std::_Niter_base<possibleCenter*>::iterator_type std::__niter_base<possibleCenter*>(possibleCenter*) [77]
[76]     0.0    0.00    0.00      72         std::_Iter_base<possibleCenter*, false>::_S_base(possibleCenter*) [76]
-----------------------------------------------
                0.00    0.00      72/72          possibleCenter* std::__copy_move_a2<true, possibleCenter*, possibleCenter*>(possibleCenter*, possibleCenter*, possibleCenter*) [107]
[77]     0.0    0.00    0.00      72         std::_Niter_base<possibleCenter*>::iterator_type std::__niter_base<possibleCenter*>(possibleCenter*) [77]
                0.00    0.00      72/72          std::_Iter_base<possibleCenter*, false>::_S_base(possibleCenter*) [76]
-----------------------------------------------
                0.00    0.00       1/58          std::vector<circle, std::allocator<circle> >::_M_check_len(unsigned long, char const*) const [318]
                0.00    0.00       3/58          std::vector<outline, std::allocator<outline> >::_M_check_len(unsigned long, char const*) const [211]
                0.00    0.00      12/58          std::vector<possibleCenter, std::allocator<possibleCenter> >::_M_check_len(unsigned long, char const*) const [131]
                0.00    0.00      42/58          std::vector<point, std::allocator<point> >::_M_check_len(unsigned long, char const*) const [92]
[78]     0.0    0.00    0.00      58         unsigned long const& std::max<unsigned long>(unsigned long const&, unsigned long const&) [78]
-----------------------------------------------
                0.00    0.00      54/54          void std::_Destroy<point*>(point*, point*) [81]
[79]     0.0    0.00    0.00      54         void std::_Destroy_aux<true>::__destroy<point*>(point*, point*) [79]
-----------------------------------------------
                0.00    0.00      12/54          std::_Vector_base<point, std::allocator<point> >::~_Vector_base() [135]
                0.00    0.00      19/54          void std::vector<point, std::allocator<point> >::_M_insert_aux<point const&>(__gnu_cxx::__normal_iterator<point*, std::vector<point, std::allocator<point> > >, point const&) [116]
                0.00    0.00      23/54          void std::vector<point, std::allocator<point> >::_M_insert_aux<point>(__gnu_cxx::__normal_iterator<point*, std::vector<point, std::allocator<point> > >, point&&) [112]
[80]     0.0    0.00    0.00      54         std::_Vector_base<point, std::allocator<point> >::_M_deallocate(point*, unsigned long) [80]
                0.00    0.00      42/42          __gnu_cxx::new_allocator<point>::deallocate(point*, unsigned long) [89]
-----------------------------------------------
                0.00    0.00      54/54          void std::_Destroy<point*, point>(point*, point*, std::allocator<point>&) [82]
[81]     0.0    0.00    0.00      54         void std::_Destroy<point*>(point*, point*) [81]
                0.00    0.00      54/54          void std::_Destroy_aux<true>::__destroy<point*>(point*, point*) [79]
-----------------------------------------------
                0.00    0.00      12/54          std::vector<point, std::allocator<point> >::~vector() [140]
                0.00    0.00      19/54          void std::vector<point, std::allocator<point> >::_M_insert_aux<point const&>(__gnu_cxx::__normal_iterator<point*, std::vector<point, std::allocator<point> > >, point const&) [116]
                0.00    0.00      23/54          void std::vector<point, std::allocator<point> >::_M_insert_aux<point>(__gnu_cxx::__normal_iterator<point*, std::vector<point, std::allocator<point> > >, point&&) [112]
[82]     0.0    0.00    0.00      54         void std::_Destroy<point*, point>(point*, point*, std::allocator<point>&) [82]
                0.00    0.00      54/54          void std::_Destroy<point*>(point*, point*) [81]
-----------------------------------------------
                0.00    0.00      24/48          void std::vector<possibleCenter, std::allocator<possibleCenter> >::_M_insert_aux<possibleCenter const&>(__gnu_cxx::__normal_iterator<possibleCenter*, std::vector<possibleCenter, std::allocator<possibleCenter> > >, possibleCenter const&) [137]
                0.00    0.00      24/48          __gnu_cxx::__normal_iterator<possibleCenter*, std::vector<possibleCenter, std::allocator<possibleCenter> > >::difference_type __gnu_cxx::operator-<possibleCenter*, std::vector<possibleCenter, std::allocator<possibleCenter> > >(__gnu_cxx::__normal_iterator<possibleCenter*, std::vector<possibleCenter, std::allocator<possibleCenter> > > const&, __gnu_cxx::__normal_iterator<possibleCenter*, std::vector<possibleCenter, std::allocator<possibleCenter> > > const&) [129]
[83]     0.0    0.00    0.00      48         __gnu_cxx::__normal_iterator<possibleCenter*, std::vector<possibleCenter, std::allocator<possibleCenter> > >::base() const [83]
-----------------------------------------------
                0.00    0.00      48/48          std::_Iter_base<std::move_iterator<possibleCenter*>, true>::_S_base(std::move_iterator<possibleCenter*>) [85]
[84]     0.0    0.00    0.00      48         std::move_iterator<possibleCenter*>::base() const [84]
-----------------------------------------------
                0.00    0.00      48/48          std::_Miter_base<std::move_iterator<possibleCenter*> >::iterator_type std::__miter_base<std::move_iterator<possibleCenter*> >(std::move_iterator<possibleCenter*>) [87]
[85]     0.0    0.00    0.00      48         std::_Iter_base<std::move_iterator<possibleCenter*>, true>::_S_base(std::move_iterator<possibleCenter*>) [85]
                0.00    0.00      48/48          std::move_iterator<possibleCenter*>::base() const [84]
-----------------------------------------------
                0.00    0.00      48/48          std::move_iterator<possibleCenter*> std::make_move_iterator<possibleCenter*>(possibleCenter* const&) [88]
[86]     0.0    0.00    0.00      48         std::move_iterator<possibleCenter*>::move_iterator(possibleCenter*) [86]
-----------------------------------------------
                0.00    0.00      48/48          possibleCenter* std::copy<std::move_iterator<possibleCenter*>, possibleCenter*>(std::move_iterator<possibleCenter*>, std::move_iterator<possibleCenter*>, possibleCenter*) [111]
[87]     0.0    0.00    0.00      48         std::_Miter_base<std::move_iterator<possibleCenter*> >::iterator_type std::__miter_base<std::move_iterator<possibleCenter*> >(std::move_iterator<possibleCenter*>) [87]
                0.00    0.00      48/48          std::_Iter_base<std::move_iterator<possibleCenter*>, true>::_S_base(std::move_iterator<possibleCenter*>) [85]
-----------------------------------------------
                0.00    0.00      48/48          possibleCenter* std::__uninitialized_move_a<possibleCenter*, possibleCenter*, std::allocator<possibleCenter> >(possibleCenter*, possibleCenter*, possibleCenter*, std::allocator<possibleCenter>&) [110]
[88]     0.0    0.00    0.00      48         std::move_iterator<possibleCenter*> std::make_move_iterator<possibleCenter*>(possibleCenter* const&) [88]
                0.00    0.00      48/48          std::move_iterator<possibleCenter*>::move_iterator(possibleCenter*) [86]
-----------------------------------------------
                0.00    0.00      42/42          std::_Vector_base<point, std::allocator<point> >::_M_deallocate(point*, unsigned long) [80]
[89]     0.0    0.00    0.00      42         __gnu_cxx::new_allocator<point>::deallocate(point*, unsigned long) [89]
-----------------------------------------------
                0.00    0.00      42/42          std::_Vector_base<point, std::allocator<point> >::_M_allocate(unsigned long) [93]
[90]     0.0    0.00    0.00      42         __gnu_cxx::new_allocator<point>::allocate(unsigned long, void const*) [90]
                0.00    0.00      42/126         __gnu_cxx::new_allocator<point>::max_size() const [63]
-----------------------------------------------
                0.00    0.00      19/42          void std::vector<point, std::allocator<point> >::_M_insert_aux<point const&>(__gnu_cxx::__normal_iterator<point*, std::vector<point, std::allocator<point> > >, point const&) [116]
                0.00    0.00      23/42          void std::vector<point, std::allocator<point> >::_M_insert_aux<point>(__gnu_cxx::__normal_iterator<point*, std::vector<point, std::allocator<point> > >, point&&) [112]
[91]     0.0    0.00    0.00      42         __gnu_cxx::__normal_iterator<point*, std::vector<point, std::allocator<point> > >::difference_type __gnu_cxx::operator-<point*, std::vector<point, std::allocator<point> > >(__gnu_cxx::__normal_iterator<point*, std::vector<point, std::allocator<point> > > const&, __gnu_cxx::__normal_iterator<point*, std::vector<point, std::allocator<point> > > const&) [91]
                0.00    0.00      84/168         __gnu_cxx::__normal_iterator<point*, std::vector<point, std::allocator<point> > >::base() const [57]
-----------------------------------------------
                0.00    0.00      19/42          void std::vector<point, std::allocator<point> >::_M_insert_aux<point const&>(__gnu_cxx::__normal_iterator<point*, std::vector<point, std::allocator<point> > >, point const&) [116]
                0.00    0.00      23/42          void std::vector<point, std::allocator<point> >::_M_insert_aux<point>(__gnu_cxx::__normal_iterator<point*, std::vector<point, std::allocator<point> > >, point&&) [112]
[92]     0.0    0.00    0.00      42         std::vector<point, std::allocator<point> >::_M_check_len(unsigned long, char const*) const [92]
                0.00    0.00     168/1204        std::vector<point, std::allocator<point> >::size() const [29]
                0.00    0.00      84/84          std::vector<point, std::allocator<point> >::max_size() const [68]
                0.00    0.00      42/58          unsigned long const& std::max<unsigned long>(unsigned long const&, unsigned long const&) [78]
-----------------------------------------------
                0.00    0.00      19/42          void std::vector<point, std::allocator<point> >::_M_insert_aux<point const&>(__gnu_cxx::__normal_iterator<point*, std::vector<point, std::allocator<point> > >, point const&) [116]
                0.00    0.00      23/42          void std::vector<point, std::allocator<point> >::_M_insert_aux<point>(__gnu_cxx::__normal_iterator<point*, std::vector<point, std::allocator<point> > >, point&&) [112]
[93]     0.0    0.00    0.00      42         std::_Vector_base<point, std::allocator<point> >::_M_allocate(unsigned long) [93]
                0.00    0.00      42/42          __gnu_cxx::new_allocator<point>::allocate(unsigned long, void const*) [90]
-----------------------------------------------
                0.00    0.00      19/42          std::vector<point, std::allocator<point> >::push_back(point const&) [75]
                0.00    0.00      23/42          void std::vector<point, std::allocator<point> >::emplace_back<point>(point&&) [41]
[94]     0.0    0.00    0.00      42         std::vector<point, std::allocator<point> >::end() [94]
                0.00    0.00      42/84          __gnu_cxx::__normal_iterator<point*, std::vector<point, std::allocator<point> > >::__normal_iterator(point* const&) [66]
-----------------------------------------------
                0.00    0.00      19/42          void std::vector<point, std::allocator<point> >::_M_insert_aux<point const&>(__gnu_cxx::__normal_iterator<point*, std::vector<point, std::allocator<point> > >, point const&) [116]
                0.00    0.00      23/42          void std::vector<point, std::allocator<point> >::_M_insert_aux<point>(__gnu_cxx::__normal_iterator<point*, std::vector<point, std::allocator<point> > >, point&&) [112]
[95]     0.0    0.00    0.00      42         std::vector<point, std::allocator<point> >::begin() [95]
                0.00    0.00      42/84          __gnu_cxx::__normal_iterator<point*, std::vector<point, std::allocator<point> > >::__normal_iterator(point* const&) [66]
-----------------------------------------------
                0.00    0.00       3/39          std::vector<possibleCenter, std::allocator<possibleCenter> >::~vector() [221]
                0.00    0.00      36/39          void std::vector<possibleCenter, std::allocator<possibleCenter> >::_M_insert_aux<possibleCenter const&>(__gnu_cxx::__normal_iterator<possibleCenter*, std::vector<possibleCenter, std::allocator<possibleCenter> > >, possibleCenter const&) [137]
[96]     0.0    0.00    0.00      39         std::_Vector_base<possibleCenter, std::allocator<possibleCenter> >::_M_get_Tp_allocator() [96]
-----------------------------------------------
                0.00    0.00      12/36          __gnu_cxx::new_allocator<possibleCenter>::allocate(unsigned long, void const*) [127]
                0.00    0.00      24/36          std::vector<possibleCenter, std::allocator<possibleCenter> >::max_size() const [103]
[97]     0.0    0.00    0.00      36         __gnu_cxx::new_allocator<possibleCenter>::max_size() const [97]
-----------------------------------------------
                0.00    0.00      12/34          void std::vector<possibleCenter, std::allocator<possibleCenter> >::_M_insert_aux<possibleCenter const&>(__gnu_cxx::__normal_iterator<possibleCenter*, std::vector<possibleCenter, std::allocator<possibleCenter> > >, possibleCenter const&) [137]
                0.00    0.00      22/34          std::vector<possibleCenter, std::allocator<possibleCenter> >::push_back(possibleCenter const&) [99]
[98]     0.0    0.00    0.00      34         __gnu_cxx::new_allocator<possibleCenter>::construct(possibleCenter*, possibleCenter const&) [98]
                0.00    0.00      34/1224        operator new(unsigned long, void*) [28]
-----------------------------------------------
                0.00    0.00      34/34          outline::isCircle() [201]
[99]     0.0    0.00    0.00      34         std::vector<possibleCenter, std::allocator<possibleCenter> >::push_back(possibleCenter const&) [99]
                0.00    0.00      22/34          __gnu_cxx::new_allocator<possibleCenter>::construct(possibleCenter*, possibleCenter const&) [98]
                0.00    0.00      12/12          std::vector<possibleCenter, std::allocator<possibleCenter> >::end() [138]
                0.00    0.00      12/12          void std::vector<possibleCenter, std::allocator<possibleCenter> >::_M_insert_aux<possibleCenter const&>(__gnu_cxx::__normal_iterator<possibleCenter*, std::vector<possibleCenter, std::allocator<possibleCenter> > >, possibleCenter const&) [137]
-----------------------------------------------
                0.00    0.00       2/24          cimg_library::CImg<unsigned char>::deriche(float, int, char, bool) [3]
                0.00    0.00      22/24          cimg_library::cimg::strncasecmp(char const*, char const*, int) [155]
[100]    0.0    0.00    0.00      24         cimg_library::cimg::uncase(char) [100]
-----------------------------------------------
                0.00    0.00      12/24          std::vector<possibleCenter, std::allocator<possibleCenter> >::end() [138]
                0.00    0.00      12/24          std::vector<possibleCenter, std::allocator<possibleCenter> >::begin() [139]
[101]    0.0    0.00    0.00      24         __gnu_cxx::__normal_iterator<possibleCenter*, std::vector<possibleCenter, std::allocator<possibleCenter> > >::__normal_iterator(possibleCenter* const&) [101]
-----------------------------------------------
                0.00    0.00      24/24          std::vector<possibleCenter, std::allocator<possibleCenter> >::max_size() const [103]
[102]    0.0    0.00    0.00      24         std::_Vector_base<possibleCenter, std::allocator<possibleCenter> >::_M_get_Tp_allocator() const [102]
-----------------------------------------------
                0.00    0.00      24/24          std::vector<possibleCenter, std::allocator<possibleCenter> >::_M_check_len(unsigned long, char const*) const [131]
[103]    0.0    0.00    0.00      24         std::vector<possibleCenter, std::allocator<possibleCenter> >::max_size() const [103]
                0.00    0.00      24/24          std::_Vector_base<possibleCenter, std::allocator<possibleCenter> >::_M_get_Tp_allocator() const [102]
                0.00    0.00      24/36          __gnu_cxx::new_allocator<possibleCenter>::max_size() const [97]
-----------------------------------------------
                0.00    0.00      24/24          possibleCenter* std::__copy_move_a<true, possibleCenter*, possibleCenter*>(possibleCenter*, possibleCenter*, possibleCenter*) [106]
[104]    0.0    0.00    0.00      24         possibleCenter* std::__copy_move<true, true, std::random_access_iterator_tag>::__copy_m<possibleCenter>(possibleCenter const*, possibleCenter const*, possibleCenter*) [104]
-----------------------------------------------
                0.00    0.00      24/24          possibleCenter* std::uninitialized_copy<std::move_iterator<possibleCenter*>, possibleCenter*>(std::move_iterator<possibleCenter*>, std::move_iterator<possibleCenter*>, possibleCenter*) [108]
[105]    0.0    0.00    0.00      24         possibleCenter* std::__uninitialized_copy<true>::__uninit_copy<std::move_iterator<possibleCenter*>, possibleCenter*>(std::move_iterator<possibleCenter*>, std::move_iterator<possibleCenter*>, possibleCenter*) [105]
                0.00    0.00      24/24          possibleCenter* std::copy<std::move_iterator<possibleCenter*>, possibleCenter*>(std::move_iterator<possibleCenter*>, std::move_iterator<possibleCenter*>, possibleCenter*) [111]
-----------------------------------------------
                0.00    0.00      24/24          possibleCenter* std::__copy_move_a2<true, possibleCenter*, possibleCenter*>(possibleCenter*, possibleCenter*, possibleCenter*) [107]
[106]    0.0    0.00    0.00      24         possibleCenter* std::__copy_move_a<true, possibleCenter*, possibleCenter*>(possibleCenter*, possibleCenter*, possibleCenter*) [106]
                0.00    0.00      24/24          possibleCenter* std::__copy_move<true, true, std::random_access_iterator_tag>::__copy_m<possibleCenter>(possibleCenter const*, possibleCenter const*, possibleCenter*) [104]
-----------------------------------------------
                0.00    0.00      24/24          possibleCenter* std::copy<std::move_iterator<possibleCenter*>, possibleCenter*>(std::move_iterator<possibleCenter*>, std::move_iterator<possibleCenter*>, possibleCenter*) [111]
[107]    0.0    0.00    0.00      24         possibleCenter* std::__copy_move_a2<true, possibleCenter*, possibleCenter*>(possibleCenter*, possibleCenter*, possibleCenter*) [107]
                0.00    0.00      72/72          std::_Niter_base<possibleCenter*>::iterator_type std::__niter_base<possibleCenter*>(possibleCenter*) [77]
                0.00    0.00      24/24          possibleCenter* std::__copy_move_a<true, possibleCenter*, possibleCenter*>(possibleCenter*, possibleCenter*, possibleCenter*) [106]
-----------------------------------------------
                0.00    0.00      24/24          possibleCenter* std::__uninitialized_copy_a<std::move_iterator<possibleCenter*>, possibleCenter*, possibleCenter>(std::move_iterator<possibleCenter*>, std::move_iterator<possibleCenter*>, possibleCenter*, std::allocator<possibleCenter>&) [109]
[108]    0.0    0.00    0.00      24         possibleCenter* std::uninitialized_copy<std::move_iterator<possibleCenter*>, possibleCenter*>(std::move_iterator<possibleCenter*>, std::move_iterator<possibleCenter*>, possibleCenter*) [108]
                0.00    0.00      24/24          possibleCenter* std::__uninitialized_copy<true>::__uninit_copy<std::move_iterator<possibleCenter*>, possibleCenter*>(std::move_iterator<possibleCenter*>, std::move_iterator<possibleCenter*>, possibleCenter*) [105]
-----------------------------------------------
                0.00    0.00      24/24          possibleCenter* std::__uninitialized_move_a<possibleCenter*, possibleCenter*, std::allocator<possibleCenter> >(possibleCenter*, possibleCenter*, possibleCenter*, std::allocator<possibleCenter>&) [110]
[109]    0.0    0.00    0.00      24         possibleCenter* std::__uninitialized_copy_a<std::move_iterator<possibleCenter*>, possibleCenter*, possibleCenter>(std::move_iterator<possibleCenter*>, std::move_iterator<possibleCenter*>, possibleCenter*, std::allocator<possibleCenter>&) [109]
                0.00    0.00      24/24          possibleCenter* std::uninitialized_copy<std::move_iterator<possibleCenter*>, possibleCenter*>(std::move_iterator<possibleCenter*>, std::move_iterator<possibleCenter*>, possibleCenter*) [108]
-----------------------------------------------
                0.00    0.00      24/24          void std::vector<possibleCenter, std::allocator<possibleCenter> >::_M_insert_aux<possibleCenter const&>(__gnu_cxx::__normal_iterator<possibleCenter*, std::vector<possibleCenter, std::allocator<possibleCenter> > >, possibleCenter const&) [137]
[110]    0.0    0.00    0.00      24         possibleCenter* std::__uninitialized_move_a<possibleCenter*, possibleCenter*, std::allocator<possibleCenter> >(possibleCenter*, possibleCenter*, possibleCenter*, std::allocator<possibleCenter>&) [110]
                0.00    0.00      48/48          std::move_iterator<possibleCenter*> std::make_move_iterator<possibleCenter*>(possibleCenter* const&) [88]
                0.00    0.00      24/24          possibleCenter* std::__uninitialized_copy_a<std::move_iterator<possibleCenter*>, possibleCenter*, possibleCenter>(std::move_iterator<possibleCenter*>, std::move_iterator<possibleCenter*>, possibleCenter*, std::allocator<possibleCenter>&) [109]
-----------------------------------------------
                0.00    0.00      24/24          possibleCenter* std::__uninitialized_copy<true>::__uninit_copy<std::move_iterator<possibleCenter*>, possibleCenter*>(std::move_iterator<possibleCenter*>, std::move_iterator<possibleCenter*>, possibleCenter*) [105]
[111]    0.0    0.00    0.00      24         possibleCenter* std::copy<std::move_iterator<possibleCenter*>, possibleCenter*>(std::move_iterator<possibleCenter*>, std::move_iterator<possibleCenter*>, possibleCenter*) [111]
                0.00    0.00      48/48          std::_Miter_base<std::move_iterator<possibleCenter*> >::iterator_type std::__miter_base<std::move_iterator<possibleCenter*> >(std::move_iterator<possibleCenter*>) [87]
                0.00    0.00      24/24          possibleCenter* std::__copy_move_a2<true, possibleCenter*, possibleCenter*>(possibleCenter*, possibleCenter*, possibleCenter*) [107]
-----------------------------------------------
                0.00    0.00      23/23          void std::vector<point, std::allocator<point> >::emplace_back<point>(point&&) [41]
[112]    0.0    0.00    0.00      23         void std::vector<point, std::allocator<point> >::_M_insert_aux<point>(__gnu_cxx::__normal_iterator<point*, std::vector<point, std::allocator<point> > >, point&&) [112]
                0.00    0.00      69/144         std::_Vector_base<point, std::allocator<point> >::_M_get_Tp_allocator() [62]
                0.00    0.00      46/168         __gnu_cxx::__normal_iterator<point*, std::vector<point, std::allocator<point> > >::base() const [57]
                0.00    0.00      46/84          point* std::__uninitialized_move_a<point*, point*, std::allocator<point> >(point*, point*, point*, std::allocator<point>&) [72]
                0.00    0.00      23/42          std::vector<point, std::allocator<point> >::_M_check_len(unsigned long, char const*) const [92]
                0.00    0.00      23/42          std::vector<point, std::allocator<point> >::begin() [95]
                0.00    0.00      23/42          __gnu_cxx::__normal_iterator<point*, std::vector<point, std::allocator<point> > >::difference_type __gnu_cxx::operator-<point*, std::vector<point, std::allocator<point> > >(__gnu_cxx::__normal_iterator<point*, std::vector<point, std::allocator<point> > > const&, __gnu_cxx::__normal_iterator<point*, std::vector<point, std::allocator<point> > > const&) [91]
                0.00    0.00      23/42          std::_Vector_base<point, std::allocator<point> >::_M_allocate(unsigned long) [93]
                0.00    0.00      23/1783        point&& std::forward<point>(std::remove_reference<point>::type&) [25]
                0.00    0.00      23/659         void __gnu_cxx::new_allocator<point>::construct<point>(point*, point&&) [40]
                0.00    0.00      23/54          void std::_Destroy<point*, point>(point*, point*, std::allocator<point>&) [82]
                0.00    0.00      23/54          std::_Vector_base<point, std::allocator<point> >::_M_deallocate(point*, unsigned long) [80]
-----------------------------------------------
                0.00    0.00       1/22          cimg_library::CImgList<char>::insert(unsigned int, unsigned int) [298]
                0.00    0.00       1/22          cimg_library::CImg<unsigned char>::_load_pnm(_IO_FILE*, char const*) [285]
                0.00    0.00       2/22          cimg_library::CImg<char>::_system_strescape() [267]
                0.00    0.00       2/22          cimg_library::CImg<unsigned char>::load_imagemagick_external(char const*) [281]
                0.00    0.00      16/22          cimg_library::CImgList<char>::~CImgList() [300]
[113]    0.0    0.00    0.00      22         cimg_library::CImg<char>::~CImg() [113]
-----------------------------------------------
                0.00    0.00      20/20          cimg_library::cimg::mutex(unsigned int, int) [115]
[114]    0.0    0.00    0.00      20         cimg_library::cimg::Mutex_attr() [114]
                0.00    0.00       1/1           cimg_library::cimg::Mutex_info::Mutex_info() [290]
-----------------------------------------------
                0.00    0.00       2/20          cimg_library::cimg::imagemagick_path(char const*, bool) [291]
                0.00    0.00      18/20          cimg_library::cimg::_exception_mode(unsigned int, bool) [149]
[115]    0.0    0.00    0.00      20         cimg_library::cimg::mutex(unsigned int, int) [115]
                0.00    0.00      20/20          cimg_library::cimg::Mutex_attr() [114]
                0.00    0.00      10/10          cimg_library::cimg::Mutex_info::unlock(unsigned int) [145]
                0.00    0.00      10/10          cimg_library::cimg::Mutex_info::lock(unsigned int) [144]
-----------------------------------------------
                0.00    0.00      19/19          std::vector<point, std::allocator<point> >::push_back(point const&) [75]
[116]    0.0    0.00    0.00      19         void std::vector<point, std::allocator<point> >::_M_insert_aux<point const&>(__gnu_cxx::__normal_iterator<point*, std::vector<point, std::allocator<point> > >, point const&) [116]
                0.00    0.00      57/144         std::_Vector_base<point, std::allocator<point> >::_M_get_Tp_allocator() [62]
                0.00    0.00      38/168         __gnu_cxx::__normal_iterator<point*, std::vector<point, std::allocator<point> > >::base() const [57]
                0.00    0.00      38/84          point* std::__uninitialized_move_a<point*, point*, std::allocator<point> >(point*, point*, point*, std::allocator<point>&) [72]
                0.00    0.00      19/42          std::vector<point, std::allocator<point> >::_M_check_len(unsigned long, char const*) const [92]
                0.00    0.00      19/42          std::vector<point, std::allocator<point> >::begin() [95]
                0.00    0.00      19/42          __gnu_cxx::__normal_iterator<point*, std::vector<point, std::allocator<point> > >::difference_type __gnu_cxx::operator-<point*, std::vector<point, std::allocator<point> > >(__gnu_cxx::__normal_iterator<point*, std::vector<point, std::allocator<point> > > const&, __gnu_cxx::__normal_iterator<point*, std::vector<point, std::allocator<point> > > const&) [91]
                0.00    0.00      19/42          std::_Vector_base<point, std::allocator<point> >::_M_allocate(unsigned long) [93]
                0.00    0.00      19/19          point const& std::forward<point const&>(std::remove_reference<point const&>::type&) [117]
                0.00    0.00      19/82          __gnu_cxx::new_allocator<point>::construct(point*, point const&) [74]
                0.00    0.00      19/54          void std::_Destroy<point*, point>(point*, point*, std::allocator<point>&) [82]
                0.00    0.00      19/54          std::_Vector_base<point, std::allocator<point> >::_M_deallocate(point*, unsigned long) [80]
-----------------------------------------------
                0.00    0.00      19/19          void std::vector<point, std::allocator<point> >::_M_insert_aux<point const&>(__gnu_cxx::__normal_iterator<point*, std::vector<point, std::allocator<point> > >, point const&) [116]
[117]    0.0    0.00    0.00      19         point const& std::forward<point const&>(std::remove_reference<point const&>::type&) [117]
-----------------------------------------------
                0.00    0.00      18/18          bool std::operator==<outline*>(std::move_iterator<outline*> const&, std::move_iterator<outline*> const&) [153]
[118]    0.0    0.00    0.00      18         std::move_iterator<outline*>::base() const [118]
-----------------------------------------------
                0.00    0.00       1/17          cimg_library::CImgList<char>::insert(unsigned int, unsigned int) [298]
                0.00    0.00      16/17          cimg_library::CImgList<char>::insert(cimg_library::CImg<char> const&, unsigned int, bool) [297]
[119]    0.0    0.00    0.00      17         cimg_library::CImg<char>::CImg() [119]
-----------------------------------------------
                0.00    0.00       4/16          whereBall(cimg_library::CImg<unsigned char>&) [2]
                0.00    0.00      12/16          std::vector<outline, std::allocator<outline> >::_M_check_len(unsigned long, char const*) const [211]
[120]    0.0    0.00    0.00      16         std::vector<outline, std::allocator<outline> >::size() const [120]
-----------------------------------------------
                0.00    0.00      15/15          void std::_Destroy<possibleCenter*>(possibleCenter*, possibleCenter*) [123]
[121]    0.0    0.00    0.00      15         void std::_Destroy_aux<true>::__destroy<possibleCenter*>(possibleCenter*, possibleCenter*) [121]
-----------------------------------------------
                0.00    0.00       3/15          std::_Vector_base<possibleCenter, std::allocator<possibleCenter> >::~_Vector_base() [217]
                0.00    0.00      12/15          void std::vector<possibleCenter, std::allocator<possibleCenter> >::_M_insert_aux<possibleCenter const&>(__gnu_cxx::__normal_iterator<possibleCenter*, std::vector<possibleCenter, std::allocator<possibleCenter> > >, possibleCenter const&) [137]
[122]    0.0    0.00    0.00      15         std::_Vector_base<possibleCenter, std::allocator<possibleCenter> >::_M_deallocate(possibleCenter*, unsigned long) [122]
                0.00    0.00      12/12          __gnu_cxx::new_allocator<possibleCenter>::deallocate(possibleCenter*, unsigned long) [126]
-----------------------------------------------
                0.00    0.00      15/15          void std::_Destroy<possibleCenter*, possibleCenter>(possibleCenter*, possibleCenter*, std::allocator<possibleCenter>&) [124]
[123]    0.0    0.00    0.00      15         void std::_Destroy<possibleCenter*>(possibleCenter*, possibleCenter*) [123]
                0.00    0.00      15/15          void std::_Destroy_aux<true>::__destroy<possibleCenter*>(possibleCenter*, possibleCenter*) [121]
-----------------------------------------------
                0.00    0.00       3/15          std::vector<possibleCenter, std::allocator<possibleCenter> >::~vector() [221]
                0.00    0.00      12/15          void std::vector<possibleCenter, std::allocator<possibleCenter> >::_M_insert_aux<possibleCenter const&>(__gnu_cxx::__normal_iterator<possibleCenter*, std::vector<possibleCenter, std::allocator<possibleCenter> > >, possibleCenter const&) [137]
[124]    0.0    0.00    0.00      15         void std::_Destroy<possibleCenter*, possibleCenter>(possibleCenter*, possibleCenter*, std::allocator<possibleCenter>&) [124]
                0.00    0.00      15/15          void std::_Destroy<possibleCenter*>(possibleCenter*, possibleCenter*) [123]
-----------------------------------------------
                0.00    0.00       3/12          floodfill(cimg_library::CImg<unsigned char>&, int, int) [13]
                0.00    0.00       9/12          outline::isCircle() [201]
[125]    0.0    0.00    0.00      12         point::point() [125]
-----------------------------------------------
                0.00    0.00      12/12          std::_Vector_base<possibleCenter, std::allocator<possibleCenter> >::_M_deallocate(possibleCenter*, unsigned long) [122]
[126]    0.0    0.00    0.00      12         __gnu_cxx::new_allocator<possibleCenter>::deallocate(possibleCenter*, unsigned long) [126]
-----------------------------------------------
                0.00    0.00      12/12          std::_Vector_base<possibleCenter, std::allocator<possibleCenter> >::_M_allocate(unsigned long) [133]
[127]    0.0    0.00    0.00      12         __gnu_cxx::new_allocator<possibleCenter>::allocate(unsigned long, void const*) [127]
                0.00    0.00      12/36          __gnu_cxx::new_allocator<possibleCenter>::max_size() const [97]
-----------------------------------------------
                0.00    0.00      12/12          std::allocator<point>::~allocator() [132]
[128]    0.0    0.00    0.00      12         __gnu_cxx::new_allocator<point>::~new_allocator() [128]
-----------------------------------------------
                0.00    0.00      12/12          void std::vector<possibleCenter, std::allocator<possibleCenter> >::_M_insert_aux<possibleCenter const&>(__gnu_cxx::__normal_iterator<possibleCenter*, std::vector<possibleCenter, std::allocator<possibleCenter> > >, possibleCenter const&) [137]
[129]    0.0    0.00    0.00      12         __gnu_cxx::__normal_iterator<possibleCenter*, std::vector<possibleCenter, std::allocator<possibleCenter> > >::difference_type __gnu_cxx::operator-<possibleCenter*, std::vector<possibleCenter, std::allocator<possibleCenter> > >(__gnu_cxx::__normal_iterator<possibleCenter*, std::vector<possibleCenter, std::allocator<possibleCenter> > > const&, __gnu_cxx::__normal_iterator<possibleCenter*, std::vector<possibleCenter, std::allocator<possibleCenter> > > const&) [129]
                0.00    0.00      24/48          __gnu_cxx::__normal_iterator<possibleCenter*, std::vector<possibleCenter, std::allocator<possibleCenter> > >::base() const [83]
-----------------------------------------------
                0.00    0.00       6/12          void std::vector<outline, std::allocator<outline> >::_M_insert_aux<outline>(__gnu_cxx::__normal_iterator<outline*, std::vector<outline, std::allocator<outline> > >, outline&&) [223]
                0.00    0.00       6/12          __gnu_cxx::__normal_iterator<outline*, std::vector<outline, std::allocator<outline> > >::difference_type __gnu_cxx::operator-<outline*, std::vector<outline, std::allocator<outline> > >(__gnu_cxx::__normal_iterator<outline*, std::vector<outline, std::allocator<outline> > > const&, __gnu_cxx::__normal_iterator<outline*, std::vector<outline, std::allocator<outline> > > const&) [208]
[130]    0.0    0.00    0.00      12         __gnu_cxx::__normal_iterator<outline*, std::vector<outline, std::allocator<outline> > >::base() const [130]
-----------------------------------------------
                0.00    0.00      12/12          void std::vector<possibleCenter, std::allocator<possibleCenter> >::_M_insert_aux<possibleCenter const&>(__gnu_cxx::__normal_iterator<possibleCenter*, std::vector<possibleCenter, std::allocator<possibleCenter> > >, possibleCenter const&) [137]
[131]    0.0    0.00    0.00      12         std::vector<possibleCenter, std::allocator<possibleCenter> >::_M_check_len(unsigned long, char const*) const [131]
                0.00    0.00      48/508         std::vector<possibleCenter, std::allocator<possibleCenter> >::size() const [46]
                0.00    0.00      24/24          std::vector<possibleCenter, std::allocator<possibleCenter> >::max_size() const [103]
                0.00    0.00      12/58          unsigned long const& std::max<unsigned long>(unsigned long const&, unsigned long const&) [78]
-----------------------------------------------
                0.00    0.00      12/12          std::_Vector_base<point, std::allocator<point> >::_Vector_impl::~_Vector_impl() [134]
[132]    0.0    0.00    0.00      12         std::allocator<point>::~allocator() [132]
                0.00    0.00      12/12          __gnu_cxx::new_allocator<point>::~new_allocator() [128]
-----------------------------------------------
                0.00    0.00      12/12          void std::vector<possibleCenter, std::allocator<possibleCenter> >::_M_insert_aux<possibleCenter const&>(__gnu_cxx::__normal_iterator<possibleCenter*, std::vector<possibleCenter, std::allocator<possibleCenter> > >, possibleCenter const&) [137]
[133]    0.0    0.00    0.00      12         std::_Vector_base<possibleCenter, std::allocator<possibleCenter> >::_M_allocate(unsigned long) [133]
                0.00    0.00      12/12          __gnu_cxx::new_allocator<possibleCenter>::allocate(unsigned long, void const*) [127]
-----------------------------------------------
                0.00    0.00      12/12          std::_Vector_base<point, std::allocator<point> >::~_Vector_base() [135]
[134]    0.0    0.00    0.00      12         std::_Vector_base<point, std::allocator<point> >::_Vector_impl::~_Vector_impl() [134]
                0.00    0.00      12/12          std::allocator<point>::~allocator() [132]
-----------------------------------------------
                0.00    0.00      12/12          std::vector<point, std::allocator<point> >::~vector() [140]
[135]    0.0    0.00    0.00      12         std::_Vector_base<point, std::allocator<point> >::~_Vector_base() [135]
                0.00    0.00      12/54          std::_Vector_base<point, std::allocator<point> >::_M_deallocate(point*, unsigned long) [80]
                0.00    0.00      12/12          std::_Vector_base<point, std::allocator<point> >::_Vector_impl::~_Vector_impl() [134]
-----------------------------------------------
                0.00    0.00      12/12          std::move_iterator<outline*> std::make_move_iterator<outline*>(outline* const&) [141]
[136]    0.0    0.00    0.00      12         std::move_iterator<outline*>::move_iterator(outline*) [136]
-----------------------------------------------
                0.00    0.00      12/12          std::vector<possibleCenter, std::allocator<possibleCenter> >::push_back(possibleCenter const&) [99]
[137]    0.0    0.00    0.00      12         void std::vector<possibleCenter, std::allocator<possibleCenter> >::_M_insert_aux<possibleCenter const&>(__gnu_cxx::__normal_iterator<possibleCenter*, std::vector<possibleCenter, std::allocator<possibleCenter> > >, possibleCenter const&) [137]
                0.00    0.00      36/39          std::_Vector_base<possibleCenter, std::allocator<possibleCenter> >::_M_get_Tp_allocator() [96]
                0.00    0.00      24/48          __gnu_cxx::__normal_iterator<possibleCenter*, std::vector<possibleCenter, std::allocator<possibleCenter> > >::base() const [83]
                0.00    0.00      24/24          possibleCenter* std::__uninitialized_move_a<possibleCenter*, possibleCenter*, std::allocator<possibleCenter> >(possibleCenter*, possibleCenter*, possibleCenter*, std::allocator<possibleCenter>&) [110]
                0.00    0.00      12/12          std::vector<possibleCenter, std::allocator<possibleCenter> >::_M_check_len(unsigned long, char const*) const [131]
                0.00    0.00      12/12          std::vector<possibleCenter, std::allocator<possibleCenter> >::begin() [139]
                0.00    0.00      12/12          __gnu_cxx::__normal_iterator<possibleCenter*, std::vector<possibleCenter, std::allocator<possibleCenter> > >::difference_type __gnu_cxx::operator-<possibleCenter*, std::vector<possibleCenter, std::allocator<possibleCenter> > >(__gnu_cxx::__normal_iterator<possibleCenter*, std::vector<possibleCenter, std::allocator<possibleCenter> > > const&, __gnu_cxx::__normal_iterator<possibleCenter*, std::vector<possibleCenter, std::allocator<possibleCenter> > > const&) [129]
                0.00    0.00      12/12          std::_Vector_base<possibleCenter, std::allocator<possibleCenter> >::_M_allocate(unsigned long) [133]
                0.00    0.00      12/12          possibleCenter const& std::forward<possibleCenter const&>(std::remove_reference<possibleCenter const&>::type&) [143]
                0.00    0.00      12/34          __gnu_cxx::new_allocator<possibleCenter>::construct(possibleCenter*, possibleCenter const&) [98]
                0.00    0.00      12/15          void std::_Destroy<possibleCenter*, possibleCenter>(possibleCenter*, possibleCenter*, std::allocator<possibleCenter>&) [124]
                0.00    0.00      12/15          std::_Vector_base<possibleCenter, std::allocator<possibleCenter> >::_M_deallocate(possibleCenter*, unsigned long) [122]
-----------------------------------------------
                0.00    0.00      12/12          std::vector<possibleCenter, std::allocator<possibleCenter> >::push_back(possibleCenter const&) [99]
[138]    0.0    0.00    0.00      12         std::vector<possibleCenter, std::allocator<possibleCenter> >::end() [138]
                0.00    0.00      12/24          __gnu_cxx::__normal_iterator<possibleCenter*, std::vector<possibleCenter, std::allocator<possibleCenter> > >::__normal_iterator(possibleCenter* const&) [101]
-----------------------------------------------
                0.00    0.00      12/12          void std::vector<possibleCenter, std::allocator<possibleCenter> >::_M_insert_aux<possibleCenter const&>(__gnu_cxx::__normal_iterator<possibleCenter*, std::vector<possibleCenter, std::allocator<possibleCenter> > >, possibleCenter const&) [137]
[139]    0.0    0.00    0.00      12         std::vector<possibleCenter, std::allocator<possibleCenter> >::begin() [139]
                0.00    0.00      12/24          __gnu_cxx::__normal_iterator<possibleCenter*, std::vector<possibleCenter, std::allocator<possibleCenter> > >::__normal_iterator(possibleCenter* const&) [101]
-----------------------------------------------
                0.00    0.00       3/12          floodfill(cimg_library::CImg<unsigned char>&, int, int) [13]
                0.00    0.00       9/12          outline::~outline() [150]
[140]    0.0    0.00    0.00      12         std::vector<point, std::allocator<point> >::~vector() [140]
                0.00    0.00      12/144         std::_Vector_base<point, std::allocator<point> >::_M_get_Tp_allocator() [62]
                0.00    0.00      12/54          void std::_Destroy<point*, point>(point*, point*, std::allocator<point>&) [82]
                0.00    0.00      12/12          std::_Vector_base<point, std::allocator<point> >::~_Vector_base() [135]
-----------------------------------------------
                0.00    0.00      12/12          outline* std::__uninitialized_move_a<outline*, outline*, std::allocator<outline> >(outline*, outline*, outline*, std::allocator<outline>&) [180]
[141]    0.0    0.00    0.00      12         std::move_iterator<outline*> std::make_move_iterator<outline*>(outline* const&) [141]
                0.00    0.00      12/12          std::move_iterator<outline*>::move_iterator(outline*) [136]
-----------------------------------------------
                0.00    0.00       3/12          void std::vector<outline, std::allocator<outline> >::emplace_back<outline>(outline&&) [222]
                0.00    0.00       3/12          void __gnu_cxx::new_allocator<outline>::construct<outline>(outline*, outline&&) [207]
                0.00    0.00       3/12          void std::vector<outline, std::allocator<outline> >::_M_insert_aux<outline>(__gnu_cxx::__normal_iterator<outline*, std::vector<outline, std::allocator<outline> > >, outline&&) [223]
                0.00    0.00       3/12          _ZSt10_ConstructI7outlineIS0_EEvPT_DpOT0_ [228]
[142]    0.0    0.00    0.00      12         outline&& std::forward<outline>(std::remove_reference<outline>::type&) [142]
-----------------------------------------------
                0.00    0.00      12/12          void std::vector<possibleCenter, std::allocator<possibleCenter> >::_M_insert_aux<possibleCenter const&>(__gnu_cxx::__normal_iterator<possibleCenter*, std::vector<possibleCenter, std::allocator<possibleCenter> > >, possibleCenter const&) [137]
[143]    0.0    0.00    0.00      12         possibleCenter const& std::forward<possibleCenter const&>(std::remove_reference<possibleCenter const&>::type&) [143]
-----------------------------------------------
                0.00    0.00      10/10          cimg_library::cimg::mutex(unsigned int, int) [115]
[144]    0.0    0.00    0.00      10         cimg_library::cimg::Mutex_info::lock(unsigned int) [144]
-----------------------------------------------
                0.00    0.00      10/10          cimg_library::cimg::mutex(unsigned int, int) [115]
[145]    0.0    0.00    0.00      10         cimg_library::cimg::Mutex_info::unlock(unsigned int) [145]
-----------------------------------------------
                0.00    0.00       1/10          cimg_library::CImg<unsigned char>::CImg(cimg_library::CImg<unsigned char> const&) [288]
                0.00    0.00       1/10          cimg_library::CImg<unsigned char>::_load_pnm(_IO_FILE*, char const*) [285]
                0.00    0.00       2/10          cimg_library::CImg<unsigned char>::assign(unsigned char const*, unsigned int, unsigned int, unsigned int, unsigned int) [236]
                0.00    0.00       2/10          cimg_library::CImg<unsigned char>::fill(unsigned char) [235]
                0.00    0.00       4/10          cimg_library::CImg<unsigned char>::assign(unsigned int, unsigned int, unsigned int, unsigned int) [186]
[146]    0.0    0.00    0.00      10         cimg_library::CImg<unsigned char>::size() const [146]
-----------------------------------------------
                0.00    0.00       1/10          std::vector<outline, std::allocator<outline> >::~vector() [343]
                0.00    0.00       9/10          void std::vector<outline, std::allocator<outline> >::_M_insert_aux<outline>(__gnu_cxx::__normal_iterator<outline*, std::vector<outline, std::allocator<outline> > >, outline&&) [223]
[147]    0.0    0.00    0.00      10         std::_Vector_base<outline, std::allocator<outline> >::_M_get_Tp_allocator() [147]
-----------------------------------------------
                0.00    0.00       1/9           cimg_library::CImgIOException::CImgIOException(char const*, ...) [266]
                0.00    0.00       2/9           cimg_library::CImg<unsigned char>::load_imagemagick_external(char const*) [281]
                0.00    0.00       3/9           cimg_library::CImg<unsigned char>::load(char const*) [282]
                0.00    0.00       3/9           cimg_library::CImg<unsigned char>::load_other(char const*) [278]
[148]    0.0    0.00    0.00       9         cimg_library::cimg::exception_mode() [148]
                0.00    0.00       9/9           cimg_library::cimg::_exception_mode(unsigned int, bool) [149]
-----------------------------------------------
                0.00    0.00       9/9           cimg_library::cimg::exception_mode() [148]
[149]    0.0    0.00    0.00       9         cimg_library::cimg::_exception_mode(unsigned int, bool) [149]
                0.00    0.00      18/20          cimg_library::cimg::mutex(unsigned int, int) [115]
-----------------------------------------------
                0.00    0.00       3/9           findOutlines(cimg_library::CImg<unsigned char>) [11]
                0.00    0.00       6/9           void std::_Destroy<outline>(outline*) [183]
[150]    0.0    0.00    0.00       9         outline::~outline() [150]
                0.00    0.00       9/12          std::vector<point, std::allocator<point> >::~vector() [140]
-----------------------------------------------
                0.00    0.00       3/9           __gnu_cxx::new_allocator<outline>::allocate(unsigned long, void const*) [206]
                0.00    0.00       6/9           std::vector<outline, std::allocator<outline> >::max_size() const [166]
[151]    0.0    0.00    0.00       9         __gnu_cxx::new_allocator<outline>::max_size() const [151]
-----------------------------------------------
                0.00    0.00       3/9           outline* std::__uninitialized_copy<false>::__uninit_copy<std::move_iterator<outline*>, outline*>(std::move_iterator<outline*>, std::move_iterator<outline*>, outline*) [174]
                0.00    0.00       6/9           void std::_Destroy_aux<false>::__destroy<outline*>(outline*, outline*) [190]
[152]    0.0    0.00    0.00       9         outline* std::__addressof<outline>(outline&) [152]
-----------------------------------------------
                0.00    0.00       9/9           bool std::operator!=<outline*>(std::move_iterator<outline*> const&, std::move_iterator<outline*> const&) [154]
[153]    0.0    0.00    0.00       9         bool std::operator==<outline*>(std::move_iterator<outline*> const&, std::move_iterator<outline*> const&) [153]
                0.00    0.00      18/18          std::move_iterator<outline*>::base() const [118]
-----------------------------------------------
                0.00    0.00       9/9           outline* std::__uninitialized_copy<false>::__uninit_copy<std::move_iterator<outline*>, outline*>(std::move_iterator<outline*>, std::move_iterator<outline*>, outline*) [174]
[154]    0.0    0.00    0.00       9         bool std::operator!=<outline*>(std::move_iterator<outline*> const&, std::move_iterator<outline*> const&) [154]
                0.00    0.00       9/9           bool std::operator==<outline*>(std::move_iterator<outline*> const&, std::move_iterator<outline*> const&) [153]
-----------------------------------------------
                0.00    0.00       2/8           cimg_library::CImg<unsigned char>::load(char const*) [282]
                0.00    0.00       6/8           cimg_library::cimg::strcasecmp(char const*, char const*) [158]
[155]    0.0    0.00    0.00       8         cimg_library::cimg::strncasecmp(char const*, char const*, int) [155]
                0.00    0.00      22/24          cimg_library::cimg::uncase(char) [100]
-----------------------------------------------
                0.00    0.00       8/8           cimg_library::CImg<char>::swap(cimg_library::CImg<char>&) [230]
[156]    0.0    0.00    0.00       8         void cimg_library::cimg::swap<unsigned int>(unsigned int&, unsigned int&) [156]
-----------------------------------------------
                0.00    0.00       6/6           cimg_library::CImg<unsigned char>::_load_pnm(_IO_FILE*, char const*) [285]
[157]    0.0    0.00    0.00       6         cimg_library::CImg<char>::operator char*() [157]
-----------------------------------------------
                0.00    0.00       1/6           cimg_library::CImg<unsigned char>::load_imagemagick_external(char const*) [281]
                0.00    0.00       5/6           cimg_library::CImg<unsigned char>::load(char const*) [282]
[158]    0.0    0.00    0.00       6         cimg_library::cimg::strcasecmp(char const*, char const*) [158]
                0.00    0.00       6/8           cimg_library::cimg::strncasecmp(char const*, char const*, int) [155]
-----------------------------------------------
                0.00    0.00       3/6           void __gnu_cxx::new_allocator<outline>::construct<outline>(outline*, outline&&) [207]
                0.00    0.00       3/6           _ZSt10_ConstructI7outlineIS0_EEvPT_DpOT0_ [228]
[159]    0.0    0.00    0.00       6         outline::outline(outline&&) [159]
                0.00    0.00       6/6           std::vector<point, std::allocator<point> >::vector(std::vector<point, std::allocator<point> >&&) [175]
-----------------------------------------------
                0.00    0.00       6/6           std::allocator<point>::allocator(std::allocator<point> const&) [167]
[160]    0.0    0.00    0.00       6         __gnu_cxx::new_allocator<point>::new_allocator(__gnu_cxx::new_allocator<point> const&) [160]
-----------------------------------------------
                0.00    0.00       6/6           std::allocator<point>::allocator() [168]
[161]    0.0    0.00    0.00       6         __gnu_cxx::new_allocator<point>::new_allocator() [161]
-----------------------------------------------
                0.00    0.00       3/6           std::vector<outline, std::allocator<outline> >::end() [224]
                0.00    0.00       3/6           std::vector<outline, std::allocator<outline> >::begin() [225]
[162]    0.0    0.00    0.00       6         __gnu_cxx::__normal_iterator<outline*, std::vector<outline, std::allocator<outline> > >::__normal_iterator(outline* const&) [162]
-----------------------------------------------
                0.00    0.00       1/6           cimg_library::CImg<char>::_system_strescape() [267]
                0.00    0.00       1/6           cimg_library::CImg<char>::CImg(cimg_library::CImg<char> const&) [273]
                0.00    0.00       1/6           cimg_library::CImg<char>::fill(char) [268]
                0.00    0.00       1/6           cimg_library::CImg<char>::CImg(cimg_library::CImg<char> const&, bool) [274]
                0.00    0.00       2/6           cimg_library::CImg<char>::end() [229]
[163]    0.0    0.00    0.00       6         cimg_library::CImg<char>::size() const [163]
-----------------------------------------------
                0.00    0.00       6/6           std::vector<outline, std::allocator<outline> >::max_size() const [166]
[164]    0.0    0.00    0.00       6         std::_Vector_base<outline, std::allocator<outline> >::_M_get_Tp_allocator() const [164]
-----------------------------------------------
                0.00    0.00       2/6           whereBall(cimg_library::CImg<unsigned char>&) [2]
                0.00    0.00       4/6           std::vector<circle, std::allocator<circle> >::_M_check_len(unsigned long, char const*) const [318]
[165]    0.0    0.00    0.00       6         std::vector<circle, std::allocator<circle> >::size() const [165]
-----------------------------------------------
                0.00    0.00       6/6           std::vector<outline, std::allocator<outline> >::_M_check_len(unsigned long, char const*) const [211]
[166]    0.0    0.00    0.00       6         std::vector<outline, std::allocator<outline> >::max_size() const [166]
                0.00    0.00       6/9           __gnu_cxx::new_allocator<outline>::max_size() const [151]
                0.00    0.00       6/6           std::_Vector_base<outline, std::allocator<outline> >::_M_get_Tp_allocator() const [164]
-----------------------------------------------
                0.00    0.00       6/6           std::_Vector_base<point, std::allocator<point> >::_Vector_impl::_Vector_impl(std::allocator<point> const&) [170]
[167]    0.0    0.00    0.00       6         std::allocator<point>::allocator(std::allocator<point> const&) [167]
                0.00    0.00       6/6           __gnu_cxx::new_allocator<point>::new_allocator(__gnu_cxx::new_allocator<point> const&) [160]
-----------------------------------------------
                0.00    0.00       6/6           std::_Vector_base<point, std::allocator<point> >::_Vector_impl::_Vector_impl() [171]
[168]    0.0    0.00    0.00       6         std::allocator<point>::allocator() [168]
                0.00    0.00       6/6           __gnu_cxx::new_allocator<point>::new_allocator() [161]
-----------------------------------------------
                0.00    0.00       6/6           std::_Niter_base<circle*>::iterator_type std::__niter_base<circle*>(circle*) [177]
[169]    0.0    0.00    0.00       6         std::_Iter_base<circle*, false>::_S_base(circle*) [169]
-----------------------------------------------
                0.00    0.00       6/6           std::_Vector_base<point, std::allocator<point> >::_Vector_base(std::_Vector_base<point, std::allocator<point> >&&) [172]
[170]    0.0    0.00    0.00       6         std::_Vector_base<point, std::allocator<point> >::_Vector_impl::_Vector_impl(std::allocator<point> const&) [170]
                0.00    0.00       6/6           std::allocator<point>::allocator(std::allocator<point> const&) [167]
-----------------------------------------------
                0.00    0.00       6/6           std::_Vector_base<point, std::allocator<point> >::_Vector_base() [173]
[171]    0.0    0.00    0.00       6         std::_Vector_base<point, std::allocator<point> >::_Vector_impl::_Vector_impl() [171]
                0.00    0.00       6/6           std::allocator<point>::allocator() [168]
-----------------------------------------------
                0.00    0.00       6/6           std::vector<point, std::allocator<point> >::vector(std::vector<point, std::allocator<point> >&&) [175]
[172]    0.0    0.00    0.00       6         std::_Vector_base<point, std::allocator<point> >::_Vector_base(std::_Vector_base<point, std::allocator<point> >&&) [172]
                0.00    0.00       6/144         std::_Vector_base<point, std::allocator<point> >::_M_get_Tp_allocator() [62]
                0.00    0.00       6/6           std::_Vector_base<point, std::allocator<point> >::_Vector_impl::_Vector_impl(std::allocator<point> const&) [170]
-----------------------------------------------
                0.00    0.00       6/6           std::vector<point, std::allocator<point> >::vector() [176]
[173]    0.0    0.00    0.00       6         std::_Vector_base<point, std::allocator<point> >::_Vector_base() [173]
                0.00    0.00       6/6           std::_Vector_base<point, std::allocator<point> >::_Vector_impl::_Vector_impl() [171]
-----------------------------------------------
                0.00    0.00       6/6           outline* std::uninitialized_copy<std::move_iterator<outline*>, outline*>(std::move_iterator<outline*>, std::move_iterator<outline*>, outline*) [178]
[174]    0.0    0.00    0.00       6         outline* std::__uninitialized_copy<false>::__uninit_copy<std::move_iterator<outline*>, outline*>(std::move_iterator<outline*>, std::move_iterator<outline*>, outline*) [174]
                0.00    0.00       9/9           bool std::operator!=<outline*>(std::move_iterator<outline*> const&, std::move_iterator<outline*> const&) [154]
                0.00    0.00       3/3           std::move_iterator<outline*>::operator*() const [210]
                0.00    0.00       3/3           _ZSt10_ConstructI7outlineIS0_EEvPT_DpOT0_ [228]
                0.00    0.00       3/9           outline* std::__addressof<outline>(outline&) [152]
                0.00    0.00       3/3           std::move_iterator<outline*>::operator++() [219]
-----------------------------------------------
                0.00    0.00       6/6           outline::outline(outline&&) [159]
[175]    0.0    0.00    0.00       6         std::vector<point, std::allocator<point> >::vector(std::vector<point, std::allocator<point> >&&) [175]
                0.00    0.00       6/6           std::remove_reference<std::vector<point, std::allocator<point> >&>::type&& std::move<std::vector<point, std::allocator<point> >&>(std::vector<point, std::allocator<point> >&) [182]
                0.00    0.00       6/6           std::_Vector_base<point, std::allocator<point> >::_Vector_base(std::_Vector_base<point, std::allocator<point> >&&) [172]
-----------------------------------------------
                0.00    0.00       3/6           floodfill(cimg_library::CImg<unsigned char>&, int, int) [13]
                0.00    0.00       3/6           outline::outline() [202]
[176]    0.0    0.00    0.00       6         std::vector<point, std::allocator<point> >::vector() [176]
                0.00    0.00       6/6           std::_Vector_base<point, std::allocator<point> >::_Vector_base() [173]
-----------------------------------------------
                0.00    0.00       6/6           circle* std::__copy_move_a2<true, circle*, circle*>(circle*, circle*, circle*) [253]
[177]    0.0    0.00    0.00       6         std::_Niter_base<circle*>::iterator_type std::__niter_base<circle*>(circle*) [177]
                0.00    0.00       6/6           std::_Iter_base<circle*, false>::_S_base(circle*) [169]
-----------------------------------------------
                0.00    0.00       6/6           outline* std::__uninitialized_copy_a<std::move_iterator<outline*>, outline*, outline>(std::move_iterator<outline*>, std::move_iterator<outline*>, outline*, std::allocator<outline>&) [179]
[178]    0.0    0.00    0.00       6         outline* std::uninitialized_copy<std::move_iterator<outline*>, outline*>(std::move_iterator<outline*>, std::move_iterator<outline*>, outline*) [178]
                0.00    0.00       6/6           outline* std::__uninitialized_copy<false>::__uninit_copy<std::move_iterator<outline*>, outline*>(std::move_iterator<outline*>, std::move_iterator<outline*>, outline*) [174]
-----------------------------------------------
                0.00    0.00       6/6           outline* std::__uninitialized_move_a<outline*, outline*, std::allocator<outline> >(outline*, outline*, outline*, std::allocator<outline>&) [180]
[179]    0.0    0.00    0.00       6         outline* std::__uninitialized_copy_a<std::move_iterator<outline*>, outline*, outline>(std::move_iterator<outline*>, std::move_iterator<outline*>, outline*, std::allocator<outline>&) [179]
                0.00    0.00       6/6           outline* std::uninitialized_copy<std::move_iterator<outline*>, outline*>(std::move_iterator<outline*>, std::move_iterator<outline*>, outline*) [178]
-----------------------------------------------
                0.00    0.00       6/6           void std::vector<outline, std::allocator<outline> >::_M_insert_aux<outline>(__gnu_cxx::__normal_iterator<outline*, std::vector<outline, std::allocator<outline> > >, outline&&) [223]
[180]    0.0    0.00    0.00       6         outline* std::__uninitialized_move_a<outline*, outline*, std::allocator<outline> >(outline*, outline*, outline*, std::allocator<outline>&) [180]
                0.00    0.00      12/12          std::move_iterator<outline*> std::make_move_iterator<outline*>(outline* const&) [141]
                0.00    0.00       6/6           outline* std::__uninitialized_copy_a<std::move_iterator<outline*>, outline*, outline>(std::move_iterator<outline*>, std::move_iterator<outline*>, outline*, std::allocator<outline>&) [179]
-----------------------------------------------
                0.00    0.00       3/6           std::vector<outline, std::allocator<outline> >::push_back(outline&&) [226]
                0.00    0.00       3/6           std::move_iterator<outline*>::operator*() const [210]
[181]    0.0    0.00    0.00       6         std::remove_reference<outline&>::type&& std::move<outline&>(outline&) [181]
-----------------------------------------------
                0.00    0.00       6/6           std::vector<point, std::allocator<point> >::vector(std::vector<point, std::allocator<point> >&&) [175]
[182]    0.0    0.00    0.00       6         std::remove_reference<std::vector<point, std::allocator<point> >&>::type&& std::move<std::vector<point, std::allocator<point> >&>(std::vector<point, std::allocator<point> >&) [182]
-----------------------------------------------
                0.00    0.00       6/6           void std::_Destroy_aux<false>::__destroy<outline*>(outline*, outline*) [190]
[183]    0.0    0.00    0.00       6         void std::_Destroy<outline>(outline*) [183]
                0.00    0.00       6/9           outline::~outline() [150]
-----------------------------------------------
                0.00    0.00       1/5           main [1]
                0.00    0.00       1/5           cimg_library::CImg<unsigned char>::_load_pnm(_IO_FILE*, char const*) [285]
                0.00    0.00       3/5           whereBall(cimg_library::CImg<unsigned char>&) [2]
[184]    0.0    0.00    0.00       5         cimg_library::CImg<unsigned char>::~CImg() [184]
-----------------------------------------------
                0.00    0.00       1/5           cimg_library::CImg<unsigned char>::blur(float, float, float, bool, bool) [5]
                0.00    0.00       2/5           cimg_library::CImg<unsigned char>::fill(unsigned char) [235]
                0.00    0.00       2/5           cimg_library::CImg<unsigned char>::deriche(float, int, char, bool) [3]
[185]    0.0    0.00    0.00       5         cimg_library::CImg<unsigned char>::is_empty() const [185]
-----------------------------------------------
                0.00    0.00       2/4           cimg_library::CImg<unsigned char>::_load_pnm(_IO_FILE*, char const*) [285]
                0.00    0.00       2/4           cimg_library::CImg<unsigned char>::assign(unsigned char const*, unsigned int, unsigned int, unsigned int, unsigned int) [236]
[186]    0.0    0.00    0.00       4         cimg_library::CImg<unsigned char>::assign(unsigned int, unsigned int, unsigned int, unsigned int) [186]
                0.00    0.00       4/10          cimg_library::CImg<unsigned char>::size() const [146]
-----------------------------------------------
                0.00    0.00       2/4           void std::vector<circle, std::allocator<circle> >::_M_insert_aux<circle const&>(__gnu_cxx::__normal_iterator<circle*, std::vector<circle, std::allocator<circle> > >, circle const&) [335]
                0.00    0.00       2/4           __gnu_cxx::__normal_iterator<circle*, std::vector<circle, std::allocator<circle> > >::difference_type __gnu_cxx::operator-<circle*, std::vector<circle, std::allocator<circle> > >(__gnu_cxx::__normal_iterator<circle*, std::vector<circle, std::allocator<circle> > > const&, __gnu_cxx::__normal_iterator<circle*, std::vector<circle, std::allocator<circle> > > const&) [310]
[187]    0.0    0.00    0.00       4         __gnu_cxx::__normal_iterator<circle*, std::vector<circle, std::allocator<circle> > >::base() const [187]
-----------------------------------------------
                0.00    0.00       4/4           std::_Iter_base<std::move_iterator<circle*>, true>::_S_base(std::move_iterator<circle*>) [189]
[188]    0.0    0.00    0.00       4         std::move_iterator<circle*>::base() const [188]
-----------------------------------------------
                0.00    0.00       4/4           std::_Miter_base<std::move_iterator<circle*> >::iterator_type std::__miter_base<std::move_iterator<circle*> >(std::move_iterator<circle*>) [194]
[189]    0.0    0.00    0.00       4         std::_Iter_base<std::move_iterator<circle*>, true>::_S_base(std::move_iterator<circle*>) [189]
                0.00    0.00       4/4           std::move_iterator<circle*>::base() const [188]
-----------------------------------------------
                0.00    0.00       4/4           void std::_Destroy<outline*>(outline*, outline*) [197]
[190]    0.0    0.00    0.00       4         void std::_Destroy_aux<false>::__destroy<outline*>(outline*, outline*) [190]
                0.00    0.00       6/6           void std::_Destroy<outline>(outline*) [183]
                0.00    0.00       6/9           outline* std::__addressof<outline>(outline&) [152]
-----------------------------------------------
                0.00    0.00       1/4           std::vector<circle, std::allocator<circle> >::~vector() [340]
                0.00    0.00       3/4           void std::vector<circle, std::allocator<circle> >::_M_insert_aux<circle const&>(__gnu_cxx::__normal_iterator<circle*, std::vector<circle, std::allocator<circle> > >, circle const&) [335]
[191]    0.0    0.00    0.00       4         std::_Vector_base<circle, std::allocator<circle> >::_M_get_Tp_allocator() [191]
-----------------------------------------------
                0.00    0.00       1/4           std::_Vector_base<outline, std::allocator<outline> >::~_Vector_base() [334]
                0.00    0.00       3/4           void std::vector<outline, std::allocator<outline> >::_M_insert_aux<outline>(__gnu_cxx::__normal_iterator<outline*, std::vector<outline, std::allocator<outline> > >, outline&&) [223]
[192]    0.0    0.00    0.00       4         std::_Vector_base<outline, std::allocator<outline> >::_M_deallocate(outline*, unsigned long) [192]
                0.00    0.00       3/3           __gnu_cxx::new_allocator<outline>::deallocate(outline*, unsigned long) [205]
-----------------------------------------------
                0.00    0.00       4/4           std::move_iterator<circle*> std::make_move_iterator<circle*>(circle* const&) [195]
[193]    0.0    0.00    0.00       4         std::move_iterator<circle*>::move_iterator(circle*) [193]
-----------------------------------------------
                0.00    0.00       4/4           circle* std::copy<std::move_iterator<circle*>, circle*>(std::move_iterator<circle*>, std::move_iterator<circle*>, circle*) [257]
[194]    0.0    0.00    0.00       4         std::_Miter_base<std::move_iterator<circle*> >::iterator_type std::__miter_base<std::move_iterator<circle*> >(std::move_iterator<circle*>) [194]
                0.00    0.00       4/4           std::_Iter_base<std::move_iterator<circle*>, true>::_S_base(std::move_iterator<circle*>) [189]
-----------------------------------------------
                0.00    0.00       4/4           circle* std::__uninitialized_move_a<circle*, circle*, std::allocator<circle> >(circle*, circle*, circle*, std::allocator<circle>&) [256]
[195]    0.0    0.00    0.00       4         std::move_iterator<circle*> std::make_move_iterator<circle*>(circle* const&) [195]
                0.00    0.00       4/4           std::move_iterator<circle*>::move_iterator(circle*) [193]
-----------------------------------------------
                0.00    0.00       4/4           cimg_library::CImg<unsigned char>::deriche(float, int, char, bool) [3]
[196]    0.0    0.00    0.00       4         std::exp(float) [196]
-----------------------------------------------
                0.00    0.00       4/4           void std::_Destroy<outline*, outline>(outline*, outline*, std::allocator<outline>&) [198]
[197]    0.0    0.00    0.00       4         void std::_Destroy<outline*>(outline*, outline*) [197]
                0.00    0.00       4/4           void std::_Destroy_aux<false>::__destroy<outline*>(outline*, outline*) [190]
-----------------------------------------------
                0.00    0.00       1/4           std::vector<outline, std::allocator<outline> >::~vector() [343]
                0.00    0.00       3/4           void std::vector<outline, std::allocator<outline> >::_M_insert_aux<outline>(__gnu_cxx::__normal_iterator<outline*, std::vector<outline, std::allocator<outline> > >, outline&&) [223]
[198]    0.0    0.00    0.00       4         void std::_Destroy<outline*, outline>(outline*, outline*, std::allocator<outline>&) [198]
                0.00    0.00       4/4           void std::_Destroy<outline*>(outline*, outline*) [197]
-----------------------------------------------
                0.00    0.00       3/3           cimg_library::CImg<unsigned char>::_load_pnm(_IO_FILE*, char const*) [285]
[199]    0.0    0.00    0.00       3         cimg_library::CImg<char>::data() [199]
-----------------------------------------------
                0.00    0.00       1/3           cimg_library::CImg<char>::assign(char const*, unsigned int, unsigned int, unsigned int, unsigned int) [269]
                0.00    0.00       2/3           cimg_library::CImg<char>::move_to(cimg_library::CImg<char>&) [231]
[200]    0.0    0.00    0.00       3         cimg_library::CImg<char>::assign() [200]
-----------------------------------------------
                0.00    0.00       3/3           whereBall(cimg_library::CImg<unsigned char>&) [2]
[201]    0.0    0.00    0.00       3         outline::isCircle() [201]
                0.00    0.00     460/508         std::vector<possibleCenter, std::allocator<possibleCenter> >::size() const [46]
                0.00    0.00     430/430         std::vector<possibleCenter, std::allocator<possibleCenter> >::operator[](unsigned long) [52]
                0.00    0.00     393/393         possibleCenter::compare(precisePoint, float) [53]
                0.00    0.00     377/1204        std::vector<point, std::allocator<point> >::size() const [29]
                0.00    0.00     255/914         std::vector<point, std::allocator<point> >::operator[](unsigned long) [32]
                0.00    0.00     228/228         precisePoint::distanceTo(point) [54]
                0.00    0.00     155/155         std::isnan(float) [60]
                0.00    0.00     146/146         std::isfinite(float) [61]
                0.00    0.00      85/85          findEquidistant(point, point, point) [64]
                0.00    0.00      34/34          std::vector<possibleCenter, std::allocator<possibleCenter> >::push_back(possibleCenter const&) [99]
                0.00    0.00       9/12          point::point() [125]
                0.00    0.00       3/3           std::vector<possibleCenter, std::allocator<possibleCenter> >::vector() [220]
                0.00    0.00       3/3           std::vector<possibleCenter, std::allocator<possibleCenter> >::~vector() [221]
-----------------------------------------------
                0.00    0.00       3/3           floodfill(cimg_library::CImg<unsigned char>&, int, int) [13]
[202]    0.0    0.00    0.00       3         outline::outline() [202]
                0.00    0.00       3/6           std::vector<point, std::allocator<point> >::vector() [176]
-----------------------------------------------
                0.00    0.00       3/3           std::allocator<possibleCenter>::allocator() [212]
[203]    0.0    0.00    0.00       3         __gnu_cxx::new_allocator<possibleCenter>::new_allocator() [203]
-----------------------------------------------
                0.00    0.00       3/3           std::allocator<possibleCenter>::~allocator() [213]
[204]    0.0    0.00    0.00       3         __gnu_cxx::new_allocator<possibleCenter>::~new_allocator() [204]
-----------------------------------------------
                0.00    0.00       3/3           std::_Vector_base<outline, std::allocator<outline> >::_M_deallocate(outline*, unsigned long) [192]
[205]    0.0    0.00    0.00       3         __gnu_cxx::new_allocator<outline>::deallocate(outline*, unsigned long) [205]
-----------------------------------------------
                0.00    0.00       3/3           std::_Vector_base<outline, std::allocator<outline> >::_M_allocate(unsigned long) [218]
[206]    0.0    0.00    0.00       3         __gnu_cxx::new_allocator<outline>::allocate(unsigned long, void const*) [206]
                0.00    0.00       3/9           __gnu_cxx::new_allocator<outline>::max_size() const [151]
-----------------------------------------------
                0.00    0.00       3/3           void std::vector<outline, std::allocator<outline> >::_M_insert_aux<outline>(__gnu_cxx::__normal_iterator<outline*, std::vector<outline, std::allocator<outline> > >, outline&&) [223]
[207]    0.0    0.00    0.00       3         void __gnu_cxx::new_allocator<outline>::construct<outline>(outline*, outline&&) [207]
                0.00    0.00       3/12          outline&& std::forward<outline>(std::remove_reference<outline>::type&) [142]
                0.00    0.00       3/1224        operator new(unsigned long, void*) [28]
                0.00    0.00       3/6           outline::outline(outline&&) [159]
-----------------------------------------------
                0.00    0.00       3/3           void std::vector<outline, std::allocator<outline> >::_M_insert_aux<outline>(__gnu_cxx::__normal_iterator<outline*, std::vector<outline, std::allocator<outline> > >, outline&&) [223]
[208]    0.0    0.00    0.00       3         __gnu_cxx::__normal_iterator<outline*, std::vector<outline, std::allocator<outline> > >::difference_type __gnu_cxx::operator-<outline*, std::vector<outline, std::allocator<outline> > >(__gnu_cxx::__normal_iterator<outline*, std::vector<outline, std::allocator<outline> > > const&, __gnu_cxx::__normal_iterator<outline*, std::vector<outline, std::allocator<outline> > > const&) [208]
                0.00    0.00       6/12          __gnu_cxx::__normal_iterator<outline*, std::vector<outline, std::allocator<outline> > >::base() const [130]
-----------------------------------------------
                0.00    0.00       1/3           __gnu_cxx::new_allocator<circle>::allocate(unsigned long, void const*) [303]
                0.00    0.00       2/3           std::vector<circle, std::allocator<circle> >::max_size() const [247]
[209]    0.0    0.00    0.00       3         __gnu_cxx::new_allocator<circle>::max_size() const [209]
-----------------------------------------------
                0.00    0.00       3/3           outline* std::__uninitialized_copy<false>::__uninit_copy<std::move_iterator<outline*>, outline*>(std::move_iterator<outline*>, std::move_iterator<outline*>, outline*) [174]
[210]    0.0    0.00    0.00       3         std::move_iterator<outline*>::operator*() const [210]
                0.00    0.00       3/6           std::remove_reference<outline&>::type&& std::move<outline&>(outline&) [181]
-----------------------------------------------
                0.00    0.00       3/3           void std::vector<outline, std::allocator<outline> >::_M_insert_aux<outline>(__gnu_cxx::__normal_iterator<outline*, std::vector<outline, std::allocator<outline> > >, outline&&) [223]
[211]    0.0    0.00    0.00       3         std::vector<outline, std::allocator<outline> >::_M_check_len(unsigned long, char const*) const [211]
                0.00    0.00      12/16          std::vector<outline, std::allocator<outline> >::size() const [120]
                0.00    0.00       6/6           std::vector<outline, std::allocator<outline> >::max_size() const [166]
                0.00    0.00       3/58          unsigned long const& std::max<unsigned long>(unsigned long const&, unsigned long const&) [78]
-----------------------------------------------
                0.00    0.00       3/3           std::_Vector_base<possibleCenter, std::allocator<possibleCenter> >::_Vector_impl::_Vector_impl() [214]
[212]    0.0    0.00    0.00       3         std::allocator<possibleCenter>::allocator() [212]
                0.00    0.00       3/3           __gnu_cxx::new_allocator<possibleCenter>::new_allocator() [203]
-----------------------------------------------
                0.00    0.00       3/3           std::_Vector_base<possibleCenter, std::allocator<possibleCenter> >::_Vector_impl::~_Vector_impl() [215]
[213]    0.0    0.00    0.00       3         std::allocator<possibleCenter>::~allocator() [213]
                0.00    0.00       3/3           __gnu_cxx::new_allocator<possibleCenter>::~new_allocator() [204]
-----------------------------------------------
                0.00    0.00       3/3           std::_Vector_base<possibleCenter, std::allocator<possibleCenter> >::_Vector_base() [216]
[214]    0.0    0.00    0.00       3         std::_Vector_base<possibleCenter, std::allocator<possibleCenter> >::_Vector_impl::_Vector_impl() [214]
                0.00    0.00       3/3           std::allocator<possibleCenter>::allocator() [212]
-----------------------------------------------
                0.00    0.00       3/3           std::_Vector_base<possibleCenter, std::allocator<possibleCenter> >::~_Vector_base() [217]
[215]    0.0    0.00    0.00       3         std::_Vector_base<possibleCenter, std::allocator<possibleCenter> >::_Vector_impl::~_Vector_impl() [215]
                0.00    0.00       3/3           std::allocator<possibleCenter>::~allocator() [213]
-----------------------------------------------
                0.00    0.00       3/3           std::vector<possibleCenter, std::allocator<possibleCenter> >::vector() [220]
[216]    0.0    0.00    0.00       3         std::_Vector_base<possibleCenter, std::allocator<possibleCenter> >::_Vector_base() [216]
                0.00    0.00       3/3           std::_Vector_base<possibleCenter, std::allocator<possibleCenter> >::_Vector_impl::_Vector_impl() [214]
-----------------------------------------------
                0.00    0.00       3/3           std::vector<possibleCenter, std::allocator<possibleCenter> >::~vector() [221]
[217]    0.0    0.00    0.00       3         std::_Vector_base<possibleCenter, std::allocator<possibleCenter> >::~_Vector_base() [217]
                0.00    0.00       3/3           std::_Vector_base<possibleCenter, std::allocator<possibleCenter> >::_Vector_impl::~_Vector_impl() [215]
                0.00    0.00       3/15          std::_Vector_base<possibleCenter, std::allocator<possibleCenter> >::_M_deallocate(possibleCenter*, unsigned long) [122]
-----------------------------------------------
                0.00    0.00       3/3           void std::vector<outline, std::allocator<outline> >::_M_insert_aux<outline>(__gnu_cxx::__normal_iterator<outline*, std::vector<outline, std::allocator<outline> > >, outline&&) [223]
[218]    0.0    0.00    0.00       3         std::_Vector_base<outline, std::allocator<outline> >::_M_allocate(unsigned long) [218]
                0.00    0.00       3/3           __gnu_cxx::new_allocator<outline>::allocate(unsigned long, void const*) [206]
-----------------------------------------------
                0.00    0.00       3/3           outline* std::__uninitialized_copy<false>::__uninit_copy<std::move_iterator<outline*>, outline*>(std::move_iterator<outline*>, std::move_iterator<outline*>, outline*) [174]
[219]    0.0    0.00    0.00       3         std::move_iterator<outline*>::operator++() [219]
-----------------------------------------------
                0.00    0.00       3/3           outline::isCircle() [201]
[220]    0.0    0.00    0.00       3         std::vector<possibleCenter, std::allocator<possibleCenter> >::vector() [220]
                0.00    0.00       3/3           std::_Vector_base<possibleCenter, std::allocator<possibleCenter> >::_Vector_base() [216]
-----------------------------------------------
                0.00    0.00       3/3           outline::isCircle() [201]
[221]    0.0    0.00    0.00       3         std::vector<possibleCenter, std::allocator<possibleCenter> >::~vector() [221]
                0.00    0.00       3/39          std::_Vector_base<possibleCenter, std::allocator<possibleCenter> >::_M_get_Tp_allocator() [96]
                0.00    0.00       3/15          void std::_Destroy<possibleCenter*, possibleCenter>(possibleCenter*, possibleCenter*, std::allocator<possibleCenter>&) [124]
                0.00    0.00       3/3           std::_Vector_base<possibleCenter, std::allocator<possibleCenter> >::~_Vector_base() [217]
-----------------------------------------------
                0.00    0.00       3/3           std::vector<outline, std::allocator<outline> >::push_back(outline&&) [226]
[222]    0.0    0.00    0.00       3         void std::vector<outline, std::allocator<outline> >::emplace_back<outline>(outline&&) [222]
                0.00    0.00       3/12          outline&& std::forward<outline>(std::remove_reference<outline>::type&) [142]
                0.00    0.00       3/3           std::vector<outline, std::allocator<outline> >::end() [224]
                0.00    0.00       3/3           void std::vector<outline, std::allocator<outline> >::_M_insert_aux<outline>(__gnu_cxx::__normal_iterator<outline*, std::vector<outline, std::allocator<outline> > >, outline&&) [223]
-----------------------------------------------
                0.00    0.00       3/3           void std::vector<outline, std::allocator<outline> >::emplace_back<outline>(outline&&) [222]
[223]    0.0    0.00    0.00       3         void std::vector<outline, std::allocator<outline> >::_M_insert_aux<outline>(__gnu_cxx::__normal_iterator<outline*, std::vector<outline, std::allocator<outline> > >, outline&&) [223]
                0.00    0.00       9/10          std::_Vector_base<outline, std::allocator<outline> >::_M_get_Tp_allocator() [147]
                0.00    0.00       6/12          __gnu_cxx::__normal_iterator<outline*, std::vector<outline, std::allocator<outline> > >::base() const [130]
                0.00    0.00       6/6           outline* std::__uninitialized_move_a<outline*, outline*, std::allocator<outline> >(outline*, outline*, outline*, std::allocator<outline>&) [180]
                0.00    0.00       3/3           std::vector<outline, std::allocator<outline> >::_M_check_len(unsigned long, char const*) const [211]
                0.00    0.00       3/3           std::vector<outline, std::allocator<outline> >::begin() [225]
                0.00    0.00       3/3           __gnu_cxx::__normal_iterator<outline*, std::vector<outline, std::allocator<outline> > >::difference_type __gnu_cxx::operator-<outline*, std::vector<outline, std::allocator<outline> > >(__gnu_cxx::__normal_iterator<outline*, std::vector<outline, std::allocator<outline> > > const&, __gnu_cxx::__normal_iterator<outline*, std::vector<outline, std::allocator<outline> > > const&) [208]
                0.00    0.00       3/3           std::_Vector_base<outline, std::allocator<outline> >::_M_allocate(unsigned long) [218]
                0.00    0.00       3/12          outline&& std::forward<outline>(std::remove_reference<outline>::type&) [142]
                0.00    0.00       3/3           void __gnu_cxx::new_allocator<outline>::construct<outline>(outline*, outline&&) [207]
                0.00    0.00       3/4           void std::_Destroy<outline*, outline>(outline*, outline*, std::allocator<outline>&) [198]
                0.00    0.00       3/4           std::_Vector_base<outline, std::allocator<outline> >::_M_deallocate(outline*, unsigned long) [192]
-----------------------------------------------
                0.00    0.00       3/3           void std::vector<outline, std::allocator<outline> >::emplace_back<outline>(outline&&) [222]
[224]    0.0    0.00    0.00       3         std::vector<outline, std::allocator<outline> >::end() [224]
                0.00    0.00       3/6           __gnu_cxx::__normal_iterator<outline*, std::vector<outline, std::allocator<outline> > >::__normal_iterator(outline* const&) [162]
-----------------------------------------------
                0.00    0.00       3/3           void std::vector<outline, std::allocator<outline> >::_M_insert_aux<outline>(__gnu_cxx::__normal_iterator<outline*, std::vector<outline, std::allocator<outline> > >, outline&&) [223]
[225]    0.0    0.00    0.00       3         std::vector<outline, std::allocator<outline> >::begin() [225]
                0.00    0.00       3/6           __gnu_cxx::__normal_iterator<outline*, std::vector<outline, std::allocator<outline> > >::__normal_iterator(outline* const&) [162]
-----------------------------------------------
                0.00    0.00       3/3           findOutlines(cimg_library::CImg<unsigned char>) [11]
[226]    0.0    0.00    0.00       3         std::vector<outline, std::allocator<outline> >::push_back(outline&&) [226]
                0.00    0.00       3/6           std::remove_reference<outline&>::type&& std::move<outline&>(outline&) [181]
                0.00    0.00       3/3           void std::vector<outline, std::allocator<outline> >::emplace_back<outline>(outline&&) [222]
-----------------------------------------------
                0.00    0.00       3/3           whereBall(cimg_library::CImg<unsigned char>&) [2]
[227]    0.0    0.00    0.00       3         std::vector<outline, std::allocator<outline> >::operator[](unsigned long) [227]
-----------------------------------------------
                0.00    0.00       3/3           outline* std::__uninitialized_copy<false>::__uninit_copy<std::move_iterator<outline*>, outline*>(std::move_iterator<outline*>, std::move_iterator<outline*>, outline*) [174]
[228]    0.0    0.00    0.00       3         _ZSt10_ConstructI7outlineIS0_EEvPT_DpOT0_ [228]
                0.00    0.00       3/12          outline&& std::forward<outline>(std::remove_reference<outline>::type&) [142]
                0.00    0.00       3/1224        operator new(unsigned long, void*) [28]
                0.00    0.00       3/6           outline::outline(outline&&) [159]
-----------------------------------------------
                0.00    0.00       2/2           cimg_library::CImg<char>::_system_strescape() [267]
[229]    0.0    0.00    0.00       2         cimg_library::CImg<char>::end() [229]
                0.00    0.00       2/6           cimg_library::CImg<char>::size() const [163]
-----------------------------------------------
                0.00    0.00       2/2           cimg_library::CImg<char>::move_to(cimg_library::CImg<char>&) [231]
[230]    0.0    0.00    0.00       2         cimg_library::CImg<char>::swap(cimg_library::CImg<char>&) [230]
                0.00    0.00       8/8           void cimg_library::cimg::swap<unsigned int>(unsigned int&, unsigned int&) [156]
                0.00    0.00       2/2           void cimg_library::cimg::swap<char*>(char*&, char*&) [241]
                0.00    0.00       2/2           void cimg_library::cimg::swap<bool>(bool&, bool&) [242]
-----------------------------------------------
                0.00    0.00       1/2           cimg_library::CImgList<char>& cimg_library::CImg<char>::move_to<char>(cimg_library::CImgList<char>&, unsigned int) [272]
                0.00    0.00       1/2           cimg_library::CImg<char>::_system_strescape() [267]
[231]    0.0    0.00    0.00       2         cimg_library::CImg<char>::move_to(cimg_library::CImg<char>&) [231]
                0.00    0.00       2/2           cimg_library::CImg<char>::swap(cimg_library::CImg<char>&) [230]
                0.00    0.00       2/3           cimg_library::CImg<char>::assign() [200]
-----------------------------------------------
                0.00    0.00       1/2           cimg_library::CImg<char>::string(char const*, bool) [271]
                0.00    0.00       1/2           cimg_library::CImg<char>::_system_strescape() [267]
[232]    0.0    0.00    0.00       2         cimg_library::CImg<char>::CImg(char const*, unsigned int, unsigned int, unsigned int, unsigned int, bool) [232]
-----------------------------------------------
                0.00    0.00       2/2           cimg_library::CImg<unsigned char>::deriche(float, int, char, bool) [3]
[233]    0.0    0.00    0.00       2         cimg_library::CImg<float>::CImg(unsigned int, unsigned int, unsigned int, unsigned int) [233]
-----------------------------------------------
                0.00    0.00       2/2           cimg_library::CImg<unsigned char>::deriche(float, int, char, bool) [3]
[234]    0.0    0.00    0.00       2         cimg_library::CImg<float>::~CImg() [234]
-----------------------------------------------
                0.00    0.00       2/2           cimg_library::CImg<unsigned char>::CImg(unsigned int, unsigned int, unsigned int, unsigned int, unsigned char) [238]
[235]    0.0    0.00    0.00       2         cimg_library::CImg<unsigned char>::fill(unsigned char) [235]
                0.00    0.00       2/5           cimg_library::CImg<unsigned char>::is_empty() const [185]
                0.00    0.00       2/10          cimg_library::CImg<unsigned char>::size() const [146]
-----------------------------------------------
                0.00    0.00       2/2           cimg_library::CImg<unsigned char>& cimg_library::CImg<unsigned char>::assign<unsigned char>(cimg_library::CImg<unsigned char> const&) [237]
[236]    0.0    0.00    0.00       2         cimg_library::CImg<unsigned char>::assign(unsigned char const*, unsigned int, unsigned int, unsigned int, unsigned int) [236]
                0.00    0.00       2/10          cimg_library::CImg<unsigned char>::size() const [146]
                0.00    0.00       2/4           cimg_library::CImg<unsigned char>::assign(unsigned int, unsigned int, unsigned int, unsigned int) [186]
-----------------------------------------------
                0.00    0.00       2/2           cimg_library::CImg<unsigned char>::operator=(cimg_library::CImg<unsigned char> const&) [239]
[237]    0.0    0.00    0.00       2         cimg_library::CImg<unsigned char>& cimg_library::CImg<unsigned char>::assign<unsigned char>(cimg_library::CImg<unsigned char> const&) [237]
                0.00    0.00       2/2           cimg_library::CImg<unsigned char>::assign(unsigned char const*, unsigned int, unsigned int, unsigned int, unsigned int) [236]
-----------------------------------------------
                0.00    0.00       1/2           threshhold(cimg_library::CImg<unsigned char>&, hsv) [6]
                0.00    0.00       1/2           booleanEdgeDetect(cimg_library::CImg<unsigned char>&) [9]
[238]    0.0    0.00    0.00       2         cimg_library::CImg<unsigned char>::CImg(unsigned int, unsigned int, unsigned int, unsigned int, unsigned char) [238]
                0.00    0.00       2/2           cimg_library::CImg<unsigned char>::fill(unsigned char) [235]
-----------------------------------------------
                0.00    0.00       2/2           whereBall(cimg_library::CImg<unsigned char>&) [2]
[239]    0.0    0.00    0.00       2         cimg_library::CImg<unsigned char>::operator=(cimg_library::CImg<unsigned char> const&) [239]
                0.00    0.00       2/2           cimg_library::CImg<unsigned char>& cimg_library::CImg<unsigned char>::assign<unsigned char>(cimg_library::CImg<unsigned char> const&) [237]
-----------------------------------------------
                0.00    0.00       1/2           cimg_library::CImg<unsigned char>::load(char const*) [282]
                0.00    0.00       1/2           cimg_library::CImg<unsigned char>::load_imagemagick_external(char const*) [281]
[240]    0.0    0.00    0.00       2         cimg_library::cimg::split_filename(char const*, char*) [240]
-----------------------------------------------
                0.00    0.00       2/2           cimg_library::CImg<char>::swap(cimg_library::CImg<char>&) [230]
[241]    0.0    0.00    0.00       2         void cimg_library::cimg::swap<char*>(char*&, char*&) [241]
-----------------------------------------------
                0.00    0.00       2/2           cimg_library::CImg<char>::swap(cimg_library::CImg<char>&) [230]
[242]    0.0    0.00    0.00       2         void cimg_library::cimg::swap<bool>(bool&, bool&) [242]
-----------------------------------------------
                0.00    0.00       1/2           std::vector<circle, std::allocator<circle> >::end() [336]
                0.00    0.00       1/2           std::vector<circle, std::allocator<circle> >::begin() [337]
[243]    0.0    0.00    0.00       2         __gnu_cxx::__normal_iterator<circle*, std::vector<circle, std::allocator<circle> > >::__normal_iterator(circle* const&) [243]
-----------------------------------------------
                0.00    0.00       1/2           std::vector<circle, std::allocator<circle> >::end() const [319]
                0.00    0.00       1/2           std::vector<circle, std::allocator<circle> >::begin() const [320]
[244]    0.0    0.00    0.00       2         __gnu_cxx::__normal_iterator<circle const*, std::vector<circle, std::allocator<circle> > >::__normal_iterator(circle const* const&) [244]
-----------------------------------------------
                0.00    0.00       2/2           bool __gnu_cxx::operator==<circle const*, std::vector<circle, std::allocator<circle> > >(__gnu_cxx::__normal_iterator<circle const*, std::vector<circle, std::allocator<circle> > > const&, __gnu_cxx::__normal_iterator<circle const*, std::vector<circle, std::allocator<circle> > > const&) [309]
[245]    0.0    0.00    0.00       2         __gnu_cxx::__normal_iterator<circle const*, std::vector<circle, std::allocator<circle> > >::base() const [245]
-----------------------------------------------
                0.00    0.00       2/2           std::vector<circle, std::allocator<circle> >::max_size() const [247]
[246]    0.0    0.00    0.00       2         std::_Vector_base<circle, std::allocator<circle> >::_M_get_Tp_allocator() const [246]
-----------------------------------------------
                0.00    0.00       2/2           std::vector<circle, std::allocator<circle> >::_M_check_len(unsigned long, char const*) const [318]
[247]    0.0    0.00    0.00       2         std::vector<circle, std::allocator<circle> >::max_size() const [247]
                0.00    0.00       2/3           __gnu_cxx::new_allocator<circle>::max_size() const [209]
                0.00    0.00       2/2           std::_Vector_base<circle, std::allocator<circle> >::_M_get_Tp_allocator() const [246]
-----------------------------------------------
                0.00    0.00       2/2           circle* std::__copy_move_a<true, circle*, circle*>(circle*, circle*, circle*) [252]
[248]    0.0    0.00    0.00       2         circle* std::__copy_move<true, true, std::random_access_iterator_tag>::__copy_m<circle>(circle const*, circle const*, circle*) [248]
-----------------------------------------------
                0.00    0.00       2/2           void std::_Destroy<circle*>(circle*, circle*) [258]
[249]    0.0    0.00    0.00       2         void std::_Destroy_aux<true>::__destroy<circle*>(circle*, circle*) [249]
-----------------------------------------------
                0.00    0.00       1/2           std::_Vector_base<circle, std::allocator<circle> >::~_Vector_base() [330]
                0.00    0.00       1/2           void std::vector<circle, std::allocator<circle> >::_M_insert_aux<circle const&>(__gnu_cxx::__normal_iterator<circle*, std::vector<circle, std::allocator<circle> > >, circle const&) [335]
[250]    0.0    0.00    0.00       2         std::_Vector_base<circle, std::allocator<circle> >::_M_deallocate(circle*, unsigned long) [250]
                0.00    0.00       1/1           __gnu_cxx::new_allocator<circle>::deallocate(circle*, unsigned long) [302]
-----------------------------------------------
                0.00    0.00       2/2           circle* std::uninitialized_copy<std::move_iterator<circle*>, circle*>(std::move_iterator<circle*>, std::move_iterator<circle*>, circle*) [254]
[251]    0.0    0.00    0.00       2         circle* std::__uninitialized_copy<true>::__uninit_copy<std::move_iterator<circle*>, circle*>(std::move_iterator<circle*>, std::move_iterator<circle*>, circle*) [251]
                0.00    0.00       2/2           circle* std::copy<std::move_iterator<circle*>, circle*>(std::move_iterator<circle*>, std::move_iterator<circle*>, circle*) [257]
-----------------------------------------------
                0.00    0.00       2/2           circle* std::__copy_move_a2<true, circle*, circle*>(circle*, circle*, circle*) [253]
[252]    0.0    0.00    0.00       2         circle* std::__copy_move_a<true, circle*, circle*>(circle*, circle*, circle*) [252]
                0.00    0.00       2/2           circle* std::__copy_move<true, true, std::random_access_iterator_tag>::__copy_m<circle>(circle const*, circle const*, circle*) [248]
-----------------------------------------------
                0.00    0.00       2/2           circle* std::copy<std::move_iterator<circle*>, circle*>(std::move_iterator<circle*>, std::move_iterator<circle*>, circle*) [257]
[253]    0.0    0.00    0.00       2         circle* std::__copy_move_a2<true, circle*, circle*>(circle*, circle*, circle*) [253]
                0.00    0.00       6/6           std::_Niter_base<circle*>::iterator_type std::__niter_base<circle*>(circle*) [177]
                0.00    0.00       2/2           circle* std::__copy_move_a<true, circle*, circle*>(circle*, circle*, circle*) [252]
-----------------------------------------------
                0.00    0.00       2/2           circle* std::__uninitialized_copy_a<std::move_iterator<circle*>, circle*, circle>(std::move_iterator<circle*>, std::move_iterator<circle*>, circle*, std::allocator<circle>&) [255]
[254]    0.0    0.00    0.00       2         circle* std::uninitialized_copy<std::move_iterator<circle*>, circle*>(std::move_iterator<circle*>, std::move_iterator<circle*>, circle*) [254]
                0.00    0.00       2/2           circle* std::__uninitialized_copy<true>::__uninit_copy<std::move_iterator<circle*>, circle*>(std::move_iterator<circle*>, std::move_iterator<circle*>, circle*) [251]
-----------------------------------------------
                0.00    0.00       2/2           circle* std::__uninitialized_move_a<circle*, circle*, std::allocator<circle> >(circle*, circle*, circle*, std::allocator<circle>&) [256]
[255]    0.0    0.00    0.00       2         circle* std::__uninitialized_copy_a<std::move_iterator<circle*>, circle*, circle>(std::move_iterator<circle*>, std::move_iterator<circle*>, circle*, std::allocator<circle>&) [255]
                0.00    0.00       2/2           circle* std::uninitialized_copy<std::move_iterator<circle*>, circle*>(std::move_iterator<circle*>, std::move_iterator<circle*>, circle*) [254]
-----------------------------------------------
                0.00    0.00       2/2           void std::vector<circle, std::allocator<circle> >::_M_insert_aux<circle const&>(__gnu_cxx::__normal_iterator<circle*, std::vector<circle, std::allocator<circle> > >, circle const&) [335]
[256]    0.0    0.00    0.00       2         circle* std::__uninitialized_move_a<circle*, circle*, std::allocator<circle> >(circle*, circle*, circle*, std::allocator<circle>&) [256]
                0.00    0.00       4/4           std::move_iterator<circle*> std::make_move_iterator<circle*>(circle* const&) [195]
                0.00    0.00       2/2           circle* std::__uninitialized_copy_a<std::move_iterator<circle*>, circle*, circle>(std::move_iterator<circle*>, std::move_iterator<circle*>, circle*, std::allocator<circle>&) [255]
-----------------------------------------------
                0.00    0.00       2/2           circle* std::__uninitialized_copy<true>::__uninit_copy<std::move_iterator<circle*>, circle*>(std::move_iterator<circle*>, std::move_iterator<circle*>, circle*) [251]
[257]    0.0    0.00    0.00       2         circle* std::copy<std::move_iterator<circle*>, circle*>(std::move_iterator<circle*>, std::move_iterator<circle*>, circle*) [257]
                0.00    0.00       4/4           std::_Miter_base<std::move_iterator<circle*> >::iterator_type std::__miter_base<std::move_iterator<circle*> >(std::move_iterator<circle*>) [194]
                0.00    0.00       2/2           circle* std::__copy_move_a2<true, circle*, circle*>(circle*, circle*, circle*) [253]
-----------------------------------------------
                0.00    0.00       2/2           void std::_Destroy<circle*, circle>(circle*, circle*, std::allocator<circle>&) [259]
[258]    0.0    0.00    0.00       2         void std::_Destroy<circle*>(circle*, circle*) [258]
                0.00    0.00       2/2           void std::_Destroy_aux<true>::__destroy<circle*>(circle*, circle*) [249]
-----------------------------------------------
                0.00    0.00       1/2           std::vector<circle, std::allocator<circle> >::~vector() [340]
                0.00    0.00       1/2           void std::vector<circle, std::allocator<circle> >::_M_insert_aux<circle const&>(__gnu_cxx::__normal_iterator<circle*, std::vector<circle, std::allocator<circle> > >, circle const&) [335]
[259]    0.0    0.00    0.00       2         void std::_Destroy<circle*, circle>(circle*, circle*, std::allocator<circle>&) [259]
                0.00    0.00       2/2           void std::_Destroy<circle*>(circle*, circle*) [258]
-----------------------------------------------
                0.00    0.00       1/1           __libc_csu_init [683]
[260]    0.0    0.00    0.00       1         _GLOBAL__sub_I_WHITE [260]
                0.00    0.00       1/1           __static_initialization_and_destruction_0(int, int) [263]
-----------------------------------------------
                0.00    0.00       1/1           __libc_csu_init [683]
[261]    0.0    0.00    0.00       1         _GLOBAL__sub_I_main [261]
                0.00    0.00       1/1           __static_initialization_and_destruction_0(int, int) [262]
-----------------------------------------------
                0.00    0.00       1/1           _GLOBAL__sub_I_main [261]
[262]    0.0    0.00    0.00       1         __static_initialization_and_destruction_0(int, int) [262]
-----------------------------------------------
                0.00    0.00       1/1           _GLOBAL__sub_I_WHITE [260]
[263]    0.0    0.00    0.00       1         __static_initialization_and_destruction_0(int, int) [263]
-----------------------------------------------
                0.00    0.00       1/1           cimg_library::CImgIOException::CImgIOException(char const*, ...) [266]
[264]    0.0    0.00    0.00       1         cimg_library::CImgException::CImgException() [264]
                0.00    0.00       1/1           std::exception::exception() [344]
-----------------------------------------------
                0.00    0.00       1/1           cimg_library::CImgIOException::~CImgIOException() [349]
[265]    0.0    0.00    0.00       1         cimg_library::CImgException::~CImgException() [265]
-----------------------------------------------
                0.00    0.00       1/1           cimg_library::CImg<unsigned char>::load_magick(char const*) [280]
[266]    0.0    0.00    0.00       1         cimg_library::CImgIOException::CImgIOException(char const*, ...) [266]
                0.00    0.00       1/1           cimg_library::CImgException::CImgException() [264]
                0.00    0.00       1/9           cimg_library::cimg::exception_mode() [148]
-----------------------------------------------
                0.00    0.00       1/1           cimg_library::CImg<unsigned char>::load_imagemagick_external(char const*) [281]
[267]    0.0    0.00    0.00       1         cimg_library::CImg<char>::_system_strescape() [267]
                0.00    0.00       2/2           cimg_library::CImg<char>::end() [229]
                0.00    0.00       2/22          cimg_library::CImg<char>::~CImg() [113]
                0.00    0.00       1/1           cimg_library::CImgList<char>::CImgList() [299]
                0.00    0.00       1/6           cimg_library::CImg<char>::size() const [163]
                0.00    0.00       1/2           cimg_library::CImg<char>::CImg(char const*, unsigned int, unsigned int, unsigned int, unsigned int, bool) [232]
                0.00    0.00       1/1           cimg_library::CImgList<char>& cimg_library::CImg<char>::move_to<char>(cimg_library::CImgList<char>&, unsigned int) [272]
                0.00    0.00       1/1           cimg_library::CImgList<char>::operator>(char) const [317]
                0.00    0.00       1/2           cimg_library::CImg<char>::move_to(cimg_library::CImg<char>&) [231]
                0.00    0.00       1/1           cimg_library::CImgList<char>::~CImgList() [300]
-----------------------------------------------
                0.00    0.00       1/1           cimg_library::CImg<char>::CImg(unsigned int, unsigned int, unsigned int, unsigned int, char) [275]
[268]    0.0    0.00    0.00       1         cimg_library::CImg<char>::fill(char) [268]
                0.00    0.00       1/1           cimg_library::CImg<char>::is_empty() const [312]
                0.00    0.00       1/6           cimg_library::CImg<char>::size() const [163]
-----------------------------------------------
                0.00    0.00       1/1           cimg_library::CImg<char>& cimg_library::CImg<char>::assign<char>(cimg_library::CImg<char> const&) [270]
[269]    0.0    0.00    0.00       1         cimg_library::CImg<char>::assign(char const*, unsigned int, unsigned int, unsigned int, unsigned int) [269]
                0.00    0.00       1/3           cimg_library::CImg<char>::assign() [200]
-----------------------------------------------
                0.00    0.00       1/1           cimg_library::CImg<char>::operator=(cimg_library::CImg<char> const&) [276]
[270]    0.0    0.00    0.00       1         cimg_library::CImg<char>& cimg_library::CImg<char>::assign<char>(cimg_library::CImg<char> const&) [270]
                0.00    0.00       1/1           cimg_library::CImg<char>::assign(char const*, unsigned int, unsigned int, unsigned int, unsigned int) [269]
-----------------------------------------------
                0.00    0.00       1/1           cimg_library::CImg<unsigned char>::load_imagemagick_external(char const*) [281]
[271]    0.0    0.00    0.00       1         cimg_library::CImg<char>::string(char const*, bool) [271]
                0.00    0.00       1/2           cimg_library::CImg<char>::CImg(char const*, unsigned int, unsigned int, unsigned int, unsigned int, bool) [232]
-----------------------------------------------
                0.00    0.00       1/1           cimg_library::CImg<char>::_system_strescape() [267]
[272]    0.0    0.00    0.00       1         cimg_library::CImgList<char>& cimg_library::CImg<char>::move_to<char>(cimg_library::CImgList<char>&, unsigned int) [272]
                0.00    0.00       1/1           cimg_library::CImgList<char>::operator cimg_library::CImg<char>*() [301]
                0.00    0.00       1/1           cimg_library::CImgList<char>::insert(unsigned int, unsigned int) [298]
                0.00    0.00       1/2           cimg_library::CImg<char>::move_to(cimg_library::CImg<char>&) [231]
-----------------------------------------------
                0.00    0.00       1/1           cimg_library::CImg<unsigned char>::load_imagemagick_external(char const*) [281]
[273]    0.0    0.00    0.00       1         cimg_library::CImg<char>::CImg(cimg_library::CImg<char> const&) [273]
                0.00    0.00       1/6           cimg_library::CImg<char>::size() const [163]
-----------------------------------------------
                0.00    0.00       1/1           cimg_library::CImg<char>::operator+() const [313]
[274]    0.0    0.00    0.00       1         cimg_library::CImg<char>::CImg(cimg_library::CImg<char> const&, bool) [274]
                0.00    0.00       1/6           cimg_library::CImg<char>::size() const [163]
-----------------------------------------------
                0.00    0.00       1/1           cimg_library::CImg<unsigned char>::_load_pnm(_IO_FILE*, char const*) [285]
[275]    0.0    0.00    0.00       1         cimg_library::CImg<char>::CImg(unsigned int, unsigned int, unsigned int, unsigned int, char) [275]
                0.00    0.00       1/1           cimg_library::CImg<char>::fill(char) [268]
-----------------------------------------------
                0.00    0.00       1/1           cimg_library::CImgList<char>::insert(cimg_library::CImg<char> const&, unsigned int, bool) [297]
[276]    0.0    0.00    0.00       1         cimg_library::CImg<char>::operator=(cimg_library::CImg<char> const&) [276]
                0.00    0.00       1/1           cimg_library::CImg<char>& cimg_library::CImg<char>::assign<char>(cimg_library::CImg<char> const&) [270]
-----------------------------------------------
                0.00    0.00       1/1           cimg_library::CImg<unsigned char>::load_jpeg(char const*) [286]
[277]    0.0    0.00    0.00       1         cimg_library::CImg<unsigned char>::_load_jpeg(_IO_FILE*, char const*) [277]
                0.00    0.00       1/1           cimg_library::CImg<unsigned char>::load_other(char const*) [278]
-----------------------------------------------
                0.00    0.00       1/1           cimg_library::CImg<unsigned char>::_load_jpeg(_IO_FILE*, char const*) [277]
[278]    0.0    0.00    0.00       1         cimg_library::CImg<unsigned char>::load_other(char const*) [278]
                0.00    0.00       3/9           cimg_library::cimg::exception_mode() [148]
                0.00    0.00       1/1           cimg_library::CImg<unsigned char>::load_magick(char const*) [280]
                0.00    0.00       1/1           cimg_library::CImg<unsigned char>::load_imagemagick_external(char const*) [281]
-----------------------------------------------
                0.00    0.00       1/1           cimg_library::CImg<unsigned char>::load_magick(char const*) [280]
[279]    0.0    0.00    0.00       1         cimg_library::CImg<unsigned char>::pixel_type() [279]
                0.00    0.00       1/1           cimg_library::cimg::type<unsigned char>::string() [294]
-----------------------------------------------
                0.00    0.00       1/1           cimg_library::CImg<unsigned char>::load_other(char const*) [278]
[280]    0.0    0.00    0.00       1         cimg_library::CImg<unsigned char>::load_magick(char const*) [280]
                0.00    0.00       1/1           cimg_library::CImg<unsigned char>::pixel_type() [279]
                0.00    0.00       1/1           cimg_library::CImgIOException::CImgIOException(char const*, ...) [266]
-----------------------------------------------
                0.00    0.00       1/1           cimg_library::CImg<unsigned char>::load_other(char const*) [278]
[281]    0.0    0.00    0.00       1         cimg_library::CImg<unsigned char>::load_imagemagick_external(char const*) [281]
                0.00    0.00       2/22          cimg_library::CImg<char>::~CImg() [113]
                0.00    0.00       2/9           cimg_library::cimg::exception_mode() [148]
                0.00    0.00       1/1           cimg_library::cimg::fopen(char const*, char const*) [295]
                0.00    0.00       1/1           cimg_library::CImg<char>::string(char const*, bool) [271]
                0.00    0.00       1/1           cimg_library::CImg<char>::_system_strescape() [267]
                0.00    0.00       1/1           cimg_library::CImg<char>::CImg(cimg_library::CImg<char> const&) [273]
                0.00    0.00       1/1           cimg_library::CImg<char>::data() const [311]
                0.00    0.00       1/6           cimg_library::cimg::strcasecmp(char const*, char const*) [158]
                0.00    0.00       1/2           cimg_library::cimg::split_filename(char const*, char*) [240]
                0.00    0.00       1/1           cimg_library::cimg::imagemagick_path(char const*, bool) [291]
                0.00    0.00       1/1           cimg_library::CImg<unsigned char>::load_pnm(_IO_FILE*) [284]
-----------------------------------------------
                0.00    0.00       1/1           cimg_library::CImg<unsigned char>::assign(char const*) [283]
[282]    0.0    0.00    0.00       1         cimg_library::CImg<unsigned char>::load(char const*) [282]
                0.00    0.00       5/6           cimg_library::cimg::strcasecmp(char const*, char const*) [158]
                0.00    0.00       3/9           cimg_library::cimg::exception_mode() [148]
                0.00    0.00       2/8           cimg_library::cimg::strncasecmp(char const*, char const*, int) [155]
                0.00    0.00       1/2           cimg_library::cimg::split_filename(char const*, char*) [240]
                0.00    0.00       1/1           cimg_library::CImg<unsigned char>::load_jpeg(char const*) [286]
-----------------------------------------------
                0.00    0.00       1/1           cimg_library::CImg<unsigned char>::CImg(char const*) [287]
[283]    0.0    0.00    0.00       1         cimg_library::CImg<unsigned char>::assign(char const*) [283]
                0.00    0.00       1/1           cimg_library::CImg<unsigned char>::load(char const*) [282]
-----------------------------------------------
                0.00    0.00       1/1           cimg_library::CImg<unsigned char>::load_imagemagick_external(char const*) [281]
[284]    0.0    0.00    0.00       1         cimg_library::CImg<unsigned char>::load_pnm(_IO_FILE*) [284]
                0.00    0.00       1/1           cimg_library::CImg<unsigned char>::_load_pnm(_IO_FILE*, char const*) [285]
-----------------------------------------------
                0.00    0.00       1/1           cimg_library::CImg<unsigned char>::load_pnm(_IO_FILE*) [284]
[285]    0.0    0.00    0.00       1         cimg_library::CImg<unsigned char>::_load_pnm(_IO_FILE*, char const*) [285]
                0.00    0.00       6/6           cimg_library::CImg<char>::operator char*() [157]
                0.00    0.00       3/3           cimg_library::CImg<char>::data() [199]
                0.00    0.00       3/4203        cimg_library::CImg<unsigned char>::data(unsigned int, unsigned int, unsigned int, unsigned int) [23]
                0.00    0.00       2/4           cimg_library::CImg<unsigned char>::assign(unsigned int, unsigned int, unsigned int, unsigned int) [186]
                0.00    0.00       1/1           cimg_library::CImg<char>::CImg(unsigned int, unsigned int, unsigned int, unsigned int, char) [275]
                0.00    0.00       1/1           cimg_library::CImg<unsigned char>::CImg() [289]
                0.00    0.00       1/10          cimg_library::CImg<unsigned char>::size() const [146]
                0.00    0.00       1/1           cimg_library::cimg::superset<long, long>::type cimg_library::cimg::min<long, long>(long const&, long const&) [293]
                0.00    0.00       1/1           int cimg_library::cimg::fread<unsigned char>(unsigned char*, unsigned long, _IO_FILE*) [296]
                0.00    0.00       1/5           cimg_library::CImg<unsigned char>::~CImg() [184]
                0.00    0.00       1/22          cimg_library::CImg<char>::~CImg() [113]
-----------------------------------------------
                0.00    0.00       1/1           cimg_library::CImg<unsigned char>::load(char const*) [282]
[286]    0.0    0.00    0.00       1         cimg_library::CImg<unsigned char>::load_jpeg(char const*) [286]
                0.00    0.00       1/1           cimg_library::CImg<unsigned char>::_load_jpeg(_IO_FILE*, char const*) [277]
-----------------------------------------------
                0.00    0.00       1/1           main [1]
[287]    0.0    0.00    0.00       1         cimg_library::CImg<unsigned char>::CImg(char const*) [287]
                0.00    0.00       1/1           cimg_library::CImg<unsigned char>::assign(char const*) [283]
-----------------------------------------------
                0.00    0.00       1/1           whereBall(cimg_library::CImg<unsigned char>&) [2]
[288]    0.0    0.00    0.00       1         cimg_library::CImg<unsigned char>::CImg(cimg_library::CImg<unsigned char> const&) [288]
                0.00    0.00       1/10          cimg_library::CImg<unsigned char>::size() const [146]
-----------------------------------------------
                0.00    0.00       1/1           cimg_library::CImg<unsigned char>::_load_pnm(_IO_FILE*, char const*) [285]
[289]    0.0    0.00    0.00       1         cimg_library::CImg<unsigned char>::CImg() [289]
-----------------------------------------------
                0.00    0.00       1/1           cimg_library::cimg::Mutex_attr() [114]
[290]    0.0    0.00    0.00       1         cimg_library::cimg::Mutex_info::Mutex_info() [290]
-----------------------------------------------
                0.00    0.00       1/1           cimg_library::CImg<unsigned char>::load_imagemagick_external(char const*) [281]
[291]    0.0    0.00    0.00       1         cimg_library::cimg::imagemagick_path(char const*, bool) [291]
                0.00    0.00       2/20          cimg_library::cimg::mutex(unsigned int, int) [115]
                0.00    0.00       1/1           cimg_library::cimg::winformat_string(char*) [292]
-----------------------------------------------
                0.00    0.00       1/1           cimg_library::cimg::imagemagick_path(char const*, bool) [291]
[292]    0.0    0.00    0.00       1         cimg_library::cimg::winformat_string(char*) [292]
-----------------------------------------------
                0.00    0.00       1/1           cimg_library::CImg<unsigned char>::_load_pnm(_IO_FILE*, char const*) [285]
[293]    0.0    0.00    0.00       1         cimg_library::cimg::superset<long, long>::type cimg_library::cimg::min<long, long>(long const&, long const&) [293]
-----------------------------------------------
                0.00    0.00       1/1           cimg_library::CImg<unsigned char>::pixel_type() [279]
[294]    0.0    0.00    0.00       1         cimg_library::cimg::type<unsigned char>::string() [294]
-----------------------------------------------
                0.00    0.00       1/1           cimg_library::CImg<unsigned char>::load_imagemagick_external(char const*) [281]
[295]    0.0    0.00    0.00       1         cimg_library::cimg::fopen(char const*, char const*) [295]
-----------------------------------------------
                0.00    0.00       1/1           cimg_library::CImg<unsigned char>::_load_pnm(_IO_FILE*, char const*) [285]
[296]    0.0    0.00    0.00       1         int cimg_library::cimg::fread<unsigned char>(unsigned char*, unsigned long, _IO_FILE*) [296]
-----------------------------------------------
                0.00    0.00       1/1           cimg_library::CImgList<char>::insert(unsigned int, unsigned int) [298]
[297]    0.0    0.00    0.00       1         cimg_library::CImgList<char>::insert(cimg_library::CImg<char> const&, unsigned int, bool) [297]
                0.00    0.00      16/17          cimg_library::CImg<char>::CImg() [119]
                0.00    0.00       1/1           cimg_library::CImg<char>::operator=(cimg_library::CImg<char> const&) [276]
-----------------------------------------------
                0.00    0.00       1/1           cimg_library::CImgList<char>& cimg_library::CImg<char>::move_to<char>(cimg_library::CImgList<char>&, unsigned int) [272]
[298]    0.0    0.00    0.00       1         cimg_library::CImgList<char>::insert(unsigned int, unsigned int) [298]
                0.00    0.00       1/17          cimg_library::CImg<char>::CImg() [119]
                0.00    0.00       1/1           cimg_library::CImgList<char>::insert(cimg_library::CImg<char> const&, unsigned int, bool) [297]
                0.00    0.00       1/22          cimg_library::CImg<char>::~CImg() [113]
-----------------------------------------------
                0.00    0.00       1/1           cimg_library::CImg<char>::_system_strescape() [267]
[299]    0.0    0.00    0.00       1         cimg_library::CImgList<char>::CImgList() [299]
-----------------------------------------------
                0.00    0.00       1/1           cimg_library::CImg<char>::_system_strescape() [267]
[300]    0.0    0.00    0.00       1         cimg_library::CImgList<char>::~CImgList() [300]
                0.00    0.00      16/22          cimg_library::CImg<char>::~CImg() [113]
-----------------------------------------------
                0.00    0.00       1/1           cimg_library::CImgList<char>& cimg_library::CImg<char>::move_to<char>(cimg_library::CImgList<char>&, unsigned int) [272]
[301]    0.0    0.00    0.00       1         cimg_library::CImgList<char>::operator cimg_library::CImg<char>*() [301]
-----------------------------------------------
                0.00    0.00       1/1           std::_Vector_base<circle, std::allocator<circle> >::_M_deallocate(circle*, unsigned long) [250]
[302]    0.0    0.00    0.00       1         __gnu_cxx::new_allocator<circle>::deallocate(circle*, unsigned long) [302]
-----------------------------------------------
                0.00    0.00       1/1           std::_Vector_base<circle, std::allocator<circle> >::_M_allocate(unsigned long) [326]
[303]    0.0    0.00    0.00       1         __gnu_cxx::new_allocator<circle>::allocate(unsigned long, void const*) [303]
                0.00    0.00       1/3           __gnu_cxx::new_allocator<circle>::max_size() const [209]
-----------------------------------------------
                0.00    0.00       1/1           void std::vector<circle, std::allocator<circle> >::_M_insert_aux<circle const&>(__gnu_cxx::__normal_iterator<circle*, std::vector<circle, std::allocator<circle> > >, circle const&) [335]
[304]    0.0    0.00    0.00       1         __gnu_cxx::new_allocator<circle>::construct(circle*, circle const&) [304]
                0.00    0.00       1/1224        operator new(unsigned long, void*) [28]
-----------------------------------------------
                0.00    0.00       1/1           std::allocator<circle>::allocator() [322]
[305]    0.0    0.00    0.00       1         __gnu_cxx::new_allocator<circle>::new_allocator() [305]
-----------------------------------------------
                0.00    0.00       1/1           std::allocator<circle>::~allocator() [323]
[306]    0.0    0.00    0.00       1         __gnu_cxx::new_allocator<circle>::~new_allocator() [306]
-----------------------------------------------
                0.00    0.00       1/1           std::allocator<outline>::allocator() [324]
[307]    0.0    0.00    0.00       1         __gnu_cxx::new_allocator<outline>::new_allocator() [307]
-----------------------------------------------
                0.00    0.00       1/1           std::allocator<outline>::~allocator() [325]
[308]    0.0    0.00    0.00       1         __gnu_cxx::new_allocator<outline>::~new_allocator() [308]
-----------------------------------------------
                0.00    0.00       1/1           std::vector<circle, std::allocator<circle> >::empty() const [321]
[309]    0.0    0.00    0.00       1         bool __gnu_cxx::operator==<circle const*, std::vector<circle, std::allocator<circle> > >(__gnu_cxx::__normal_iterator<circle const*, std::vector<circle, std::allocator<circle> > > const&, __gnu_cxx::__normal_iterator<circle const*, std::vector<circle, std::allocator<circle> > > const&) [309]
                0.00    0.00       2/2           __gnu_cxx::__normal_iterator<circle const*, std::vector<circle, std::allocator<circle> > >::base() const [245]
-----------------------------------------------
                0.00    0.00       1/1           void std::vector<circle, std::allocator<circle> >::_M_insert_aux<circle const&>(__gnu_cxx::__normal_iterator<circle*, std::vector<circle, std::allocator<circle> > >, circle const&) [335]
[310]    0.0    0.00    0.00       1         __gnu_cxx::__normal_iterator<circle*, std::vector<circle, std::allocator<circle> > >::difference_type __gnu_cxx::operator-<circle*, std::vector<circle, std::allocator<circle> > >(__gnu_cxx::__normal_iterator<circle*, std::vector<circle, std::allocator<circle> > > const&, __gnu_cxx::__normal_iterator<circle*, std::vector<circle, std::allocator<circle> > > const&) [310]
                0.00    0.00       2/4           __gnu_cxx::__normal_iterator<circle*, std::vector<circle, std::allocator<circle> > >::base() const [187]
-----------------------------------------------
                0.00    0.00       1/1           cimg_library::CImg<unsigned char>::load_imagemagick_external(char const*) [281]
[311]    0.0    0.00    0.00       1         cimg_library::CImg<char>::data() const [311]
-----------------------------------------------
                0.00    0.00       1/1           cimg_library::CImg<char>::fill(char) [268]
[312]    0.0    0.00    0.00       1         cimg_library::CImg<char>::is_empty() const [312]
-----------------------------------------------
                0.00    0.00       1/1           cimg_library::CImgList<char>::get_append(char, float) const [314]
[313]    0.0    0.00    0.00       1         cimg_library::CImg<char>::operator+() const [313]
                0.00    0.00       1/1           cimg_library::CImg<char>::CImg(cimg_library::CImg<char> const&, bool) [274]
-----------------------------------------------
                0.00    0.00       1/1           cimg_library::CImgList<char>::operator>(char) const [317]
[314]    0.0    0.00    0.00       1         cimg_library::CImgList<char>::get_append(char, float) const [314]
                0.00    0.00       1/1           cimg_library::CImgList<char>::is_empty() const [315]
                0.00    0.00       1/1           cimg_library::CImgList<char>::operator cimg_library::CImg<char> const*() const [316]
                0.00    0.00       1/1           cimg_library::CImg<char>::operator+() const [313]
-----------------------------------------------
                0.00    0.00       1/1           cimg_library::CImgList<char>::get_append(char, float) const [314]
[315]    0.0    0.00    0.00       1         cimg_library::CImgList<char>::is_empty() const [315]
-----------------------------------------------
                0.00    0.00       1/1           cimg_library::CImgList<char>::get_append(char, float) const [314]
[316]    0.0    0.00    0.00       1         cimg_library::CImgList<char>::operator cimg_library::CImg<char> const*() const [316]
-----------------------------------------------
                0.00    0.00       1/1           cimg_library::CImg<char>::_system_strescape() [267]
[317]    0.0    0.00    0.00       1         cimg_library::CImgList<char>::operator>(char) const [317]
                0.00    0.00       1/1           cimg_library::CImgList<char>::get_append(char, float) const [314]
-----------------------------------------------
                0.00    0.00       1/1           void std::vector<circle, std::allocator<circle> >::_M_insert_aux<circle const&>(__gnu_cxx::__normal_iterator<circle*, std::vector<circle, std::allocator<circle> > >, circle const&) [335]
[318]    0.0    0.00    0.00       1         std::vector<circle, std::allocator<circle> >::_M_check_len(unsigned long, char const*) const [318]
                0.00    0.00       4/6           std::vector<circle, std::allocator<circle> >::size() const [165]
                0.00    0.00       2/2           std::vector<circle, std::allocator<circle> >::max_size() const [247]
                0.00    0.00       1/58          unsigned long const& std::max<unsigned long>(unsigned long const&, unsigned long const&) [78]
-----------------------------------------------
                0.00    0.00       1/1           std::vector<circle, std::allocator<circle> >::empty() const [321]
[319]    0.0    0.00    0.00       1         std::vector<circle, std::allocator<circle> >::end() const [319]
                0.00    0.00       1/2           __gnu_cxx::__normal_iterator<circle const*, std::vector<circle, std::allocator<circle> > >::__normal_iterator(circle const* const&) [244]
-----------------------------------------------
                0.00    0.00       1/1           std::vector<circle, std::allocator<circle> >::empty() const [321]
[320]    0.0    0.00    0.00       1         std::vector<circle, std::allocator<circle> >::begin() const [320]
                0.00    0.00       1/2           __gnu_cxx::__normal_iterator<circle const*, std::vector<circle, std::allocator<circle> > >::__normal_iterator(circle const* const&) [244]
-----------------------------------------------
                0.00    0.00       1/1           whereBall(cimg_library::CImg<unsigned char>&) [2]
[321]    0.0    0.00    0.00       1         std::vector<circle, std::allocator<circle> >::empty() const [321]
                0.00    0.00       1/1           std::vector<circle, std::allocator<circle> >::end() const [319]
                0.00    0.00       1/1           std::vector<circle, std::allocator<circle> >::begin() const [320]
                0.00    0.00       1/1           bool __gnu_cxx::operator==<circle const*, std::vector<circle, std::allocator<circle> > >(__gnu_cxx::__normal_iterator<circle const*, std::vector<circle, std::allocator<circle> > > const&, __gnu_cxx::__normal_iterator<circle const*, std::vector<circle, std::allocator<circle> > > const&) [309]
-----------------------------------------------
                0.00    0.00       1/1           std::_Vector_base<circle, std::allocator<circle> >::_Vector_impl::_Vector_impl() [327]
[322]    0.0    0.00    0.00       1         std::allocator<circle>::allocator() [322]
                0.00    0.00       1/1           __gnu_cxx::new_allocator<circle>::new_allocator() [305]
-----------------------------------------------
                0.00    0.00       1/1           std::_Vector_base<circle, std::allocator<circle> >::_Vector_impl::~_Vector_impl() [328]
[323]    0.0    0.00    0.00       1         std::allocator<circle>::~allocator() [323]
                0.00    0.00       1/1           __gnu_cxx::new_allocator<circle>::~new_allocator() [306]
-----------------------------------------------
                0.00    0.00       1/1           std::_Vector_base<outline, std::allocator<outline> >::_Vector_impl::_Vector_impl() [331]
[324]    0.0    0.00    0.00       1         std::allocator<outline>::allocator() [324]
                0.00    0.00       1/1           __gnu_cxx::new_allocator<outline>::new_allocator() [307]
-----------------------------------------------
                0.00    0.00       1/1           std::_Vector_base<outline, std::allocator<outline> >::_Vector_impl::~_Vector_impl() [332]
[325]    0.0    0.00    0.00       1         std::allocator<outline>::~allocator() [325]
                0.00    0.00       1/1           __gnu_cxx::new_allocator<outline>::~new_allocator() [308]
-----------------------------------------------
                0.00    0.00       1/1           void std::vector<circle, std::allocator<circle> >::_M_insert_aux<circle const&>(__gnu_cxx::__normal_iterator<circle*, std::vector<circle, std::allocator<circle> > >, circle const&) [335]
[326]    0.0    0.00    0.00       1         std::_Vector_base<circle, std::allocator<circle> >::_M_allocate(unsigned long) [326]
                0.00    0.00       1/1           __gnu_cxx::new_allocator<circle>::allocate(unsigned long, void const*) [303]
-----------------------------------------------
                0.00    0.00       1/1           std::_Vector_base<circle, std::allocator<circle> >::_Vector_base() [329]
[327]    0.0    0.00    0.00       1         std::_Vector_base<circle, std::allocator<circle> >::_Vector_impl::_Vector_impl() [327]
                0.00    0.00       1/1           std::allocator<circle>::allocator() [322]
-----------------------------------------------
                0.00    0.00       1/1           std::_Vector_base<circle, std::allocator<circle> >::~_Vector_base() [330]
[328]    0.0    0.00    0.00       1         std::_Vector_base<circle, std::allocator<circle> >::_Vector_impl::~_Vector_impl() [328]
                0.00    0.00       1/1           std::allocator<circle>::~allocator() [323]
-----------------------------------------------
                0.00    0.00       1/1           std::vector<circle, std::allocator<circle> >::vector() [339]
[329]    0.0    0.00    0.00       1         std::_Vector_base<circle, std::allocator<circle> >::_Vector_base() [329]
                0.00    0.00       1/1           std::_Vector_base<circle, std::allocator<circle> >::_Vector_impl::_Vector_impl() [327]
-----------------------------------------------
                0.00    0.00       1/1           std::vector<circle, std::allocator<circle> >::~vector() [340]
[330]    0.0    0.00    0.00       1         std::_Vector_base<circle, std::allocator<circle> >::~_Vector_base() [330]
                0.00    0.00       1/2           std::_Vector_base<circle, std::allocator<circle> >::_M_deallocate(circle*, unsigned long) [250]
                0.00    0.00       1/1           std::_Vector_base<circle, std::allocator<circle> >::_Vector_impl::~_Vector_impl() [328]
-----------------------------------------------
                0.00    0.00       1/1           std::_Vector_base<outline, std::allocator<outline> >::_Vector_base() [333]
[331]    0.0    0.00    0.00       1         std::_Vector_base<outline, std::allocator<outline> >::_Vector_impl::_Vector_impl() [331]
                0.00    0.00       1/1           std::allocator<outline>::allocator() [324]
-----------------------------------------------
                0.00    0.00       1/1           std::_Vector_base<outline, std::allocator<outline> >::~_Vector_base() [334]
[332]    0.0    0.00    0.00       1         std::_Vector_base<outline, std::allocator<outline> >::_Vector_impl::~_Vector_impl() [332]
                0.00    0.00       1/1           std::allocator<outline>::~allocator() [325]
-----------------------------------------------
                0.00    0.00       1/1           std::vector<outline, std::allocator<outline> >::vector() [342]
[333]    0.0    0.00    0.00       1         std::_Vector_base<outline, std::allocator<outline> >::_Vector_base() [333]
                0.00    0.00       1/1           std::_Vector_base<outline, std::allocator<outline> >::_Vector_impl::_Vector_impl() [331]
-----------------------------------------------
                0.00    0.00       1/1           std::vector<outline, std::allocator<outline> >::~vector() [343]
[334]    0.0    0.00    0.00       1         std::_Vector_base<outline, std::allocator<outline> >::~_Vector_base() [334]
                0.00    0.00       1/4           std::_Vector_base<outline, std::allocator<outline> >::_M_deallocate(outline*, unsigned long) [192]
                0.00    0.00       1/1           std::_Vector_base<outline, std::allocator<outline> >::_Vector_impl::~_Vector_impl() [332]
-----------------------------------------------
                0.00    0.00       1/1           std::vector<circle, std::allocator<circle> >::push_back(circle const&) [338]
[335]    0.0    0.00    0.00       1         void std::vector<circle, std::allocator<circle> >::_M_insert_aux<circle const&>(__gnu_cxx::__normal_iterator<circle*, std::vector<circle, std::allocator<circle> > >, circle const&) [335]
                0.00    0.00       3/4           std::_Vector_base<circle, std::allocator<circle> >::_M_get_Tp_allocator() [191]
                0.00    0.00       2/4           __gnu_cxx::__normal_iterator<circle*, std::vector<circle, std::allocator<circle> > >::base() const [187]
                0.00    0.00       2/2           circle* std::__uninitialized_move_a<circle*, circle*, std::allocator<circle> >(circle*, circle*, circle*, std::allocator<circle>&) [256]
                0.00    0.00       1/1           std::vector<circle, std::allocator<circle> >::_M_check_len(unsigned long, char const*) const [318]
                0.00    0.00       1/1           std::vector<circle, std::allocator<circle> >::begin() [337]
                0.00    0.00       1/1           __gnu_cxx::__normal_iterator<circle*, std::vector<circle, std::allocator<circle> > >::difference_type __gnu_cxx::operator-<circle*, std::vector<circle, std::allocator<circle> > >(__gnu_cxx::__normal_iterator<circle*, std::vector<circle, std::allocator<circle> > > const&, __gnu_cxx::__normal_iterator<circle*, std::vector<circle, std::allocator<circle> > > const&) [310]
                0.00    0.00       1/1           std::_Vector_base<circle, std::allocator<circle> >::_M_allocate(unsigned long) [326]
                0.00    0.00       1/1           circle const& std::forward<circle const&>(std::remove_reference<circle const&>::type&) [345]
                0.00    0.00       1/1           __gnu_cxx::new_allocator<circle>::construct(circle*, circle const&) [304]
                0.00    0.00       1/2           void std::_Destroy<circle*, circle>(circle*, circle*, std::allocator<circle>&) [259]
                0.00    0.00       1/2           std::_Vector_base<circle, std::allocator<circle> >::_M_deallocate(circle*, unsigned long) [250]
-----------------------------------------------
                0.00    0.00       1/1           std::vector<circle, std::allocator<circle> >::push_back(circle const&) [338]
[336]    0.0    0.00    0.00       1         std::vector<circle, std::allocator<circle> >::end() [336]
                0.00    0.00       1/2           __gnu_cxx::__normal_iterator<circle*, std::vector<circle, std::allocator<circle> > >::__normal_iterator(circle* const&) [243]
-----------------------------------------------
                0.00    0.00       1/1           void std::vector<circle, std::allocator<circle> >::_M_insert_aux<circle const&>(__gnu_cxx::__normal_iterator<circle*, std::vector<circle, std::allocator<circle> > >, circle const&) [335]
[337]    0.0    0.00    0.00       1         std::vector<circle, std::allocator<circle> >::begin() [337]
                0.00    0.00       1/2           __gnu_cxx::__normal_iterator<circle*, std::vector<circle, std::allocator<circle> > >::__normal_iterator(circle* const&) [243]
-----------------------------------------------
                0.00    0.00       1/1           whereBall(cimg_library::CImg<unsigned char>&) [2]
[338]    0.0    0.00    0.00       1         std::vector<circle, std::allocator<circle> >::push_back(circle const&) [338]
                0.00    0.00       1/1           std::vector<circle, std::allocator<circle> >::end() [336]
                0.00    0.00       1/1           void std::vector<circle, std::allocator<circle> >::_M_insert_aux<circle const&>(__gnu_cxx::__normal_iterator<circle*, std::vector<circle, std::allocator<circle> > >, circle const&) [335]
-----------------------------------------------
                0.00    0.00       1/1           whereBall(cimg_library::CImg<unsigned char>&) [2]
[339]    0.0    0.00    0.00       1         std::vector<circle, std::allocator<circle> >::vector() [339]
                0.00    0.00       1/1           std::_Vector_base<circle, std::allocator<circle> >::_Vector_base() [329]
-----------------------------------------------
                0.00    0.00       1/1           whereBall(cimg_library::CImg<unsigned char>&) [2]
[340]    0.0    0.00    0.00       1         std::vector<circle, std::allocator<circle> >::~vector() [340]
                0.00    0.00       1/4           std::_Vector_base<circle, std::allocator<circle> >::_M_get_Tp_allocator() [191]
                0.00    0.00       1/1           std::_Vector_base<circle, std::allocator<circle> >::~_Vector_base() [330]
                0.00    0.00       1/2           void std::_Destroy<circle*, circle>(circle*, circle*, std::allocator<circle>&) [259]
-----------------------------------------------
                0.00    0.00       1/1           whereBall(cimg_library::CImg<unsigned char>&) [2]
[341]    0.0    0.00    0.00       1         std::vector<circle, std::allocator<circle> >::operator[](unsigned long) [341]
-----------------------------------------------
                0.00    0.00       1/1           findOutlines(cimg_library::CImg<unsigned char>) [11]
[342]    0.0    0.00    0.00       1         std::vector<outline, std::allocator<outline> >::vector() [342]
                0.00    0.00       1/1           std::_Vector_base<outline, std::allocator<outline> >::_Vector_base() [333]
-----------------------------------------------
                0.00    0.00       1/1           whereBall(cimg_library::CImg<unsigned char>&) [2]
[343]    0.0    0.00    0.00       1         std::vector<outline, std::allocator<outline> >::~vector() [343]
                0.00    0.00       1/10          std::_Vector_base<outline, std::allocator<outline> >::_M_get_Tp_allocator() [147]
                0.00    0.00       1/4           void std::_Destroy<outline*, outline>(outline*, outline*, std::allocator<outline>&) [198]
                0.00    0.00       1/1           std::_Vector_base<outline, std::allocator<outline> >::~_Vector_base() [334]
-----------------------------------------------
                0.00    0.00       1/1           cimg_library::CImgException::CImgException() [264]
[344]    0.0    0.00    0.00       1         std::exception::exception() [344]
-----------------------------------------------
                0.00    0.00       1/1           void std::vector<circle, std::allocator<circle> >::_M_insert_aux<circle const&>(__gnu_cxx::__normal_iterator<circle*, std::vector<circle, std::allocator<circle> > >, circle const&) [335]
[345]    0.0    0.00    0.00       1         circle const& std::forward<circle const&>(std::remove_reference<circle const&>::type&) [345]
-----------------------------------------------

 This table describes the call tree of the program, and was sorted by
 the total amount of time spent in each function and its children.

 Each entry in this table consists of several lines.  The line with the
 index number at the left hand margin lists the current function.
 The lines above it list the functions that called this function,
 and the lines below it list the functions this one called.
 This line lists:
     index	A unique number given to each element of the table.
		Index numbers are sorted numerically.
		The index number is printed next to every function name so
		it is easier to look up where the function in the table.

     % time	This is the percentage of the `total' time that was spent
		in this function and its children.  Note that due to
		different viewpoints, functions excluded by options, etc,
		these numbers will NOT add up to 100%.

     self	This is the total amount of time spent in this function.

     children	This is the total amount of time propagated into this
		function by its children.

     called	This is the number of times the function was called.
		If the function called itself recursively, the number
		only includes non-recursive calls, and is followed by
		a `+' and the number of recursive calls.

     name	The name of the current function.  The index number is
		printed after it.  If the function is a member of a
		cycle, the cycle number is printed between the
		function's name and the index number.


 For the function's parents, the fields have the following meanings:

     self	This is the amount of time that was propagated directly
		from the function into this parent.

     children	This is the amount of time that was propagated from
		the function's children into this parent.

     called	This is the number of times this parent called the
		function `/' the total number of times the function
		was called.  Recursive calls to the function are not
		included in the number after the `/'.

     name	This is the name of the parent.  The parent's index
		number is printed after it.  If the parent is a
		member of a cycle, the cycle number is printed between
		the name and the index number.

 If the parents of the function cannot be determined, the word
 `<spontaneous>' is printed in the `name' field, and all the other
 fields are blank.

 For the function's children, the fields have the following meanings:

     self	This is the amount of time that was propagated directly
		from the child into the function.

     children	This is the amount of time that was propagated from the
		child's children to the function.

     called	This is the number of times the function called
		this child `/' the total number of times the child
		was called.  Recursive calls by the child are not
		listed in the number after the `/'.

     name	This is the name of the child.  The child's index
		number is printed after it.  If the child is a
		member of a cycle, the cycle number is printed
		between the name and the index number.

 If there are any cycles (circles) in the call graph, there is an
 entry for the cycle-as-a-whole.  This entry shows who called the
 cycle (as parents) and the members of the cycle (as children.)
 The `+' recursive calls entry shows the number of function calls that
 were internal to the cycle, and the calls entry for each member shows,
 for that member, how many times it was called from other members of
 the cycle.


Index by function name

 [260] _GLOBAL__sub_I_WHITE  [161] __gnu_cxx::new_allocator<point>::new_allocator() [329] std::_Vector_base<circle, std::allocator<circle> >::_Vector_base()
 [261] _GLOBAL__sub_I_main   [128] __gnu_cxx::new_allocator<point>::~new_allocator() [330] std::_Vector_base<circle, std::allocator<circle> >::~_Vector_base()
   [6] threshhold(cimg_library::CImg<unsigned char>&, hsv) [302] __gnu_cxx::new_allocator<circle>::deallocate(circle*, unsigned long) [218] std::_Vector_base<outline, std::allocator<outline> >::_M_allocate(unsigned long)
  [11] findOutlines(cimg_library::CImg<unsigned char>) [303] __gnu_cxx::new_allocator<circle>::allocate(unsigned long, void const*) [331] std::_Vector_base<outline, std::allocator<outline> >::_Vector_impl::_Vector_impl()
  [64] findEquidistant(point, point, point) [304] __gnu_cxx::new_allocator<circle>::construct(circle*, circle const&) [332] std::_Vector_base<outline, std::allocator<outline> >::_Vector_impl::~_Vector_impl()
  [65] findIntersection(line, line) [305] __gnu_cxx::new_allocator<circle>::new_allocator() [192] std::_Vector_base<outline, std::allocator<outline> >::_M_deallocate(outline*, unsigned long)
   [9] booleanEdgeDetect(cimg_library::CImg<unsigned char>&) [306] __gnu_cxx::new_allocator<circle>::~new_allocator() [147] std::_Vector_base<outline, std::allocator<outline> >::_M_get_Tp_allocator()
  [56] findPerpendicularLine(point, point) [205] __gnu_cxx::new_allocator<outline>::deallocate(outline*, unsigned long) [333] std::_Vector_base<outline, std::allocator<outline> >::_Vector_base()
 [262] __static_initialization_and_destruction_0(int, int) [206] __gnu_cxx::new_allocator<outline>::allocate(unsigned long, void const*) [334] std::_Vector_base<outline, std::allocator<outline> >::~_Vector_base()
 [263] __static_initialization_and_destruction_0(int, int) [207] void __gnu_cxx::new_allocator<outline>::construct<outline>(outline*, outline&&) [86] std::move_iterator<possibleCenter*>::move_iterator(possibleCenter*)
  [20] MAX3(int, int, int)   [307] __gnu_cxx::new_allocator<outline>::new_allocator() [58] std::move_iterator<point*>::move_iterator(point*)
  [21] MIN3(int, int, int)   [308] __gnu_cxx::new_allocator<outline>::~new_allocator() [49] std::move_iterator<point*>::operator++()
   [8] getRgb(cimg_library::CImg<unsigned char>&, int, int) [101] __gnu_cxx::__normal_iterator<possibleCenter*, std::vector<possibleCenter, std::allocator<possibleCenter> > >::__normal_iterator(possibleCenter* const&) [193] std::move_iterator<circle*>::move_iterator(circle*)
  [12] setRgb(cimg_library::CImg<unsigned char>&, int, int, rgb) [66] __gnu_cxx::__normal_iterator<point*, std::vector<point, std::allocator<point> > >::__normal_iterator(point* const&) [136] std::move_iterator<outline*>::move_iterator(outline*)
  [47] square(float)         [243] __gnu_cxx::__normal_iterator<circle*, std::vector<circle, std::allocator<circle> > >::__normal_iterator(circle* const&) [219] std::move_iterator<outline*>::operator++()
  [13] floodfill(cimg_library::CImg<unsigned char>&, int, int) [162] __gnu_cxx::__normal_iterator<outline*, std::vector<outline, std::allocator<outline> > >::__normal_iterator(outline* const&) [69] point* std::__uninitialized_copy<false>::__uninit_copy<std::move_iterator<point*>, point*>(std::move_iterator<point*>, std::move_iterator<point*>, point*)
   [2] whereBall(cimg_library::CImg<unsigned char>&) [26] __gnu_cxx::__normal_iterator<point const*, std::vector<point, std::allocator<point> > >::__normal_iterator(point const* const&) [174] outline* std::__uninitialized_copy<false>::__uninit_copy<std::move_iterator<outline*>, outline*>(std::move_iterator<outline*>, std::move_iterator<outline*>, outline*)
 [264] cimg_library::CImgException::CImgException() [244] __gnu_cxx::__normal_iterator<circle const*, std::vector<circle, std::allocator<circle> > >::__normal_iterator(circle const* const&) [105] possibleCenter* std::__uninitialized_copy<true>::__uninit_copy<std::move_iterator<possibleCenter*>, possibleCenter*>(std::move_iterator<possibleCenter*>, std::move_iterator<possibleCenter*>, possibleCenter*)
 [265] cimg_library::CImgException::~CImgException() [33] bool __gnu_cxx::operator==<point const*, std::vector<point, std::allocator<point> > >(__gnu_cxx::__normal_iterator<point const*, std::vector<point, std::allocator<point> > > const&, __gnu_cxx::__normal_iterator<point const*, std::vector<point, std::allocator<point> > > const&) [251] circle* std::__uninitialized_copy<true>::__uninit_copy<std::move_iterator<circle*>, circle*>(std::move_iterator<circle*>, std::move_iterator<circle*>, circle*)
 [266] cimg_library::CImgIOException::CImgIOException(char const*, ...) [309] bool __gnu_cxx::operator==<circle const*, std::vector<circle, std::allocator<circle> > >(__gnu_cxx::__normal_iterator<circle const*, std::vector<circle, std::allocator<circle> > > const&, __gnu_cxx::__normal_iterator<circle const*, std::vector<circle, std::allocator<circle> > > const&) [137] void std::vector<possibleCenter, std::allocator<possibleCenter> >::_M_insert_aux<possibleCenter const&>(__gnu_cxx::__normal_iterator<possibleCenter*, std::vector<possibleCenter, std::allocator<possibleCenter> > >, possibleCenter const&)
 [267] cimg_library::CImg<char>::_system_strescape() [129] __gnu_cxx::__normal_iterator<possibleCenter*, std::vector<possibleCenter, std::allocator<possibleCenter> > >::difference_type __gnu_cxx::operator-<possibleCenter*, std::vector<possibleCenter, std::allocator<possibleCenter> > >(__gnu_cxx::__normal_iterator<possibleCenter*, std::vector<possibleCenter, std::allocator<possibleCenter> > > const&, __gnu_cxx::__normal_iterator<possibleCenter*, std::vector<possibleCenter, std::allocator<possibleCenter> > > const&) [138] std::vector<possibleCenter, std::allocator<possibleCenter> >::end()
 [229] cimg_library::CImg<char>::end() [91] __gnu_cxx::__normal_iterator<point*, std::vector<point, std::allocator<point> > >::difference_type __gnu_cxx::operator-<point*, std::vector<point, std::allocator<point> > >(__gnu_cxx::__normal_iterator<point*, std::vector<point, std::allocator<point> > > const&, __gnu_cxx::__normal_iterator<point*, std::vector<point, std::allocator<point> > > const&) [139] std::vector<possibleCenter, std::allocator<possibleCenter> >::begin()
 [199] cimg_library::CImg<char>::data() [310] __gnu_cxx::__normal_iterator<circle*, std::vector<circle, std::allocator<circle> > >::difference_type __gnu_cxx::operator-<circle*, std::vector<circle, std::allocator<circle> > >(__gnu_cxx::__normal_iterator<circle*, std::vector<circle, std::allocator<circle> > > const&, __gnu_cxx::__normal_iterator<circle*, std::vector<circle, std::allocator<circle> > > const&) [99] std::vector<possibleCenter, std::allocator<possibleCenter> >::push_back(possibleCenter const&)
 [268] cimg_library::CImg<char>::fill(char) [208] __gnu_cxx::__normal_iterator<outline*, std::vector<outline, std::allocator<outline> > >::difference_type __gnu_cxx::operator-<outline*, std::vector<outline, std::allocator<outline> > >(__gnu_cxx::__normal_iterator<outline*, std::vector<outline, std::allocator<outline> > > const&, __gnu_cxx::__normal_iterator<outline*, std::vector<outline, std::allocator<outline> > > const&) [220] std::vector<possibleCenter, std::allocator<possibleCenter> >::vector()
 [230] cimg_library::CImg<char>::swap(cimg_library::CImg<char>&) [311] cimg_library::CImg<char>::data() const [221] std::vector<possibleCenter, std::allocator<possibleCenter> >::~vector()
 [269] cimg_library::CImg<char>::assign(char const*, unsigned int, unsigned int, unsigned int, unsigned int) [163] cimg_library::CImg<char>::size() const [52] std::vector<possibleCenter, std::allocator<possibleCenter> >::operator[](unsigned long)
 [200] cimg_library::CImg<char>::assign() [312] cimg_library::CImg<char>::is_empty() const [41] void std::vector<point, std::allocator<point> >::emplace_back<point>(point&&)
 [270] cimg_library::CImg<char>& cimg_library::CImg<char>::assign<char>(cimg_library::CImg<char> const&) [313] cimg_library::CImg<char>::operator+() const [116] void std::vector<point, std::allocator<point> >::_M_insert_aux<point const&>(__gnu_cxx::__normal_iterator<point*, std::vector<point, std::allocator<point> > >, point const&)
 [271] cimg_library::CImg<char>::string(char const*, bool) [146] cimg_library::CImg<unsigned char>::size() const [112] void std::vector<point, std::allocator<point> >::_M_insert_aux<point>(__gnu_cxx::__normal_iterator<point*, std::vector<point, std::allocator<point> > >, point&&)
 [231] cimg_library::CImg<char>::move_to(cimg_library::CImg<char>&) [24] cimg_library::CImg<unsigned char>::width() const [94] std::vector<point, std::allocator<point> >::end()
 [272] cimg_library::CImgList<char>& cimg_library::CImg<char>::move_to<char>(cimg_library::CImgList<char>&, unsigned int) [18] cimg_library::CImg<unsigned char>::height() const [95] std::vector<point, std::allocator<point> >::begin()
 [232] cimg_library::CImg<char>::CImg(char const*, unsigned int, unsigned int, unsigned int, unsigned int, bool) [185] cimg_library::CImg<unsigned char>::is_empty() const [42] std::vector<point, std::allocator<point> >::pop_back()
 [273] cimg_library::CImg<char>::CImg(cimg_library::CImg<char> const&) [314] cimg_library::CImgList<char>::get_append(char, float) const [43] std::vector<point, std::allocator<point> >::push_back(point&&)
 [274] cimg_library::CImg<char>::CImg(cimg_library::CImg<char> const&, bool) [315] cimg_library::CImgList<char>::is_empty() const [75] std::vector<point, std::allocator<point> >::push_back(point const&)
 [275] cimg_library::CImg<char>::CImg(unsigned int, unsigned int, unsigned int, unsigned int, char) [316] cimg_library::CImgList<char>::operator cimg_library::CImg<char> const*() const [175] std::vector<point, std::allocator<point> >::vector(std::vector<point, std::allocator<point> >&&)
 [119] cimg_library::CImg<char>::CImg() [317] cimg_library::CImgList<char>::operator>(char) const [176] std::vector<point, std::allocator<point> >::vector()
 [113] cimg_library::CImg<char>::~CImg() [97] __gnu_cxx::new_allocator<possibleCenter>::max_size() const [140] std::vector<point, std::allocator<point> >::~vector()
 [276] cimg_library::CImg<char>::operator=(cimg_library::CImg<char> const&) [63] __gnu_cxx::new_allocator<point>::max_size() const [32] std::vector<point, std::allocator<point> >::operator[](unsigned long)
 [157] cimg_library::CImg<char>::operator char*() [209] __gnu_cxx::new_allocator<circle>::max_size() const [335] void std::vector<circle, std::allocator<circle> >::_M_insert_aux<circle const&>(__gnu_cxx::__normal_iterator<circle*, std::vector<circle, std::allocator<circle> > >, circle const&)
 [233] cimg_library::CImg<float>::CImg(unsigned int, unsigned int, unsigned int, unsigned int) [151] __gnu_cxx::new_allocator<outline>::max_size() const [336] std::vector<circle, std::allocator<circle> >::end()
 [234] cimg_library::CImg<float>::~CImg() [83] __gnu_cxx::__normal_iterator<possibleCenter*, std::vector<possibleCenter, std::allocator<possibleCenter> > >::base() const [337] std::vector<circle, std::allocator<circle> >::begin()
 [277] cimg_library::CImg<unsigned char>::_load_jpeg(_IO_FILE*, char const*) [57] __gnu_cxx::__normal_iterator<point*, std::vector<point, std::allocator<point> > >::base() const [338] std::vector<circle, std::allocator<circle> >::push_back(circle const&)
 [278] cimg_library::CImg<unsigned char>::load_other(char const*) [187] __gnu_cxx::__normal_iterator<circle*, std::vector<circle, std::allocator<circle> > >::base() const [339] std::vector<circle, std::allocator<circle> >::vector()
 [279] cimg_library::CImg<unsigned char>::pixel_type() [130] __gnu_cxx::__normal_iterator<outline*, std::vector<outline, std::allocator<outline> > >::base() const [340] std::vector<circle, std::allocator<circle> >::~vector()
 [280] cimg_library::CImg<unsigned char>::load_magick(char const*) [27] __gnu_cxx::__normal_iterator<point const*, std::vector<point, std::allocator<point> > >::base() const [341] std::vector<circle, std::allocator<circle> >::operator[](unsigned long)
 [281] cimg_library::CImg<unsigned char>::load_imagemagick_external(char const*) [245] __gnu_cxx::__normal_iterator<circle const*, std::vector<circle, std::allocator<circle> > >::base() const [222] void std::vector<outline, std::allocator<outline> >::emplace_back<outline>(outline&&)
   [4] cimg_library::CImg<unsigned char>::blur(float, bool, bool) [102] std::_Vector_base<possibleCenter, std::allocator<possibleCenter> >::_M_get_Tp_allocator() const [223] void std::vector<outline, std::allocator<outline> >::_M_insert_aux<outline>(__gnu_cxx::__normal_iterator<outline*, std::vector<outline, std::allocator<outline> > >, outline&&)
   [5] cimg_library::CImg<unsigned char>::blur(float, float, float, bool, bool) [67] std::_Vector_base<point, std::allocator<point> >::_M_get_Tp_allocator() const [224] std::vector<outline, std::allocator<outline> >::end()
  [23] cimg_library::CImg<unsigned char>::data(unsigned int, unsigned int, unsigned int, unsigned int) [246] std::_Vector_base<circle, std::allocator<circle> >::_M_get_Tp_allocator() const [225] std::vector<outline, std::allocator<outline> >::begin()
 [235] cimg_library::CImg<unsigned char>::fill(unsigned char) [164] std::_Vector_base<outline, std::allocator<outline> >::_M_get_Tp_allocator() const [226] std::vector<outline, std::allocator<outline> >::push_back(outline&&)
 [282] cimg_library::CImg<unsigned char>::load(char const*) [84] std::move_iterator<possibleCenter*>::base() const [342] std::vector<outline, std::allocator<outline> >::vector()
 [283] cimg_library::CImg<unsigned char>::assign(char const*) [31] std::move_iterator<point*>::base() const [343] std::vector<outline, std::allocator<outline> >::~vector()
 [236] cimg_library::CImg<unsigned char>::assign(unsigned char const*, unsigned int, unsigned int, unsigned int, unsigned int) [48] std::move_iterator<point*>::operator*() const [227] std::vector<outline, std::allocator<outline> >::operator[](unsigned long)
 [186] cimg_library::CImg<unsigned char>::assign(unsigned int, unsigned int, unsigned int, unsigned int) [188] std::move_iterator<circle*>::base() const [344] std::exception::exception()
 [237] cimg_library::CImg<unsigned char>& cimg_library::CImg<unsigned char>::assign<unsigned char>(cimg_library::CImg<unsigned char> const&) [118] std::move_iterator<outline*>::base() const [50] _ZSt10_ConstructI5pointIS0_EEvPT_DpOT0_
   [3] cimg_library::CImg<unsigned char>::deriche(float, int, char, bool) [210] std::move_iterator<outline*>::operator*() const [228] _ZSt10_ConstructI7outlineIS0_EEvPT_DpOT0_
 [284] cimg_library::CImg<unsigned char>::load_pnm(_IO_FILE*) [131] std::vector<possibleCenter, std::allocator<possibleCenter> >::_M_check_len(unsigned long, char const*) const [51] point* std::__addressof<point>(point&)
 [285] cimg_library::CImg<unsigned char>::_load_pnm(_IO_FILE*, char const*) [46] std::vector<possibleCenter, std::allocator<possibleCenter> >::size() const [152] outline* std::__addressof<outline>(outline&)
 [286] cimg_library::CImg<unsigned char>::load_jpeg(char const*) [103] std::vector<possibleCenter, std::allocator<possibleCenter> >::max_size() const [87] std::_Miter_base<std::move_iterator<possibleCenter*> >::iterator_type std::__miter_base<std::move_iterator<possibleCenter*> >(std::move_iterator<possibleCenter*>)
 [287] cimg_library::CImg<unsigned char>::CImg(char const*) [92] std::vector<point, std::allocator<point> >::_M_check_len(unsigned long, char const*) const [194] std::_Miter_base<std::move_iterator<circle*> >::iterator_type std::__miter_base<std::move_iterator<circle*> >(std::move_iterator<circle*>)
 [288] cimg_library::CImg<unsigned char>::CImg(cimg_library::CImg<unsigned char> const&) [34] std::vector<point, std::allocator<point> >::end() const [77] std::_Niter_base<possibleCenter*>::iterator_type std::__niter_base<possibleCenter*>(possibleCenter*)
 [238] cimg_library::CImg<unsigned char>::CImg(unsigned int, unsigned int, unsigned int, unsigned int, unsigned char) [29] std::vector<point, std::allocator<point> >::size() const [177] std::_Niter_base<circle*>::iterator_type std::__niter_base<circle*>(circle*)
 [289] cimg_library::CImg<unsigned char>::CImg() [35] std::vector<point, std::allocator<point> >::begin() const [106] possibleCenter* std::__copy_move_a<true, possibleCenter*, possibleCenter*>(possibleCenter*, possibleCenter*, possibleCenter*)
 [184] cimg_library::CImg<unsigned char>::~CImg() [36] std::vector<point, std::allocator<point> >::empty() const [252] circle* std::__copy_move_a<true, circle*, circle*>(circle*, circle*, circle*)
 [239] cimg_library::CImg<unsigned char>::operator=(cimg_library::CImg<unsigned char> const&) [68] std::vector<point, std::allocator<point> >::max_size() const [107] possibleCenter* std::__copy_move_a2<true, possibleCenter*, possibleCenter*>(possibleCenter*, possibleCenter*, possibleCenter*)
  [10] cimg_library::CImg<unsigned char>::operator()(unsigned int, unsigned int, unsigned int) [318] std::vector<circle, std::allocator<circle> >::_M_check_len(unsigned long, char const*) const [253] circle* std::__copy_move_a2<true, circle*, circle*>(circle*, circle*, circle*)
 [114] cimg_library::cimg::Mutex_attr() [319] std::vector<circle, std::allocator<circle> >::end() const [88] std::move_iterator<possibleCenter*> std::make_move_iterator<possibleCenter*>(possibleCenter* const&)
 [144] cimg_library::cimg::Mutex_info::lock(unsigned int) [165] std::vector<circle, std::allocator<circle> >::size() const [59] std::move_iterator<point*> std::make_move_iterator<point*>(point* const&)
 [145] cimg_library::cimg::Mutex_info::unlock(unsigned int) [320] std::vector<circle, std::allocator<circle> >::begin() const [195] std::move_iterator<circle*> std::make_move_iterator<circle*>(circle* const&)
 [290] cimg_library::cimg::Mutex_info::Mutex_info() [321] std::vector<circle, std::allocator<circle> >::empty() const [141] std::move_iterator<outline*> std::make_move_iterator<outline*>(outline* const&)
 [158] cimg_library::cimg::strcasecmp(char const*, char const*) [247] std::vector<circle, std::allocator<circle> >::max_size() const [108] possibleCenter* std::uninitialized_copy<std::move_iterator<possibleCenter*>, possibleCenter*>(std::move_iterator<possibleCenter*>, std::move_iterator<possibleCenter*>, possibleCenter*)
 [155] cimg_library::cimg::strncasecmp(char const*, char const*, int) [211] std::vector<outline, std::allocator<outline> >::_M_check_len(unsigned long, char const*) const [70] point* std::uninitialized_copy<std::move_iterator<point*>, point*>(std::move_iterator<point*>, std::move_iterator<point*>, point*)
 [148] cimg_library::cimg::exception_mode() [120] std::vector<outline, std::allocator<outline> >::size() const [254] circle* std::uninitialized_copy<std::move_iterator<circle*>, circle*>(std::move_iterator<circle*>, std::move_iterator<circle*>, circle*)
 [240] cimg_library::cimg::split_filename(char const*, char*) [166] std::vector<outline, std::allocator<outline> >::max_size() const [178] outline* std::uninitialized_copy<std::move_iterator<outline*>, outline*>(std::move_iterator<outline*>, std::move_iterator<outline*>, outline*)
 [149] cimg_library::cimg::_exception_mode(unsigned int, bool) [212] std::allocator<possibleCenter>::allocator() [109] possibleCenter* std::__uninitialized_copy_a<std::move_iterator<possibleCenter*>, possibleCenter*, possibleCenter>(std::move_iterator<possibleCenter*>, std::move_iterator<possibleCenter*>, possibleCenter*, std::allocator<possibleCenter>&)
 [291] cimg_library::cimg::imagemagick_path(char const*, bool) [213] std::allocator<possibleCenter>::~allocator() [71] point* std::__uninitialized_copy_a<std::move_iterator<point*>, point*, point>(std::move_iterator<point*>, std::move_iterator<point*>, point*, std::allocator<point>&)
 [292] cimg_library::cimg::winformat_string(char*) [167] std::allocator<point>::allocator(std::allocator<point> const&) [255] circle* std::__uninitialized_copy_a<std::move_iterator<circle*>, circle*, circle>(std::move_iterator<circle*>, std::move_iterator<circle*>, circle*, std::allocator<circle>&)
 [293] cimg_library::cimg::superset<long, long>::type cimg_library::cimg::min<long, long>(long const&, long const&) [168] std::allocator<point>::allocator() [179] outline* std::__uninitialized_copy_a<std::move_iterator<outline*>, outline*, outline>(std::move_iterator<outline*>, std::move_iterator<outline*>, outline*, std::allocator<outline>&)
 [241] void cimg_library::cimg::swap<char*>(char*&, char*&) [132] std::allocator<point>::~allocator() [110] possibleCenter* std::__uninitialized_move_a<possibleCenter*, possibleCenter*, std::allocator<possibleCenter> >(possibleCenter*, possibleCenter*, possibleCenter*, std::allocator<possibleCenter>&)
 [242] void cimg_library::cimg::swap<bool>(bool&, bool&) [322] std::allocator<circle>::allocator() [72] point* std::__uninitialized_move_a<point*, point*, std::allocator<point> >(point*, point*, point*, std::allocator<point>&)
 [156] void cimg_library::cimg::swap<unsigned int>(unsigned int&, unsigned int&) [323] std::allocator<circle>::~allocator() [256] circle* std::__uninitialized_move_a<circle*, circle*, std::allocator<circle> >(circle*, circle*, circle*, std::allocator<circle>&)
 [294] cimg_library::cimg::type<unsigned char>::string() [324] std::allocator<outline>::allocator() [180] outline* std::__uninitialized_move_a<outline*, outline*, std::allocator<outline> >(outline*, outline*, outline*, std::allocator<outline>&)
 [295] cimg_library::cimg::fopen(char const*, char const*) [325] std::allocator<outline>::~allocator() [19] std::abs(float)
 [296] int cimg_library::cimg::fread<unsigned char>(unsigned char*, unsigned long, _IO_FILE*) [76] std::_Iter_base<possibleCenter*, false>::_S_base(possibleCenter*) [196] std::exp(float)
 [115] cimg_library::cimg::mutex(unsigned int, int) [169] std::_Iter_base<circle*, false>::_S_base(circle*) [78] unsigned long const& std::max<unsigned long>(unsigned long const&, unsigned long const&)
 [100] cimg_library::cimg::uncase(char) [85] std::_Iter_base<std::move_iterator<possibleCenter*>, true>::_S_base(std::move_iterator<possibleCenter*>) [111] possibleCenter* std::copy<std::move_iterator<possibleCenter*>, possibleCenter*>(std::move_iterator<possibleCenter*>, std::move_iterator<possibleCenter*>, possibleCenter*)
 [297] cimg_library::CImgList<char>::insert(cimg_library::CImg<char> const&, unsigned int, bool) [189] std::_Iter_base<std::move_iterator<circle*>, true>::_S_base(std::move_iterator<circle*>) [257] circle* std::copy<std::move_iterator<circle*>, circle*>(std::move_iterator<circle*>, std::move_iterator<circle*>, circle*)
 [298] cimg_library::CImgList<char>::insert(unsigned int, unsigned int) [104] possibleCenter* std::__copy_move<true, true, std::random_access_iterator_tag>::__copy_m<possibleCenter>(possibleCenter const*, possibleCenter const*, possibleCenter*) [30] std::remove_reference<point&>::type&& std::move<point&>(point&)
 [299] cimg_library::CImgList<char>::CImgList() [248] circle* std::__copy_move<true, true, std::random_access_iterator_tag>::__copy_m<circle>(circle const*, circle const*, circle*) [181] std::remove_reference<outline&>::type&& std::move<outline&>(outline&)
 [300] cimg_library::CImgList<char>::~CImgList() [190] void std::_Destroy_aux<false>::__destroy<outline*>(outline*, outline*) [182] std::remove_reference<std::vector<point, std::allocator<point> >&>::type&& std::move<std::vector<point, std::allocator<point> >&>(std::vector<point, std::allocator<point> >&)
 [301] cimg_library::CImgList<char>::operator cimg_library::CImg<char>*() [121] void std::_Destroy_aux<true>::__destroy<possibleCenter*>(possibleCenter*, possibleCenter*) [55] std::sqrt(float)
  [54] precisePoint::distanceTo(point) [79] void std::_Destroy_aux<true>::__destroy<point*>(point*, point*) [60] std::isnan(float)
  [53] possibleCenter::compare(precisePoint, float) [249] void std::_Destroy_aux<true>::__destroy<circle*>(circle*, circle*) [25] point&& std::forward<point>(std::remove_reference<point>::type&)
  [22] hsv::compare(hsv, float, float) [133] std::_Vector_base<possibleCenter, std::allocator<possibleCenter> >::_M_allocate(unsigned long) [142] outline&& std::forward<outline>(std::remove_reference<outline>::type&)
   [7] rgb::getHsv()         [214] std::_Vector_base<possibleCenter, std::allocator<possibleCenter> >::_Vector_impl::_Vector_impl() [143] possibleCenter const& std::forward<possibleCenter const&>(std::remove_reference<possibleCenter const&>::type&)
  [37] point::point(int, int) [215] std::_Vector_base<possibleCenter, std::allocator<possibleCenter> >::_Vector_impl::~_Vector_impl() [117] point const& std::forward<point const&>(std::remove_reference<point const&>::type&)
 [125] point::point()        [122] std::_Vector_base<possibleCenter, std::allocator<possibleCenter> >::_M_deallocate(possibleCenter*, unsigned long) [345] circle const& std::forward<circle const&>(std::remove_reference<circle const&>::type&)
  [38] point::~point()        [96] std::_Vector_base<possibleCenter, std::allocator<possibleCenter> >::_M_get_Tp_allocator() [183] void std::_Destroy<outline>(outline*)
  [73] outline::addPoint(point) [216] std::_Vector_base<possibleCenter, std::allocator<possibleCenter> >::_Vector_base() [123] void std::_Destroy<possibleCenter*>(possibleCenter*, possibleCenter*)
 [201] outline::isCircle()   [217] std::_Vector_base<possibleCenter, std::allocator<possibleCenter> >::~_Vector_base() [124] void std::_Destroy<possibleCenter*, possibleCenter>(possibleCenter*, possibleCenter*, std::allocator<possibleCenter>&)
 [159] outline::outline(outline&&) [93] std::_Vector_base<point, std::allocator<point> >::_M_allocate(unsigned long) [81] void std::_Destroy<point*>(point*, point*)
 [202] outline::outline()    [170] std::_Vector_base<point, std::allocator<point> >::_Vector_impl::_Vector_impl(std::allocator<point> const&) [82] void std::_Destroy<point*, point>(point*, point*, std::allocator<point>&)
 [150] outline::~outline()   [171] std::_Vector_base<point, std::allocator<point> >::_Vector_impl::_Vector_impl() [258] void std::_Destroy<circle*>(circle*, circle*)
 [126] __gnu_cxx::new_allocator<possibleCenter>::deallocate(possibleCenter*, unsigned long) [134] std::_Vector_base<point, std::allocator<point> >::_Vector_impl::~_Vector_impl() [259] void std::_Destroy<circle*, circle>(circle*, circle*, std::allocator<circle>&)
 [127] __gnu_cxx::new_allocator<possibleCenter>::allocate(unsigned long, void const*) [80] std::_Vector_base<point, std::allocator<point> >::_M_deallocate(point*, unsigned long) [197] void std::_Destroy<outline*>(outline*, outline*)
  [98] __gnu_cxx::new_allocator<possibleCenter>::construct(possibleCenter*, possibleCenter const&) [62] std::_Vector_base<point, std::allocator<point> >::_M_get_Tp_allocator() [198] void std::_Destroy<outline*, outline>(outline*, outline*, std::allocator<outline>&)
 [203] __gnu_cxx::new_allocator<possibleCenter>::new_allocator() [172] std::_Vector_base<point, std::allocator<point> >::_Vector_base(std::_Vector_base<point, std::allocator<point> >&&) [61] std::isfinite(float)
 [204] __gnu_cxx::new_allocator<possibleCenter>::~new_allocator() [173] std::_Vector_base<point, std::allocator<point> >::_Vector_base() [44] bool std::operator==<point*>(std::move_iterator<point*> const&, std::move_iterator<point*> const&)
  [89] __gnu_cxx::new_allocator<point>::deallocate(point*, unsigned long) [135] std::_Vector_base<point, std::allocator<point> >::~_Vector_base() [153] bool std::operator==<outline*>(std::move_iterator<outline*> const&, std::move_iterator<outline*> const&)
  [39] __gnu_cxx::new_allocator<point>::destroy(point*) [326] std::_Vector_base<circle, std::allocator<circle> >::_M_allocate(unsigned long) [45] bool std::operator!=<point*>(std::move_iterator<point*> const&, std::move_iterator<point*> const&)
  [90] __gnu_cxx::new_allocator<point>::allocate(unsigned long, void const*) [327] std::_Vector_base<circle, std::allocator<circle> >::_Vector_impl::_Vector_impl() [154] bool std::operator!=<outline*>(std::move_iterator<outline*> const&, std::move_iterator<outline*> const&)
  [74] __gnu_cxx::new_allocator<point>::construct(point*, point const&) [328] std::_Vector_base<circle, std::allocator<circle> >::_Vector_impl::~_Vector_impl() [28] operator new(unsigned long, void*)
  [40] void __gnu_cxx::new_allocator<point>::construct<point>(point*, point&&) [250] std::_Vector_base<circle, std::allocator<circle> >::_M_deallocate(circle*, unsigned long)
 [160] __gnu_cxx::new_allocator<point>::new_allocator(__gnu_cxx::new_allocator<point> const&) [191] std::_Vector_base<circle, std::allocator<circle> >::_M_get_Tp_allocator()
